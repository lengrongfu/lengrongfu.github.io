"use strict";(self.webpackChunkblogs=self.webpackChunkblogs||[]).push([[8130],{7735:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"kubelet-fore-analyze","metadata":{"permalink":"/blog/kubelet-fore-analyze","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-08-30-kubelet-fore-analyze.md","source":"@site/blog/2024-08-30-kubelet-fore-analyze.md","title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e09\uff09 probeCH","description":"\u5728\u4ee3\u7801\u4e2d\u662f\u6ca1\u6709 probeCh \u8fd9\u4e2a chan \u7684\uff0c\u4e3b\u8981\u662f\u7531 livenessManager readinessManager startupManager \u8fd9\u4e09\u4e2a\u63a2\u9488\u7684 chan \u6784\u6210\u7684\u3002","date":"2024-08-30T00:00:00.000Z","tags":[{"inline":true,"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"inline":false,"label":"Kubelet","permalink":"/blog/tags/Kubelet","description":"Kubelet"}],"readingTime":3.95,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"kubelet-fore-analyze","title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e09\uff09 probeCH","authors":["rongfu"],"tags":["kubernetes","Kubelet"]},"unlisted":false,"nextItem":{"title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e8c\uff09 plegCH","permalink":"/blog/kubelet-three-analyze"}},"content":"\u5728\u4ee3\u7801\u4e2d\u662f\u6ca1\u6709 `probeCh` \u8fd9\u4e2a `chan` \u7684\uff0c\u4e3b\u8981\u662f\u7531 `livenessManager` `readinessManager` `startupManager` \u8fd9\u4e09\u4e2a\u63a2\u9488\u7684 `chan` \u6784\u6210\u7684\u3002\\n\x3c!-- truncate --\x3e\\n\\n\u5728\u4ee3\u7801\u4e2d\u662f\u6ca1\u6709 `probeCh` \u8fd9\u4e2a `chan` \u7684\uff0c\u4e3b\u8981\u662f\u7531 `livenessManager` `readinessManager` `startupManager` \u8fd9\u4e09\u4e2a\u63a2\u9488\u7684 `chan` \u6784\u6210\u7684\u3002\\n\\n\u5b83\u4eec\u7684\u6838\u5fc3\u5b9e\u73b0\u5728  `probeManager prober.Manager` \u4e0a\u3002\\n\\n![probch.png](https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Ff8dcda60-944c-4a62-8c8f-61fcd9f9dfcd.svg?alt=media&token=c0378f71-cc9c-4c0a-b023-86555e7fbe37)\\n\\n`probeCh` \u662f\u5206\u522b\u4ee3\u8868\u4e09\u4e2a  `chan` ,\u5206\u522b\u662f `livenessCh` `readinessCh` `startupCh` ,\u5728\u56fe\u4e2d\u8fdb\u884c\u4e86\u7edf\u4e00\uff0c\u4f46\u662f `code` \u4e2d\u662f\u4e09\u4e2a\u901a\u9053\u3002\\n\\n### ProbeManager\\n\\nManager\u4f1a\u4e3a\u6bcf\u4e2a\u6307\u5b9a\u4e86\u63a2\u6d4b\u7684\u5bb9\u5668\u521b\u5efa\u4e00\u4e2a\u63a2\u6d4b\u201cworker\u201d\uff08AddPod\u65b9\u6cd5\uff09\u3002\u8fd9\u4e9bworker\u4f1a\u5b9a\u671f\u5bf9\u5176\u5206\u914d\u7684\u5bb9\u5668\u8fdb\u884c\u63a2\u6d4b\uff0c\u5e76\u5c06\u7ed3\u679c\u7f13\u5b58\u8d77\u6765\u3002\u5f53\u9700\u8981\u66f4\u65b0Pod\u7684\u72b6\u6001\uff08PodStatus\uff09\u65f6\uff0cManager\u4f1a\u5229\u7528\u8fd9\u4e9b\u7f13\u5b58\u7684\u63a2\u6d4b\u7ed3\u679c\u6765\u8bbe\u7f6ePod\u7684Ready\u72b6\u6001\uff08UpdatePodStatus\u65b9\u6cd5\uff09\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u76ee\u524d\u4e0d\u652f\u6301\u66f4\u65b0\u63a2\u6d4b\u53c2\u6570\u3002\\n\\n`Manager` \u4f1a\u4e3a\u6bcf\u4e2a\u6307\u5b9a\u6765\u63a2\u6d4b\u7684\u5bb9\u5668\u90fd\u521b\u5efa\u4e00\u4e2a `worker`, \u8fd9\u4e9b `worker` \u4f1a\u5b9a\u671f\u5bf9\u5176\u5206\u914d\u7684\u5bb9\u5668\u8fdb\u884c\u63a2\u6d4b\uff0c\u5e76\u7f13\u5b58\u7ed3\u679c\uff0c\u66f4\u65b0 `pod` \u72b6\u6001\u65f6\u4f1a\u5229\u7528\u8fd9\u4e9b\u53c2\u6570\u6765\u66f4\u65b0\u3002\\n\\n```protobuf\\ntype Manager interface {\\n\\t// AddPod creates new probe workers for every container probe. This should be called for every\\n\\t// pod created.\\n\\tAddPod(pod *v1.Pod)\\n\\n\\t// StopLivenessAndStartup handles stopping liveness and startup probes during termination.\\n\\tStopLivenessAndStartup(pod *v1.Pod)\\n\\n\\t// RemovePod handles cleaning up the removed pod state, including terminating probe workers and\\n\\t// deleting cached results.\\n\\tRemovePod(pod *v1.Pod)\\n\\n\\t// CleanupPods handles cleaning up pods which should no longer be running.\\n\\t// It takes a map of \\"desired pods\\" which should not be cleaned up.\\n\\tCleanupPods(desiredPods map[types.UID]sets.Empty)\\n\\n\\t// UpdatePodStatus modifies the given PodStatus with the appropriate Ready state for each\\n\\t// container based on container running status, cached probe results and worker states.\\n\\tUpdatePodStatus(*v1.Pod, *v1.PodStatus)\\n}\\n```\\n\\n\u5728 `AddPod` \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u4e86\u904d\u5386\u6240\u6709 `container` \uff0c\u7136\u540e\u6323\u5bf9\u914d\u7f6e\u7684\u4e0d\u540c\u63a2\u9488\uff0c\u542f\u52a8 `work`,\u6bcf\u4e2a\u63a2\u9488\u4f7f\u7528\u4e00\u4e2a\u534f\u7a0b\u8fd0\u884c\u3002\\n\\n```protobuf\\nfunc (m *manager) AddPod(pod *v1.Pod) {\\n\\tm.workerLock.Lock()\\n\\tdefer m.workerLock.Unlock()\\n\\n\\tkey := probeKey{podUID: pod.UID}\\n\\tfor _, c := range append(pod.Spec.Containers, getRestartableInitContainers(pod)...) {\\n\\t\\tkey.containerName = c.Name\\n\\n\\t\\tif c.StartupProbe != nil {\\n\\t\\t\\tkey.probeType = startup\\n\\t\\t\\tif _, ok := m.workers[key]; ok {\\n\\t\\t\\t\\t\\n\\t\\t\\t\\treturn\\n\\t\\t\\t}\\n\\t\\t\\tw := newWorker(m, startup, pod, c)\\n\\t\\t\\tm.workers[key] = w\\n\\t\\t\\tgo w.run()\\n\\t\\t}\\n\\n\\t\\tif c.ReadinessProbe != nil {\\n\\t\\t\\tkey.probeType = readiness\\n\\t\\t\\tif _, ok := m.workers[key]; ok {\\n\\t\\t\\t\\t\\n\\t\\t\\t\\treturn\\n\\t\\t\\t}\\n\\t\\t\\tw := newWorker(m, readiness, pod, c)\\n\\t\\t\\tm.workers[key] = w\\n\\t\\t\\tgo w.run()\\n\\t\\t}\\n\\n\\t\\tif c.LivenessProbe != nil {\\n\\t\\t\\tkey.probeType = liveness\\n\\t\\t\\tif _, ok := m.workers[key]; ok {\\n\\t\\t\\t\\treturn\\n\\t\\t\\t}\\n\\t\\t\\tw := newWorker(m, liveness, pod, c)\\n\\t\\t\\tm.workers[key] = w\\n\\t\\t\\tgo w.run()\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\n\u5f80\u4e0b\u5c31\u662f\u6839\u636e\u914d\u7f6e\u7684\u63a2\u9488\u7c7b\u578b\u8c03\u7528\u63a2\u6d4b\u903b\u8f91\uff1a\\n\\n```protobuf\\nfunc (pb *prober) runProbe(ctx context.Context, probeType probeType, p *v1.Probe, pod *v1.Pod, status v1.PodStatus, container v1.Container, containerID kubecontainer.ContainerID) (probe.Result, string, error) {\\n\\tswitch {\\n\\tcase p.Exec != nil:\\n\\t\\tcommand := kubecontainer.ExpandContainerCommandOnlyStatic(p.Exec.Command, container.Env)\\n\\t\\treturn pb.exec.Probe(pb.newExecInContainer(ctx, container, containerID, command, timeout))\\n\\n\\tcase p.HTTPGet != nil:\\n\\t\\treq, err := httpprobe.NewRequestForHTTPGetAction(p.HTTPGet, &container, status.PodIP, \\"probe\\")\\n\\t\\treturn pb.http.Probe(req, timeout)\\n\\n\\tcase p.TCPSocket != nil:\\n\\t\\tport, err := probe.ResolveContainerPort(p.TCPSocket.Port, &container)\\n\\t\\treturn pb.tcp.Probe(host, port, timeout)\\n\\n\\tcase p.GRPC != nil:\\n\\t\\thost := status.PodIP\\n\\t\\treturn pb.grpc.Probe(host, service, int(p.GRPC.Port), timeout)\\n\\tdefault:\\n\\t\\tklog.InfoS(\\"Failed to find probe builder for container\\", \\"containerName\\", container.Name)\\n\\t\\treturn probe.Unknown, \\"\\", fmt.Errorf(\\"missing probe handler for %s:%s\\", format.Pod(pod), container.Name)\\n\\t}\\n}\\n```\\n\\n### livenessManager\u3001readinessManager\u3001startupManager\\n\\n\u8fd9\u4e09\u4e2a\u63a2\u9488\u7684 `result` \u90fd\u662f\u4ece `prober.Manager` \u4e2d\u5199\u5165\u7684\uff0c\u53ea\u662f\u6bcf\u4e2a\u63a2\u9488\u6709\u4e00\u4e2a `chan` , `syncLoopIteration` \u63a5\u6536\u5230\u5c31\u662f\u6267\u884c `handler.HandlePodSyncs` \u64cd\u4f5c\u3002\\n\\n```protobuf\\nfunc (kl *Kubelet) syncLoopIteration(ctx context.Context, configCh <-chan kubetypes.PodUpdate, handler SyncHandler,\\n\\tsyncCh <-chan time.Time, housekeepingCh <-chan time.Time, plegCh <-chan *pleg.PodLifecycleEvent) bool {\\n\\tselect {\\n\\tcase update := <-kl.livenessManager.Updates():\\n\\t\\tif update.Result == proberesults.Failure {\\n\\t\\t\\thandleProbeSync(kl, update, handler, \\"liveness\\", \\"unhealthy\\")\\n\\t\\t}\\n\\tcase update := <-kl.readinessManager.Updates():\\n\\t\\tready := update.Result == proberesults.Success\\n\\t\\tkl.statusManager.SetContainerReadiness(update.PodUID, update.ContainerID, ready)\\n\\n\\t\\tstatus := \\"\\"\\n\\t\\tif ready {\\n\\t\\t\\tstatus = \\"ready\\"\\n\\t\\t}\\n\\t\\thandleProbeSync(kl, update, handler, \\"readiness\\", status)\\n\\tcase update := <-kl.startupManager.Updates():\\n\\t\\tstarted := update.Result == proberesults.Success\\n\\t\\tkl.statusManager.SetContainerStartup(update.PodUID, update.ContainerID, started)\\n\\n\\t\\tstatus := \\"unhealthy\\"\\n\\t\\tif started {\\n\\t\\t\\tstatus = \\"started\\"\\n\\t\\t}\\n\\t\\thandleProbeSync(kl, update, handler, \\"startup\\", status)\\n\\t}\\n\\treturn true\\n}\\n```"},{"id":"kubelet-three-analyze","metadata":{"permalink":"/blog/kubelet-three-analyze","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-08-29-kubelet-three-analyze.md","source":"@site/blog/2024-08-29-kubelet-three-analyze.md","title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e8c\uff09 plegCH","description":"PLEG \u5168\u79f0\u662f Pod Lifecycle Event Generator \uff0c\u5b83\u4e3b\u8981\u901a\u8fc7\u8bfb\u53d6 container \u7684 Event \u6765\u66f4\u65b0 Pod \u7684\u72b6\u6001\uff0c\u76ee\u524d\u63d0\u4f9b\u4e86 GenericPLEG \u548c EventedPLEG \u4e24\u79cd\u6a21\u5f0f\uff0c\u4e0d\u540c\u70b9 GenericPLEG \u662f\u5b9a\u65f6\u53bb\u8bfb\u53d6\u4e8b\u4ef6\uff0cEventedPLEG \u65f6\u901a\u8fc7\u4e3b\u52a8\u63a5\u53d7\u4e8b\u4ef6\u7684\u63a8\u9001\u3002","date":"2024-08-29T00:00:00.000Z","tags":[{"inline":true,"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"inline":false,"label":"Kubelet","permalink":"/blog/tags/Kubelet","description":"Kubelet"}],"readingTime":6.33,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"kubelet-three-analyze","title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e8c\uff09 plegCH","authors":["rongfu"],"tags":["kubernetes","Kubelet"]},"unlisted":false,"prevItem":{"title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e09\uff09 probeCH","permalink":"/blog/kubelet-fore-analyze"},"nextItem":{"title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e00\uff09 podUpdateCh","permalink":"/blog/kubelet-two-analyze"}},"content":"`PLEG` \u5168\u79f0\u662f `Pod Lifecycle Event Generator` \uff0c\u5b83\u4e3b\u8981\u901a\u8fc7\u8bfb\u53d6 `container` \u7684 `Event` \u6765\u66f4\u65b0 `Pod` \u7684\u72b6\u6001\uff0c\u76ee\u524d\u63d0\u4f9b\u4e86 `GenericPLEG` \u548c `EventedPLEG` \u4e24\u79cd\u6a21\u5f0f\uff0c\u4e0d\u540c\u70b9 `GenericPLEG` \u662f\u5b9a\u65f6\u53bb\u8bfb\u53d6\u4e8b\u4ef6\uff0c`EventedPLEG` \u65f6\u901a\u8fc7\u4e3b\u52a8\u63a5\u53d7\u4e8b\u4ef6\u7684\u63a8\u9001\u3002\\n\x3c!-- truncate --\x3e\\n\\n`PLEG` \u5168\u79f0\u662f `Pod Lifecycle Event Generator` \uff0c\u5b83\u4e3b\u8981\u901a\u8fc7\u8bfb\u53d6 `container` \u7684 `Event` \u6765\u66f4\u65b0 `Pod` \u7684\u72b6\u6001\uff0c\u76ee\u524d\u63d0\u4f9b\u4e86 `GenericPLEG` \u548c `EventedPLEG` \u4e24\u79cd\u6a21\u5f0f\uff0c\u4e0d\u540c\u70b9 `GenericPLEG` \u662f\u5b9a\u65f6\u53bb\u8bfb\u53d6\u4e8b\u4ef6\uff0c`EventedPLEG` \u65f6\u901a\u8fc7\u4e3b\u52a8\u63a5\u53d7\u4e8b\u4ef6\u7684\u63a8\u9001\u3002\\n\\n![a](https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F46bd1519-3feb-409c-96b3-98e02692f488.svg?alt=media&token=0f26310c-2165-4755-80c0-d2acc8682ed7)\\n\\n## GenericPLEG\\n\\n\u901a\u7528 `PLEG` \u914d\u7f6e\u7684\u662f\u6bcf\u79d2\u4e2d\u8bfb\u53d6\u4e00\u6b21\u3002\\n\\n```go\\ngenericPlegRelistPeriod    = time.Second * 1\\n```\\n\\n\u8c03\u7528 `Start` \u65b9\u6cd5\u4e4b\u540e\u5c31\u4f1a\u8fdb\u5165\u95f4\u9694 `1s` \u6267\u884c\u4e00\u6b21 `g.Relist` \u8fd9\u4e2a\u65b9\u6cd5\u4e2d\u3002\\n\\n```go\\nfunc (g *GenericPLEG) Start() {\\n\\tif !g.isRunning {\\n\\t\\tgo wait.Until(g.Relist, g.relistDuration.RelistPeriod, g.stopCh)\\n\\t}\\n}\\n```\\n\\n`g.Relist` \u65b9\u6cd5\u6838\u5fc3\u6267\u884c\u6d41\u7a0b\uff1a\\n\\n1. \u83b7\u53d6\u5f53\u524d\u673a\u5668\u4e0a\u7684\u6240\u6709 `Pod`, \u4e3b\u8981\u901a\u8fc7 `CRI-API` \u4e2d\u5b9a\u4e49\u7684 `ListPodSandbox` \u548c `ListContainers` \u4e24\u4e2a\u65b9\u6cd5\u83b7\u53d6\u3002\\n\\n```go\\n// Get all the pods.\\npodList, err := g.runtime.GetPods(ctx, true)\\n```\\n\\n1. \u66f4\u65b0\u5f53\u524d\u7684 `podRecord`\uff0cpodRecord \u4e2d\u4e24\u4e2a\u5bf9\u8c61\uff0c\u4e00\u4e2a `old` ,\u4e00\u4e2a `current` .\\n\\n```go\\ng.podRecords.setCurrent(pods)\\n```\\n\\n1. \u6240\u6709\u7684\u65b0\u8001 `pod` \u7684\u5bb9\u5668\u7ec4\u5230\u4e00\u8d77\u8fdb\u884c\u904d\u5386\u3002\u8fdb\u884c\u65b0\u8001\u7684\u5bf9\u6bd4,\u5982\u679c\u6709 `event` \u53d8\u5316,\u5219\u8bb0\u5f55.\\n    1. \u9996\u5148\u6839\u636e\u5bb9\u5668\u72b6\u6001\u8f6c\u6362\u4e3a `pleg` \u72b6\u6001\\n    \\n    ```go\\n    func convertState(state kubecontainer.State) plegContainerState {\\n    \\tswitch state {\\n    \\tcase kubecontainer.ContainerStateCreated:\\n    \\t\\t// kubelet doesn\'t use the \\"created\\" state yet, hence convert it to \\"unknown\\".\\n    \\t\\treturn plegContainerUnknown\\n    \\tcase kubecontainer.ContainerStateRunning:\\n    \\t\\treturn plegContainerRunning\\n    \\tcase kubecontainer.ContainerStateExited:\\n    \\t\\treturn plegContainerExited\\n    \\tcase kubecontainer.ContainerStateUnknown:\\n    \\t\\treturn plegContainerUnknown\\n    \\tdefault:\\n    \\t\\tpanic(fmt.Sprintf(\\"unrecognized container state: %v\\", state))\\n    \\t}\\n    }\\n    ```\\n    \\n    b. \u4e4b\u540e\u6839\u636e `old` \u548c `current` \u751f\u6210\u7684 `pleg` \u72b6\u6001\u751f\u6210 `PLEGEvent` \\n    \\n    ```go\\n    func generateEvents(podID types.UID, cid string, oldState, newState plegContainerState) []*PodLifecycleEvent {\\n    \\tswitch newState {\\n    \\tcase plegContainerRunning:\\n    \\t\\treturn []*PodLifecycleEvent{{ID: podID, Type: ContainerStarted, Data: cid}}\\n    \\tcase plegContainerExited:\\n    \\t\\treturn []*PodLifecycleEvent{{ID: podID, Type: ContainerDied, Data: cid}}\\n    \\tcase plegContainerUnknown:\\n    \\t\\treturn []*PodLifecycleEvent{{ID: podID, Type: ContainerChanged, Data: cid}}\\n    \\tcase plegContainerNonExistent:\\n    \\t\\tswitch oldState {\\n    \\t\\tcase plegContainerExited:\\n    \\t\\t\\t// We already reported that the container died before.\\n    \\t\\t\\treturn []*PodLifecycleEvent{{ID: podID, Type: ContainerRemoved, Data: cid}}\\n    \\t\\tdefault:\\n    \\t\\t\\treturn []*PodLifecycleEvent{{ID: podID, Type: ContainerDied, Data: cid}, {ID: podID, Type: ContainerRemoved, Data: cid}}\\n    \\t\\t}\\n    \\tdefault:\\n    \\t\\tpanic(fmt.Sprintf(\\"unrecognized container state: %v\\", newState))\\n    \\t}\\n    }\\n    ```\\n    \\n\\n1. \u4f1a\u904d\u5386\u6240\u6709 `Pod` \u7684\u4e8b\u4ef6\uff0c\u7136\u540e\u53d1\u5f80 `eventChannel` \u4e2d\uff0c\u4e4b\u540e\u5c31\u4f1a\u88ab `syncLoopIteration` \u63a5\u6536\u5230\u8fdb\u884c\u5904\u7406\u3002\\n\\n```go\\nfor pid, events := range eventsByPodID {\\n\\t\\t...\\n\\t\\tfor i := range events {\\n\\t\\t\\t// Filter out events that are not reliable and no other components use yet.\\n\\t\\t\\tif events[i].Type == ContainerChanged {\\n\\t\\t\\t\\tcontinue\\n\\t\\t\\t}\\n\\t\\t\\tselect {\\n\\t\\t\\tcase g.eventChannel <- events[i]:\\n\\t\\t\\tdefault:\\n\\t\\t\\t\\tmetrics.PLEGDiscardEvents.Inc()\\n\\t\\t\\t\\tklog.ErrorS(nil, \\"Event channel is full, discard this relist() cycle event\\")\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n```\\n\\n## EventedPLEG\\n\\n\u4e8b\u4ef6 `PLEG` \u4f1a\u521b\u5efa\u4e00\u4e2a `GenericPLEG` ,\u5728\u63a5\u53d7\u4e8b\u4ef6\u5931\u8d25\u6b21\u6570\u8fbe\u5230\u4e0a\u9650\u4e4b\u540e\u5c31\u4f1a\u9000\u56de\u5230 `GenericPLEG` \u7c7b\u578b\uff0c\u4f46\u662f\u5b83\u8bfb\u53d6\u4e00\u6b21\u7684\u65f6\u95f4\u95f4\u9694\u662f `300s`.\\n\\n\u8c03\u7528 `Start` \u65b9\u6cd5\u4e4b\u540e\u5c31\u4f1a\u521b\u5efa\u4e24\u4e2a\u534f\u7a0b\u4e00\u81f4\u63a5\u6536\u6570\u636e\uff0c\u8fd9\u91cc\u548c`GenericPLEG` \u7684\u533a\u522b\u8fd8\u6709\u4e0d\u9700\u8981\u8c03\u7528 `Watch` \u65b9\u6cd5\u3002\\n\\n```go\\nfunc (e *EventedPLEG) Start() {\\n\\t...\\n\\tgo wait.Until(e.watchEventsChannel, 0, e.stopCh)\\n\\tgo wait.Until(e.updateGlobalCache, globalCacheUpdatePeriod, e.stopCacheUpdateCh)\\n}\\n```\\n\\n`e.watchEventsChannel` \u65b9\u6cd5\u6838\u5fc3\u6267\u884c\u6d41\u7a0b\uff1a\\n\\n1. \u9996\u5148\u5224\u65ad\u662f\u5426\u8d85\u8fc7\u6700\u5927\u5c1d\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u662f `e.eventedPlegMaxStreamRetries=5` \u6b21\u3002\u5982\u679c\u8d85\u8fc7\u4e86\u4f1a\u56de\u9000\u5230`GenericPLEG` \u4e0a\u3002\\n\\n```go\\nfunc (e *EventedPLEG) watchEventsChannel() {\\n\\tgo func() {\\n\\t\\tnumAttempts := 0\\n\\t\\tfor {\\n\\t\\t\\tif numAttempts >= e.eventedPlegMaxStreamRetries {\\n\\t\\t\\t\\t  e.Stop()\\n\\t\\t\\t\\t\\te.genericPleg.Stop()       // Stop the existing Generic PLEG which runs with longer relisting period when Evented PLEG is in use.\\n\\t\\t\\t\\t\\te.Update(e.relistDuration) // Update the relisting period to the default value for the Generic PLEG.\\n\\t\\t\\t\\t\\te.genericPleg.Start()\\n\\t\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n\\t\\t\\terr := e.runtimeService.GetContainerEvents(context.Background(), containerEventsResponseCh, func(runtimeapi.RuntimeService_GetContainerEventsClient) {\\n\\t\\t\\t\\tmetrics.EventedPLEGConn.Inc()\\n\\t\\t\\t})\\n\\t\\t\\tif err != nil {\\n\\t\\t\\t  ...\\n\\t\\t\\t\\tnumAttempts++\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}()\\n}\\n```\\n\\n1. `runtimeService.GetContainerEvents` \u83b7\u53d6\u5bb9\u5668\u7684 `Events` , \u6211\u4eec\u770b `proto` \u4e2d\u7684\u5b9a\u4e49\u5c31\u660e\u767d\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u91cc\u53ef\u4ee5\u4e3b\u52a8\u76d1\u542c\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u53d8\u5316\uff0c\u56e0\u4e3a\u5b83\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a `steam` \u7c7b\u578b\\n\\n       `steam` \u5728 `gRPC` \u4e2d\u662f\u4e00\u4e2a\u53cc\u5411\u6d41\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u53cc\u5411\u4f20\u8f93\u3002\\n\\n```protobuf\\nrpc GetContainerEvents(GetEventsRequest) returns (stream ContainerEventResponse) {}\\n```\\n\\n```go\\nfunc (r *remoteRuntimeService) GetContainerEvents(ctx context.Context, containerEventsCh chan *runtimeapi.ContainerEventResponse, connectionEstablishedCallback func(runtimeapi.RuntimeService_GetContainerEventsClient)) error {\\n\\tcontainerEventsStreamingClient, err := r.runtimeClient.GetContainerEvents(ctx, &runtimeapi.GetEventsRequest{})\\n\\t...\\n\\tfor {\\n\\t\\tresp, err := containerEventsStreamingClient.Recv()\\n\\t\\tif err == io.EOF {\\n\\t\\t\\tr.logErr(err, \\"container events stream is closed\\")\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\t\\tif err != nil {\\n\\t\\t\\tr.logErr(err, \\"failed to receive streaming container event\\")\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\t\\tif resp != nil {\\n\\t\\t\\tcontainerEventsCh <- resp\\n\\t\\t\\tr.log(4, \\"container event received\\", \\"resp\\", resp)\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\n1. \u5904\u7406 `Event` , \u5b83\u63a5\u6536\u5230 `Event` \u4e4b\u540e\u4f1a\u6839\u636e\u7c7b\u578b\u53d1\u9001\u5230 `GenericPLEG` \u7ed3\u6784\u4e2d\u7684 `eventChannel` chan \u4e2d\u3002\\n\\n```go\\nfunc (e *EventedPLEG) processCRIEvents(containerEventsResponseCh chan *runtimeapi.ContainerEventResponse) {\\n\\tfor event := range containerEventsResponseCh {\\n    ...\\n\\t\\tif event.ContainerEventType == runtimeapi.ContainerEventType_CONTAINER_DELETED_EVENT {\\n\\t\\t\\tshouldSendPLEGEvent = true\\n\\t\\t} else {\\n\\t\\t\\tif e.cache.Set(podID, status, err, time.Unix(event.GetCreatedAt(), 0)) {\\n\\t\\t\\t\\tshouldSendPLEGEvent = true\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif shouldSendPLEGEvent {\\n\\t\\t\\te.processCRIEvent(event)\\n\\t\\t}\\n\\t}\\n}\\n\\nfunc (e *EventedPLEG) processCRIEvent(event *runtimeapi.ContainerEventResponse) {\\n\\tswitch event.ContainerEventType {\\n\\tcase runtimeapi.ContainerEventType_CONTAINER_STOPPED_EVENT:\\n\\t\\te.sendPodLifecycleEvent(&PodLifecycleEvent{ID: types.UID(event.PodSandboxStatus.Metadata.Uid), Type: ContainerDied, Data: event.ContainerId})\\n\\t\\tklog.V(4).InfoS(\\"Received Container Stopped Event\\", \\"event\\", event.String())\\n\\tcase runtimeapi.ContainerEventType_CONTAINER_CREATED_EVENT:\\n\\t\\tklog.V(4).InfoS(\\"Received Container Created Event\\", \\"event\\", event.String())\\n\\tcase runtimeapi.ContainerEventType_CONTAINER_STARTED_EVENT:\\n\\t\\te.sendPodLifecycleEvent(&PodLifecycleEvent{ID: types.UID(event.PodSandboxStatus.Metadata.Uid), Type: ContainerStarted, Data: event.ContainerId})\\n\\t\\tklog.V(4).InfoS(\\"Received Container Started Event\\", \\"event\\", event.String())\\n\\tcase runtimeapi.ContainerEventType_CONTAINER_DELETED_EVENT:\\n\\t\\te.sendPodLifecycleEvent(&PodLifecycleEvent{ID: types.UID(event.PodSandboxStatus.Metadata.Uid), Type: ContainerDied, Data: event.ContainerId})\\n\\t\\te.sendPodLifecycleEvent(&PodLifecycleEvent{ID: types.UID(event.PodSandboxStatus.Metadata.Uid), Type: ContainerRemoved, Data: event.ContainerId})\\n\\t\\tklog.V(4).InfoS(\\"Received Container Deleted Event\\", \\"event\\", event)\\n\\t}\\n}\\n```\\n\\n## syncLoopIteration\\n\\n\u4e0b\u9762\u6211\u4eec\u6765\u770b\u5728 `syncLoopIteration` \u4e2d\u662f\u5982\u4f55\u5904\u7406\u8fd9\u4e2a `Event` \u7684\u3002\\n\\n```protobuf\\nfunc (kl *Kubelet) syncLoopIteration(ctx context.Context, configCh <-chan kubetypes.PodUpdate, handler SyncHandler,\\n\\tsyncCh <-chan time.Time, housekeepingCh <-chan time.Time, plegCh <-chan *pleg.PodLifecycleEvent) bool {\\n\\tselect {\\n\\tcase e := <-plegCh:\\n\\t\\tif isSyncPodWorthy(e) {\\n\\t\\t\\t// PLEG event for a pod; sync it.\\n\\t\\t\\tif pod, ok := kl.podManager.GetPodByUID(e.ID); ok {\\n\\t\\t\\t\\tklog.V(2).InfoS(\\"SyncLoop (PLEG): event for pod\\", \\"pod\\", klog.KObj(pod), \\"event\\", e)\\n\\t\\t\\t\\thandler.HandlePodSyncs([]*v1.Pod{pod})\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// If the pod no longer exists, ignore the event.\\n\\t\\t\\t\\tklog.V(4).InfoS(\\"SyncLoop (PLEG): pod does not exist, ignore irrelevant event\\", \\"event\\", e)\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif e.Type == pleg.ContainerDied {\\n\\t\\t\\tif containerID, ok := e.Data.(string); ok {\\n\\t\\t\\t\\tkl.cleanUpContainersInPod(e.ID, containerID)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn true\\n}\\n```\\n\\n\u6838\u5fc3\u6267\u884c\u6d41\u7a0b\u5982\u4e0b\uff1a\\n\\n1. \u5982\u679c\u4e0d\u662f `event.Type != pleg.ContainerRemoved` \u79fb\u9664\u4e8b\u4ef6\uff0c\u5219\u8fdb\u5165\u6267\u884c\uff0c\u5982\u679c `Pod` \u8fd8\u5728 `PodManager` \u4e2d\uff0c\u5219\u6267\u884c `HandlePodSyncs` ,\u5426\u5219\u8df3\u8fc7\u3002\\n2. `HandlePodSyncs` \u4e2d\u4e3b\u8981\u662f\u5f80 `podWorkers` \u4e2d\u53d1\u9001 `UpdatePod` \u7684 `SyncPodSync` \u64cd\u4f5c\u3002\\n3. \u5982\u679c\u662f `e.Type == pleg.ContainerDied` \u9000\u51fa\u4e8b\u4ef6\uff0c\u5219\u6e05\u9664\u5bb9\u5668\u3002"},{"id":"kubelet-two-analyze","metadata":{"permalink":"/blog/kubelet-two-analyze","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-08-28-kubelet-two-analyze.md","source":"@site/blog/2024-08-28-kubelet-two-analyze.md","title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e00\uff09 podUpdateCh","description":"podUpdateCh \u4e3b\u8981\u662f\u8d1f\u8d23\u63a5\u6536 Pod \u7684\u6570\u636e\uff0c\u5206\u522b\u4ece\u6587\u4ef6\u3001URL\u3001Kube-APIServer \u4e09\u4e2a\u5730\u65b9\u6765\uff0c\u4e0b\u9762\u5c06\u8be6\u7ec6\u5206\u6790\u8fd9\u4e2a chan \u7684\u8bfb\u5199\u6d41\u7a0b\u3002","date":"2024-08-28T00:00:00.000Z","tags":[{"inline":true,"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"inline":false,"label":"Kubelet","permalink":"/blog/tags/Kubelet","description":"Kubelet"}],"readingTime":4.975,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"kubelet-two-analyze","title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e00\uff09 podUpdateCh","authors":["rongfu"],"tags":["kubernetes","Kubelet"]},"unlisted":false,"prevItem":{"title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e8c\uff09 plegCH","permalink":"/blog/kubelet-three-analyze"},"nextItem":{"title":"kubelet\u6e90\u7801\u5206\u6790(\u4e00)\uff1a\u5de5\u4f5c\u539f\u7406","permalink":"/blog/kubelet-one-analyze"}},"content":"`podUpdateCh` \u4e3b\u8981\u662f\u8d1f\u8d23\u63a5\u6536 `Pod` \u7684\u6570\u636e\uff0c\u5206\u522b\u4ece\u6587\u4ef6\u3001URL\u3001Kube-APIServer \u4e09\u4e2a\u5730\u65b9\u6765\uff0c\u4e0b\u9762\u5c06\u8be6\u7ec6\u5206\u6790\u8fd9\u4e2a `chan` \u7684\u8bfb\u5199\u6d41\u7a0b\u3002\\n\x3c!-- truncate --\x3e\\n\\n`Pod` \u7684 `source` \u5b9a\u4e49\u4e86\u56db\u79cd\u8868\u73b0\u65b9\u5f0f\uff0c\u5728\u4ee3\u7801 `pod_update.go` \\n\\n```go\\n// These constants identify the sources of pods.\\nconst (\\n\\t// Filesource idenitified updates from a file.\\n\\tFileSource = \\"file\\"\\n\\t// HTTPSource identifies updates from querying a web page.\\n\\tHTTPSource = \\"http\\"\\n\\t// ApiserverSource identifies updates from Kubernetes API Server.\\n\\tApiserverSource = \\"api\\"\\n\\t// AllSource identifies updates from all sources.\\n\\tAllSource = \\"*\\"\\n)\\n```\\n\\n![a](https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F7182ab7e-9b66-4472-b508-6ce8abb3bd7e.svg?alt=media&token=dc26e818-bbd5-4c18-8070-70649d577ad7)\\n\\n### File\\n\\n`file` Watch \u529f\u80fd\u53ea\u5728 `linux` \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u652f\u6301\uff0c\u5176\u5b83\u64cd\u4f5c\u7cfb\u7edf\u90fd\u4e0d\u652f\u6301\u3002\\n\\n\u4f1a\u628a `fsnotify` \u76d1\u542c\u7684\u6587\u4ef6\u4e8b\u4ef6\u8f6c\u6362\u4e3a `Pod` \u7684\u64cd\u4f5c\u7c7b\u578b\uff1b\\n\\n```go\\nfunc (s *sourceFile) produceWatchEvent(e *fsnotify.Event) error {\\n\\tvar eventType podEventType\\n\\tswitch {\\n\\tcase (e.Op & fsnotify.Create) > 0:\\n\\t\\teventType = podAdd\\n\\tcase (e.Op & fsnotify.Write) > 0:\\n\\t\\teventType = podModify\\n\\tcase (e.Op & fsnotify.Chmod) > 0:\\n\\t\\teventType = podModify\\n\\tcase (e.Op & fsnotify.Remove) > 0:\\n\\t\\teventType = podDelete\\n\\tcase (e.Op & fsnotify.Rename) > 0:\\n\\t\\teventType = podDelete\\n\\tdefault:\\n\\t\\t// Ignore rest events\\n\\t\\treturn nil\\n\\t}\\n\\n\\ts.watchEvents <- &watchEvent{e.Name, eventType}\\n\\treturn nil\\n}\\n```\\n\\n\u7136\u540e\u6839\u636e\u76d1\u542c\u5230\u7684\u6587\u4ef6\u540d\u7684\u53d8\u5316\uff0c\u6765\u8bfb\u53d6 `Pod` \u7684\u5185\u5bb9\uff0c\u4e4b\u540e\u66f4\u65b0 `store` \u5bf9\u8c61\uff1b\u8fd9\u91cc\u662f\u4ee4\u6211\u5947\u602a\u7684\uff0c\u6211\u4ee5\u4e3a\u5b83\u4f1a\u5f80 `chan` \u91cc\u9762\u53d1\u9001\u4e00\u4e2a\u4e8b\u4ef6\u3002\\n\\n```go\\nfunc (s *sourceFile) consumeWatchEvent(e *watchEvent) error {\\n\\tswitch e.eventType {\\n\\tcase podAdd, podModify:\\n\\t\\tpod, _ := s.extractFromFile(e.fileName)\\n\\t\\treturn s.store.Add(pod)\\n\\tcase podDelete:\\n\\t\\tif objKey, keyExist := s.fileKeyMapping[e.fileName]; keyExist {\\n\\t\\t\\tpod, podExist, err := s.store.GetByKey(objKey)\\n\\t\\t\\tif err = s.store.Delete(pod); err != nil {\\n\\t\\t\\t\\treturn fmt.Errorf(\\"failed to remove deleted pod from cache: %v\\", err)\\n\\t\\t\\t}\\n\\t\\t\\t...\\n\\t\\t}\\n\\t}\\n\\treturn nil\\n}\\n\\n```\\n\\n\u9664\u4e86 `Watch` \u6587\u4ef6\u53d8\u5316\u4e4b\u540e\uff0c\u5b83\u8fd8\u6709\u4e00\u4e2a `time.Ticker` \u6bcf\u9694 `10s` \u4f1a\u6267\u884c\u4e00\u904d\u5168\u91cf\u8bfb\u53d6\u76ee\u5f55\u4e0b `Pod` \u7684\u64cd\u4f5c\uff1b\\n\\n```go\\nfunc (s *sourceFile) run() {\\n\\tlistTicker := time.NewTicker(s.period) #\u9ed8\u8ba4\u914d\u7f6e\u662f10s\\n\\tgo func() {\\n\\t\\t// \u542f\u52a8\u4e4b\u540e\u5148\u8bfb\u53d6\u4e00\u904d\u6240\u6709\u7684\\n\\t\\tif err := s.listConfig(); err != nil {\\n\\t\\t\\tklog.ErrorS(err, \\"Unable to read config path\\", \\"path\\", s.path)\\n\\t\\t}\\n\\t\\tfor {\\n\\t\\t\\tselect {\\n\\t\\t\\tcase <-listTicker.C:\\n\\t\\t\\t\\tif err := s.listConfig(); err != nil {\\n\\t\\t\\t\\t\\tklog.ErrorS(err, \\"Unable to read config path\\", \\"path\\", s.path)\\n\\t\\t\\t\\t}\\n\\t\\t\\tcase e := <-s.watchEvents:\\n\\t\\t\\t\\tif err := s.consumeWatchEvent(e); err != nil {\\n\\t\\t\\t\\t\\tklog.ErrorS(err, \\"Unable to process watch event\\")\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}()\\n\\ts.startWatch()\\n}\\n```\\n\\n\u4e0a\u9762\u6709\u4e00\u4e2a\u7591\u95ee\uff1a\u8fd9\u91cc\u662f\u4ee4\u6211\u5947\u602a\u7684\uff0c\u6211\u4ee5\u4e3a\u5b83\u4f1a\u5f80 `chan` \u91cc\u9762\u53d1\u9001\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53d1\u73b0\u5b83\u7684 `send` \u662f\u5199\u5728 `store.Add\u3001store.Delete`  \u91cc\u9762\u7684\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u89e6\u53d1\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u628a\u5b58\u50a8\u8d77\u6765\u7684 `pod` \u5168\u91cf\u7684\u53d1\u9001\u5230 `chan` \u91cc\u9762. `undelta_store.go#45`\\n\\n```go\\nfunc (u *UndeltaStore) Add(obj interface{}) error {\\n\\tif err := u.Store.Add(obj); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tu.PushFunc(u.Store.List())\\n\\treturn nil\\n}\\nfunc (u *UndeltaStore) Update(obj interface{}) error {\\n\\t...\\n\\tu.PushFunc(u.Store.List())\\n\\treturn nil\\n}\\nfunc (u *UndeltaStore) Delete(obj interface{}) error {\\n\\t...\\n\\tu.PushFunc(u.Store.List())\\n\\treturn nil\\n}\\n```\\n\\n### URL\\n\\n`URL` \u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u7528\u6237\u914d\u7f6e\u7684\u5916\u90e8\u670d\u52a1\u5730\u5740\uff0c\u7136\u540e\u6bcf `20s` \u53bb\u8bbf\u95ee\u4e00\u6b21\u5916\u90e8\u670d\u52a1\u3002\\n\\n```go\\nfunc (s *sourceURL) run() {\\n\\tif err := s.extractFromURL(); err != nil {\\n\\t  ...\\n\\t}\\n}\\n```\\n\\n\u5728 `extractFromURL` \u4f1a\u901a\u8fc7\u8bbf\u95ee `HTTP` GET \u7684\u65b9\u5f0f\u89e3\u6790\u8fd4\u56de\u503c\uff0c\u8fd4\u56de\u5f53\u4e2a\u5bf9\u8c61\u6216\u8005\u662f\u6570\u7ec4\u90fd\u53ef\u4ee5\u89e3\u6790\u6210\u529f\uff0c\u89e3\u6790\u6210\u529f\u4e4b\u540e\u4e5f\u662f\u4f1a\u53d1\u9001\u5230 `merge` \u4e2d\u8fdb\u884c\u5408\u5e76\u5904\u7406\u3002\\n\\n### API\\n\\n`API` \u7684\u65b9\u5f0f\u662f\u901a\u8fc7 `list-watch` \u53bb\u8bfb\u53d6 `kube-apiserver` \u7684\u6570\u636e\uff0c\u5e76\u4e14\u901a\u8fc7 `field` \u8fdb\u884c\u8fc7\u6ee4\u5f53\u524d\u7684\u8282\u70b9\u3002\\n\\n```go\\nlw := cache.NewListWatchFromClient(c.CoreV1().RESTClient(), \\"pods\\", metav1.NamespaceAll, fields.OneTermEqualSelector(\\"spec.nodeName\\", string(nodeName)))\\n```\\n\\n\u4f20\u9012\u7684 `store` \u5bf9\u8c61\u91cc\u9762\u6709 `send` \u7684\u529f\u80fd\uff0c\u548c `file` \u5904\u7406\u903b\u8f91\u4e00\u6837\uff0c\u4e00\u4e2a `pod` \u53d1\u751f\u53d8\u66f4\uff0c\u5c31\u4f1a\u8981\u53d1\u9001\u6240\u6709\u7684 `pod` \u53bb\u6267\u884c `merge` \u64cd\u4f5c\u3002\\n\\n```go\\nr := cache.NewReflector(lw, &v1.Pod{}, cache.NewUndeltaStore(send, cache.MetaNamespaceKeyFunc), 0)\\n```\\n\\n## Merge\\n\\n`merge` \u662f\u4e3a\u4e86\u628a\u4ece\u4e0d\u540c\u7684 `source` \u8fc7\u6765\u7684 `pod` \u8fdb\u4e00\u6b65\u5408\u5e76\uff0c\u907f\u514d\u51fa\u73b0\u91cd\u590d\u3001\u51b2\u7a81\u7684\u64cd\u4f5c\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u4e00\u81f4\u7684\u64cd\u4f5c\uff0c\u6700\u7ec8\u5408\u5e76\u540e\u4f1a\u5f97\u5230\u5404\u79cd\u4e8b\u4ef6\u7684\u7ed3\u679c\uff1a\\n\\n```go\\nadds, updates, deletes, removes, reconciles := s.merge(source, change)\\n```\\n\\n\u5408\u5e76\u7684\u96be\u70b9\u5728\u4e8e\u5224\u65ad\u662f\u4e0d\u662f\u8981\u66f4\u65b0\uff0c\u6dfb\u52a0\u3001\u5220\u9664\u8fd9\u79cd\u573a\u666f\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u4e4b\u524d\u4e0d\u5b58\u5728\u5c31\u6dfb\u52a0\uff0c\u4e4b\u524d\u5b58\u5728\uff0c\u73b0\u5728\u4e0d\u5b58\u5728\u5c31\u5220\u9664\uff0c\u4f46\u662f\u8981\u4e0d\u8981\u66f4\u65b0\u662f\u6bd4\u8f83\u96be\u5224\u65ad\u7684\uff0c\u91cc\u9762\u6709\u4e00\u4e2a `checkAndUpdatePod` \u65b9\u6cd5\u3002\\n\\n```go\\nfunc checkAndUpdatePod(existing, ref *v1.Pod) (needUpdate, needReconcile, needGracefulDelete bool) {\\n\\n   1. \u68c0\u67e5Spec\u3001Labels\u3001DeletionTimestamp\u3001DeletionGracePeriodSeconds\u3001Annotations\u8fd9\u4e9b\u662f\u5426\u53d1\u751f\u53d8\u66f4\\n   2. \u5982\u679c\u90fd\u6ca1\u6709\u53d1\u751f\u53d8\u66f4\u5224\u65adStatus\u662f\u5426\u53d1\u751f\u53d8\u66f4\uff0c\u5982\u679c\u6709\u5219\u66f4\u65b0\uff0c\u6ca1\u6709\u5219\u4e0d\u66f4\u65b0\u3002\\n   3. \u5982\u679cDeletionTimestamp\u4e0d\u4e3a\u7a7a\uff0c\u5219\u9700\u8981\u5220\u9664\\n   ....\\n}\\n```"},{"id":"kubelet-one-analyze","metadata":{"permalink":"/blog/kubelet-one-analyze","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-08-25-kubelet-one-analyze.md","source":"@site/blog/2024-08-25-kubelet-one-analyze.md","title":"kubelet\u6e90\u7801\u5206\u6790(\u4e00)\uff1a\u5de5\u4f5c\u539f\u7406","description":"\u4ece kubelet \u6e90\u7801\u6765\u5206\u6790\u5b83\u7684\u5de5\u4f5c\u539f\u7406.","date":"2024-08-25T00:00:00.000Z","tags":[{"inline":true,"label":"kubernetes","permalink":"/blog/tags/kubernetes"},{"inline":false,"label":"Kubelet","permalink":"/blog/tags/Kubelet","description":"Kubelet"}],"readingTime":8.975,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"kubelet-one-analyze","title":"kubelet\u6e90\u7801\u5206\u6790(\u4e00)\uff1a\u5de5\u4f5c\u539f\u7406","authors":["rongfu"],"tags":["kubernetes","Kubelet"]},"unlisted":false,"prevItem":{"title":"kubelet\u6e90\u7801\u5206\u6790 syncLoopIteration\uff08\u4e00\uff09 podUpdateCh","permalink":"/blog/kubelet-two-analyze"},"nextItem":{"title":"JSON Patch and JSON Merge Patch","permalink":"/blog/jsonpatch-jsonmergepatch"}},"content":"\u4ece `kubelet` \u6e90\u7801\u6765\u5206\u6790\u5b83\u7684\u5de5\u4f5c\u539f\u7406.\\n\x3c!-- truncate --\x3e\\n\\n# kubelet\u6e90\u7801\u5206\u6790(\u4e00)\uff1a\u5de5\u4f5c\u539f\u7406\\n\\n## **kubelet \u5de5\u4f5c\u539f\u7406**\\n\\n![image.png](static/img/2024-08/kubelet-flow.png)\\n\\n`Kubelet` \u7684\u5de5\u4f5c\u6838\u5fc3\u5c31\u662f\u4e00\u4e2a\u63a7\u5236\u5faa\u73af `syncLoop` \uff0c\u9a71\u52a8\u8fd9\u4e2a\u63a7\u5236\u5faa\u73af\u8fd0\u884c\u7684\u4e8b\u4ef6\uff0c\u5305\u62ec: `Pod` \u66f4\u65b0\u4e8b\u4ef6, `Pod` \u751f\u547d\u5468\u671f\u53d8\u5316, `Kubelet` \u672c\u8eab\u8bbe\u7f6e\u7684\u6267\u884c\u5468\u671f\u3001\u5b9a\u65f6\u7684\u6e05\u7406\u4efb\u52a1(`GC` ).\\n\\n\u5728\u8fd9\u4e2a\u5927\u5faa\u73af `syncLoop` \u4e4b\u5916, `kubelet` \u8fd8\u7ef4\u62a4\u7740\u8bb8\u591a\u5176\u4ed6\u7684\u5b57\u63a7\u5236\u5faa\u73af\uff0c\u5c31\u662f\u56fe\u4e2d\u7684\u5c0f\u5706\u5708, \u6bd4\u5982\uff1a\\n\\n- `podManager` :  \u4e3b\u8981\u7528\u4e8e\u5b58\u50a8\u548c\u7ba1\u7406\u671f\u671b\u7684 `Pod` \u96c6\u5408\uff0c\u5305\u62ec\u88ab\u63a5\u53d7\u7684\u5e38\u89c4 `pod` \u548c\u955c\u50cf `pod\uff08mirror pods\uff09`.\\n- `podWorkers`: \u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406 `pod` \u751f\u547d\u5468\u671f\u72b6\u6001\u673a\u7684\u5173\u952e\u7ec4\u4ef6, \u5b83\u4f1a\u5904\u7406 `pod` \u7684\u51e0\u4e2a\u72b6\u6001\\n    - **syncing**\uff1apod \u5e94\u8be5\u6b63\u5728\u8fd0\u884c\uff08\u8c03\u7528`syncPod`\u65b9\u6cd5\uff09\u3002\\n    - **terminating**\uff1apod\u5e94\u8be5\u6b63\u5728\u505c\u6b62\uff08\u8c03\u7528`syncTerminatingPod`\u65b9\u6cd5\uff09\u3002\\n    - **terminated**\uff1apod\u5e94\u8be5\u5df2\u7ecf\u6e05\u7406\u4e86\u6240\u6709\u8d44\u6e90\uff08\u8c03\u7528`syncTerminatedPod`\u65b9\u6cd5\uff09\u3002\\n- `evictionManager`: \u8d1f\u8d23\u76d1\u63a7\u8282\u70b9\u7684\u72b6\u6001\uff0c\u4ee5\u8bc6\u522b\u53ef\u80fd\u5f71\u54cd\u8282\u70b9\u7a33\u5b9a\u6027\u7684\u60c5\u51b5\uff0c\u5e76\u901a\u8fc7\u9a71\u9010pod\uff08\u5c06 `pod` \u72b6\u6001\u8bbe\u7f6e\u4e3a `Failed` \uff0c\u5e76\u7ed9\u51fa\u539f\u56e0 `Evicted` \uff09\u6765\u51cf\u8f7b\u8d44\u6e90\u538b\u529b; \u5e76\u4f9d\u8d56`podWorker`\u7684\u6743\u5a01\u6027\u6765\u6267\u884c\u9a71\u9010\u64cd\u4f5c\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u8d44\u6e90\u538b\u529b\u8fc7\u5927\u6216\u5176\u4ed6\u5f71\u54cd\u8282\u70b9\u7a33\u5b9a\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u53ca\u65f6\u91c7\u53d6\u63aa\u65bd\uff0c\u6062\u590d\u8282\u70b9\u7684\u6b63\u5e38\u8fd0\u884c\\n- `probeManager` : \u4f1a\u5b9a\u65f6\u53bb\u76d1\u63a7 `Pod` \u4e2d\u5bb9\u5668\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u5f53\u524d\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u63a2\u9488: `livenessProbe` \u548c `readinessProbe` .\\n- `secretManager`: \u662f `kubelet` \u4e2d\u8d1f\u8d23\u7f13\u5b58\u548c\u7ba1\u7406\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\u7684 `pod` \u6240\u4f7f\u7528\u7684 `secret` \u7684\u7ec4\u4ef6\uff0c\u5b83\u901a\u8fc7\u4e0e`podWorkers`\xa0\u7684\u534f\u4f5c\uff0c\u786e\u4fdd\u5728 `pod` \u542f\u52a8\u548c\u7ec8\u6b62\u65f6\u6b63\u786e\u5730\u83b7\u53d6\u548c\u6e05\u7406 `secret`\uff0c\u5e76\u4fdd\u6301 `secret` \u7684\u6700\u65b0\u72b6\u6001\u3002\\n- `configMapManager`: \u662f `kubelet` \u4e2d\u8d1f\u8d23\u7f13\u5b58\u548c\u7ba1\u7406\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\u7684 `pod` \u6240\u4f7f\u7528\u7684 `configmap` \u7684\u7ec4\u4ef6\u3002\u5b83\u901a\u8fc7\u4e0e`podWorkers`\xa0\u7684\u534f\u4f5c\uff0c\u786e\u4fdd\u5728 `pod` \u542f\u52a8\u548c\u7ec8\u6b62\u65f6\u6b63\u786e\u5730\u83b7\u53d6\u548c\u6e05\u7406 `configmap`, \u5e76\u4fdd\u6301 `configmap` \u7684\u6700\u65b0\u72b6\u6001\u3002\\n- `volumeManager` : \u662f `kubelet` \u4e2d\u8d1f\u8d23\u7ba1\u7406\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\u7684 `pod` \u6240\u4f7f\u7528\u7684\u5377\u7684\u7ec4\u4ef6\u3002\u5b83\u901a\u8fc7\u89c2\u5bdf `pod` \u7684\u751f\u547d\u5468\u671f\uff0c\u6267\u884c\u5fc5\u8981\u7684\u5377\u64cd\u4f5c\uff0c\u5e76\u5b9a\u671f\u540c\u6b65\u5377\u72b6\u6001\u4ee5\u786e\u4fdd\u4e0e\u5b9e\u9645\u671f\u671b\u7684\u5377\u96c6\u5408\u4e00\u81f4\uff0c\u5e76\u7ba1\u7406\u8fd9\u4e9b `pod` \u7684\u751f\u547d\u5468\u671f\u4e2d\u6d89\u53ca\u7684\u5377\uff08volumes\uff09\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a\\n    - \u6302\u8f7d\uff08attaching\uff09\uff1a\u5c06\u5377\u8fde\u63a5\u5230\u8282\u70b9\u3002\\n    - \u6302\u8f7d\uff08mounting\uff09\uff1a\u5c06\u5377\u6302\u8f7d\u5230pod\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\\n    - \u5378\u8f7d\uff08unmounting\uff09\uff1a\u4ecepod\u7684\u6587\u4ef6\u7cfb\u7edf\u5378\u8f7d\u5377\u3002\\n    - \u5206\u79bb\uff08detaching\uff09\uff1a\u4ece\u8282\u70b9\u65ad\u5f00\u5377\u7684\u8fde\u63a5\u3002\\n- `statusManager`: \u662f `kubelet` \u4e2d\u8d1f\u8d23\u66f4\u65b0\u548c\u7ba1\u7406 `pod` \u72b6\u6001\u7684\u7ec4\u4ef6\u3002\u5b83\u4ece`podWorker`\u63a5\u6536\u72b6\u6001\u66f4\u65b0\uff0c\u5e76\u5c06\u8fd9\u4e9b\u66f4\u65b0\u540c\u6b65\u5230 `API` \u670d\u52a1\u5668\u4e2d\u3002`statusManager`\xa0\u5bf9\u4e8e `kubelet` \u5408\u6210\u7684 `pod` \u72b6\u6001\u5177\u6709\u6743\u5a01\u6027\uff0c\u5176\u4ed6\u7ec4\u4ef6\u5e94\u8be5\u54a8\u8be2\u5b83\u4ee5\u83b7\u53d6\u6b63\u786e\u7684\u72b6\u6001\u4fe1\u606f\u3002\u540c\u65f6\uff0c\u7531\u4e8e`statusManager`\xa0\u4f9d\u8d56\u4e8e`podWorker`\uff0c\u56e0\u6b64\u9700\u8981\u68c0\u67e5 `pod` \u8fd0\u884c\u72b6\u6001\u7684\u7ec4\u4ef6\u5e94\u8be5\u76f4\u63a5\u54a8\u8be2`podWorker`\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd `pod` \u72b6\u6001\u7684\u4e00\u81f4\u6027\u548c\u51c6\u786e\u6027\uff0c\u4ece\u800c\u4fdd\u8bc1\u6574\u4e2a\u7cfb\u7edf\u7684\u6b63\u5e38\u8fd0\u884c\u3002\\n- `imageManager` : \u662fkubelet\u4e2d\u8d1f\u8d23\u7ba1\u7406\u955c\u50cf\u5783\u573e\u56de\u6536\u7684\u7ec4\u4ef6\u3002\u5b83\u901a\u8fc7\u5b9a\u671f\u68c0\u67e5\u548c\u6e05\u7406\u4e0d\u518d\u4f7f\u7528\u7684\u955c\u50cf\uff0c\u5e2e\u52a9\u7ef4\u62a4\u8282\u70b9\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u786e\u4fdd\u8282\u70b9\u6709\u8db3\u591f\u7684\u8d44\u6e90\u6765\u8fd0\u884c\u65b0\u7684pod\\n- `containerLogManager` : \u662fkubelet\u4e2d\u8d1f\u8d23\u7ba1\u7406\u5bb9\u5668\u65e5\u5fd7\u7684\u7ec4\u4ef6\u3002\u5b83\u901a\u8fc7\u6536\u96c6\u3001\u5b58\u50a8\u3001\u8f6e\u8f6c\u548c\u6e05\u7406\u5bb9\u5668\u65e5\u5fd7\uff0c\u786e\u4fdd\u65e5\u5fd7\u6570\u636e\u7684\u53ef\u7528\u6027\u548c\u8282\u70b9\u7684\u78c1\u76d8\u7a7a\u95f4\u4e0d\u4f1a\u88ab\u8fc7\u5ea6\u6d88\u8017\u3002\\n- `serverCertificateManager`: \u662fkubelet\u4e2d\u8d1f\u8d23\u5904\u7406\u8bc1\u4e66\u8f6e\u6362\u7684\u7ec4\u4ef6\u3002\u5b83\u901a\u8fc7\u76d1\u63a7\u8bc1\u4e66\u7684\u6709\u6548\u671f\uff0c\u81ea\u52a8\u8fdb\u884c\u8bc1\u4e66\u8f6e\u6362\uff0c\u5e76\u786e\u4fdd\u6240\u6709\u76f8\u5173\u7ec4\u4ef6\u80fd\u591f\u4f7f\u7528\u65b0\u7684\u8bc1\u4e66\u3002\u8fd9\u4e2a\u7ec4\u4ef6\u5bf9\u4e8e\u7ef4\u62a4\u96c6\u7fa4\u7684\u5b89\u5168\u901a\u4fe1\u548c\u9632\u6b62\u8bc1\u4e66\u8fc7\u671f\u5bfc\u81f4\u7684\u670d\u52a1\u4e2d\u65ad\u975e\u5e38\u91cd\u8981\u3002\\n- `cloudResourceSyncManager`: \u662fkubelet\u4e2d\u8d1f\u8d23\u5904\u7406\u5411\u4e91\u670d\u52a1\u63d0\u4f9b\u5546\u53d1\u9001\u8bf7\u6c42\u7684\u7ec4\u4ef6\u3002\u5b83\u901a\u8fc7\u8bbe\u7f6e\u8bf7\u6c42\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u786e\u4fdd\u8bf7\u6c42\u5728\u9884\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u5e76\u5904\u7406\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u9519\u8bef\u3002\\n- `Runtime` \u76f8\u5173\u7684\u5b57\u6bb5\uff1a\\n    - `containerRuntime`: \u662fkubelet\u4e2d\u8d1f\u8d23\u7ba1\u7406\u5bb9\u5668\u751f\u547d\u5468\u671f\u7684\u7ec4\u4ef6\u3002\u5b83\u4e0e\u5e95\u5c42\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\uff08\u5982Docker\u3001containerd\u3001CRI-O\u7b49\uff09\u8fdb\u884c\u901a\u4fe1\uff0c\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\\n    - **`streamingRuntime`:** \u8d1f\u8d23\u5904\u7406\u5bb9\u5668\u7684\u6d41\u5f0f\u64cd\u4f5c\uff0c\u5982\u65e5\u5fd7\u6d41\u3001exec\u547d\u4ee4\u548c\u7aef\u53e3\u8f6c\u53d1\u7b49\\n    - **`runtimeService` :**  \u662f\u4e00\u4e2a\u5185\u90e8API\u670d\u52a1\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e0e\u5bb9\u5668\u8fd0\u884c\u65f6\u8fdb\u884c\u4ea4\u4e92\u7684\u63a5\u53e3\u3002\u8fd9\u4e2a\u670d\u52a1\u901a\u5e38\u662f\u5bb9\u5668\u8fd0\u884c\u65f6\u63a5\u53e3\uff08Container Runtime Interface, CRI\uff09\u7684\u4e00\u90e8\u5206\uff1b\u5728\u5185\u90e8\u4e3b\u8981\u662f\u8c03\u7528 `containerRuntime` \u8fd9\u4e2a\u5bf9\u8c61\u53bb\u7ba1\u7406\u5bb9\u5668\u3002\\n- `PLEG` \u76f8\u5173\u7684\u5b57\u6bb5\uff1a**PLEG**\xa0\u662f\u57fa\u4e8e\u8f6e\u8be2\u7684\u5b9a\u671f\u68c0\u67e5\u673a\u5236\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u62a5\u544a\u5bb9\u5668\u72b6\u6001\u7684\u53d8\u5316, **eventedPleg**\xa0\u662f\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u7684\u5b9e\u65f6\u54cd\u5e94\u673a\u5236\uff0c\u7528\u4e8e\u4ee5\u4f4e\u5ef6\u8fdf\u63d0\u4f9b\u5bb9\u5668\u72b6\u6001\u7684\u53d8\u5316\u3002\\n    - `PLEG\uff08Pod Lifecycle Event Generator\uff09`:\\n        1. **\u5b9a\u671f\u68c0\u67e5**\uff1aPLEG \u5b9a\u671f\uff08\u901a\u5e38\u662f\u6bcf\u9694\u51e0\u79d2\u949f\uff09\u68c0\u67e5\u6240\u6709pod\u548c\u5bb9\u5668\u7684\u72b6\u6001\uff0c\u5e76\u5c06\u72b6\u6001\u53d8\u5316\u751f\u6210\u4e8b\u4ef6\u3002\\n        2. **\u8f6e\u8be2\u673a\u5236**\uff1aPLEG \u4f7f\u7528\u8f6e\u8be2\u673a\u5236\u6765\u68c0\u6d4b\u5bb9\u5668\u72b6\u6001\u7684\u53d8\u5316\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u9700\u8981\u5b9a\u671f\u626b\u63cf\u6240\u6709\u5bb9\u5668\uff0c\u5373\u4f7f\u6ca1\u6709\u72b6\u6001\u53d8\u5316\u4e5f\u4f1a\u8fdb\u884c\u68c0\u67e5\u3002\\n        3. **\u5ef6\u8fdf**\uff1a\u7531\u4e8e\u662f\u5b9a\u671f\u68c0\u67e5\uff0cPLEG \u53ef\u80fd\u4f1a\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf\uff0c\u56e0\u4e3a\u5b83\u9700\u8981\u7b49\u5f85\u4e0b\u4e00\u4e2a\u68c0\u67e5\u5468\u671f\u624d\u80fd\u53d1\u73b0\u72b6\u6001\u53d8\u5316\u3002\\n    - `eventedPleg` :\\n        1. **\u4e8b\u4ef6\u9a71\u52a8**\uff1a`eventedPleg`\xa0\u901a\u8fc7\u76d1\u542c\u5bb9\u5668\u8fd0\u884c\u65f6\u7684\u4e8b\u4ef6\u6765\u5b9e\u65f6\u83b7\u53d6\u5bb9\u5668\u72b6\u6001\u7684\u53d8\u5316\uff0c\u800c\u4e0d\u662f\u5b9a\u671f\u68c0\u67e5\u3002\\n        2. **\u4f4e\u5ef6\u8fdf**\uff1a`eventedPleg`\xa0\u53ef\u4ee5\u5728\u5bb9\u5668\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\u7acb\u5373\u54cd\u5e94\uff0c\u56e0\u6b64\u5177\u6709\u66f4\u4f4e\u7684\u5ef6\u8fdf\u3002\\n        3. **\u8fb9\u7f18\u9a71\u52a8**\uff1a`eventedPleg`\xa0\u5728\u5bb9\u5668\u72b6\u6001\u53d8\u5316\u7684\u8fb9\u7f18\uff08\u5373\u4e8b\u4ef6\u53d1\u751f\u65f6\uff09\u89e6\u53d1\u54cd\u5e94\uff0c\u800c\u4e0d\u662f\u5728\u5468\u671f\u6027\u7684\u68c0\u67e5\u70b9\u3002\\n- `containerRefManager` : \u5bb9\u5668\u5f15\u7528\u7684\u7ba1\u7406\uff0c\u7528\u6765\u62a5\u544a\u5bb9\u5668\u7684\u521b\u5efa\u3001\u5931\u8d25\u4e8b\u4ef6\u7b49.\\n\\n\u4e0a\u8ff0\u63cf\u8ff0\u4e86 `Kubelet` \u7ed3\u6784\u4f53\u4e2d\u5b9a\u4e49\u7684\u6838\u5fc3\u7684\u5b57\u6bb5\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u6709\u5f88\u591a\u5b57\u6bb5\uff0c\u4e00\u4e9b\u5b57\u6bb5\u6bd4\u8f83\u7b80\u5355\uff0c\u8fd9\u91cc\u4e0d\u4e00\u4e00\u63cf\u8ff0\u3002\\n\\n![kubelet-arch.drawio.png](static/img/2024-08/kubelet-arch.png)\\n\\n\\n`Kubelet` \u542f\u52a8\u4e4b\u540e\u4f1a\u521b\u5efa `syncLoopIteration` \u7684\u5faa\u73af\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a `podUpdate` \u7684 `chan` ,\u5206\u522b\u4ece\u9759\u6001\u6587\u4ef6\u3001HTTP URL\u3001List-Watch(API) \u4e09\u4e2a\u6765\u6e90\u5199\u5165\u521b\u5efa\u3001\u66f4\u65b0\u3001\u5220\u9664\u7684 `Pod` ;\\n\\n\u63a5\u6536\u5230 `podUpdate` \u5bf9\u8c61\u4e4b\u540e\uff0c\u4f1a\u8fdb\u5165 `podWorkers.UpdatePod` \u7684\u65b9\u6cd5\u4e2d\u8fdb\u884c\u5904\u7406\uff0c\u4e4b\u540e\u53d1\u5f80 `podWork` chan \u91cc\u9762\uff0c\u5728 `podWorkLoop` \u4e2d\uff0c\u9488\u5bf9\u6bcf\u4e2a `pod` \u4f1a\u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\uff0c\u7136\u540e\u5728 `syncPod` \u4e2d\u5904\u7406\uff0c\u91cc\u9762\u4e3b\u8981\u5c31\u662f\u628a `pod` \u53d1\u5f80 `podStatus` \u4e2d\u8fdb\u884c\u72b6\u6001\u5904\u7406\uff0c\u8fd8\u6709\u5c31\u662f\u521b\u5efa\u5bb9\u5668\uff0c\u7136\u540e\u5c31\u662f\u8c03\u7528 `CRI` \u7684\u63a5\u53e3\u62c9\u955c\u50cf\u3001\u8c03\u7528 `device-plugin` \u7684\u63a5\u53e3\u8fdb\u884c\u8bbe\u5907\u7684\u5206\u914d\uff0c\u4ee5\u53ca `CRI` \u7684\u5bb9\u5668\u670d\u52a1\u63a5\u53e3\u521b\u5efa\u5bb9\u5668\u7b49\u3002\\n\\n\u5728 `syncLoopIteration` \u4e2d\u8fd8\u4f1a\u901a\u8fc7 `syncCh` \u548c `cleanupCh` \u914d\u7f6e\u7684 `time.Ticker` \u5b9a\u671f\u7684\u5904\u7406 `pod`,\u4ee5\u53ca\u5728 `containerCh` chan \u4e2d\u63a5\u53d7 `device-plguin` \u4e0a\u62a5\u7684\u8bbe\u5907\u5065\u5eb7\u4fe1\u606f\uff0c\u8fd8\u6709 `probeCh` \u8fd9\u4e2a\u6839\u636e `livenessManager\u3001readinessManager\u3001startupManager`  \u8fd9\u4e09\u4e2a\u63a2\u9488\u7684\u7ed3\u679c\u5f71\u54cd `pod` \u7684\u72b6\u6001\u66f4\u65b0\uff1b\\n\\n`plegCh` \u4f1a\u63a5\u53d7 `Pod` \u7684 `Lifecycle Event` ,\u6839\u636e `Event` \u6765\u51b3\u5b9a `pod` \u7684 sync."},{"id":"jsonpatch-jsonmergepatch","metadata":{"permalink":"/blog/jsonpatch-jsonmergepatch","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-09-22-jsonpatch-jsonmergepatch.md","source":"@site/blog/2022-09-22-jsonpatch-jsonmergepatch.md","title":"JSON Patch and JSON Merge Patch","description":"JSON Patch vs JSON Merge Patch","date":"2022-09-22T00:00:00.000Z","tags":[{"inline":true,"label":"kubernetes","permalink":"/blog/tags/kubernetes"}],"readingTime":4.405,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"jsonpatch-jsonmergepatch","title":"JSON Patch and JSON Merge Patch","authors":["rongfu"],"tags":["kubernetes"]},"unlisted":false,"prevItem":{"title":"kubelet\u6e90\u7801\u5206\u6790(\u4e00)\uff1a\u5de5\u4f5c\u539f\u7406","permalink":"/blog/kubelet-one-analyze"},"nextItem":{"title":"Vscode Remote Golang\u5f00\u53d1\u73af\u5883\u6253\u9020","permalink":"/blog/remote-golang-developer-env"}},"content":"JSON Patch vs JSON Merge Patch\\n\x3c!-- truncate --\x3e\\n\\n# JSON Patch and JSON Merge Patch\\n\\n\\n`PATCH` \u4f5c\u4e3a `HTTP` \u7684\u4e00\u79cd `Method`, \u8fd1\u5e74\u6765\u53d7\u5230\u8f83\u591a\u7684\u5173\u6ce8\uff0c\u4e8e\u662f\u4fbf\u63d0\u51fa\u5173\u4e8e\u4f7f\u7528 `JSON` \u9a71\u52a8 `PATCH` \u683c\u5f0f\u7684\u60f3\u6cd5\uff0c\u8fd9\u79cd\u683c\u5f0f\u7528\u58f0\u660e\u5f0f\u7684\u5f62\u5f0f\u6765\u63cf\u8ff0\u4e24\u4e2a`JSON`\u6587\u6863\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c`IETF`\u53d1\u5e03\u4e86\u4e24\u79cd\u683c\u5f0f\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a [RFC 6902 (JSON Patch)](https://tools.ietf.org/html/rfc6902)\u548c\xa0[RFC 7396 (JSON Merge Patch)](https://www.rfc-editor.org/rfc/rfc7396)\uff0c\u4e24\u8005\u5404\u6709\u4f18\u7f3a\u70b9\uff0c\u6ca1\u6709\u4e00\u79cd\u662f\u53ef\u4ee5\u9002\u7528\u4e8e\u4efb\u4f55\u4eba\u7684\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u4ed6\u4eec\u7684\u533a\u522b\u3002\\n\\n\\n\\n## JSON PATCH\\n\\n\\n\\n`JSON PATCH` \u7684\u683c\u5f0f\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u4e8b\u7269\uff0c\u5b83\u662f\u4e00\u4e2a `JSON Document,`\u5b83\u57fa\u672c\u4e0a\u662f\u7531`ADD`\u3001`REMOVE`\u3001`REPLACE`\u3001`MOVE`\u3001`COPY` \u4e00\u7cfb\u5217\u64cd\u4f5c\u7ec4\u6210\u7684\u3002\\n\\n\u4e0b\u9762\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u63cf\u8ff0\u4e86\u4e00\u4e2a `JSON` \u7684\u5185\u5bb9\uff1a\\n\\n```json\\n{\\n\\t\\"users\\" : [\\n\\t\\t{ \\"name\\" : \\"Alice\\" , \\"email\\" : \\"alice@example.org\\" },\\n\\t\\t{ \\"name\\" : \\"Bob\\" , \\"email\\" : \\"bob@example.org\\" }\\n\\t]\\n}\\n```\\n\\n\u5728\u8fd9\u4e2a `JSON`\u4e2d\u6267\u884c`JSON PATCH`\u64cd\u4f5c\uff0c\u66f4\u6539`Alice`\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u5e76\u4e14\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684`user`\u5230\u6570\u7ec4\u4e2d\uff1a\\n\\n```Json\\n[\\n\\t{\\n\\t\\t\\"op\\" : \\"replace\\" ,\\n\\t\\t\\"path\\" : \\"/users/0/email\\" ,\\n\\t\\t\\"value\\" : \\"alice@wonderland.org\\"\\n\\t},\\n\\t{\\n\\t\\t\\"op\\" : \\"add\\" ,\\n\\t\\t\\"path\\" : \\"/users/-\\" ,\\n\\t\\t\\"value\\" : {\\n\\t\\t\\t\\"name\\" : \\"Christine\\",\\n\\t\\t\\t\\"email\\" : \\"christine@example.org\\"\\n\\t\\t}\\n\\t}\\n]\\n```\\n\\n\\n\\n\u5b83\u7684\u7ed3\u679c\u5c06\u662f\uff1a\\n\\n```json\\n{\\n\\t\\"users\\" : [\\n\\t\\t{ \\"name\\" : \\"Alice\\" , \\"email\\" : \\"alice@wonderland.org\\" },\\n\\t\\t{ \\"name\\" : \\"Bob\\" , \\"email\\" : \\"bob@example.org\\" },\\n\\t\\t{ \\"name\\" : \\"Christine\\" , \\"email\\" : \\"christine@example.org\\" }\\n\\t]\\n}\\n\\n```\\n\\n\\n\\n\u4e00\u4e2a`JSON PATCH` \u6709\u4ee5\u4e0b\u51e0\u4e2a\u57fa\u672c\u5143\u7d20\u63cf\u8ff0\u800c\u6210\uff1a\\n\\n- `op `\u5065\u8868\u793a\u64cd\u4f5c\u7c7b\u578b\u3002\\n- \u64cd\u4f5c\u7684\u53c2\u6570\u7531\u5176\u4ed6\u5143\u7d20\u63cf\u8ff0\u3002\\n- `path`\u662f\u6307\u5411\u4f5c\u4e3a\u64cd\u4f5c\u76ee\u6807\u7684`JSON`\u4e2d\u7684\u6307\u9488\uff0c\u662f\u4e00\u4e2a\u5fc5\u987b\u5b58\u5728\u7684\u53c2\u6570\u3002\\n\\n`JSON PATCH` \u64cd\u4f5c\u63d0\u4f9b\u4e86\u4e00\u4e2a `test` \u64cd\u4f5c\u7c7b\u578b\uff0c\u5b83\u6ca1\u6709\u4efb\u4f55\u574f\u5904\uff0c\u6240\u4ee5\u5b83\u4e0d\u662f\u4e00\u4e2a\u6570\u636e\u64cd\u4f5c\u8fd0\u7b97\u7b26\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5bf9\u6267\u884c\u8fc7\u7a0b\u8fdb\u884c\u65ad\u8a00\uff0c\u5982\u679c`test`\u8bc4\u4f30\u7ed3\u679c\u4e3a`false`,\u5219\u53ef\u4ee5\u4e2d\u65ad\u6267\u884c\u3002\\n\\n\\n\\n## JSON MERGE PATCH\\n\\n`JSON MERGE PATCH` \u5b83\u63cf\u8ff0\u4e86 `json document`\u7684\u66f4\u6539\u7248\u672c\uff0c\u4e0e`JSON PATCH` \u7c7b\u4f3c\uff0c\u533a\u522b\u5728\u4e8e\u5b83\u7c7b\u4f3c`diff`\u6587\u4ef6\uff0c\u53ea\u5305\u542b\u6267\u884c\u540e\u5e94\u8be5\u4e0d\u540c\u7684`document`\u8282\u70b9\u3002\\n\\n\u5982\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684`JSON`\u6587\u6863\uff0c\u6765\u8bf4\u660e`JSON MERGE PATCH`\u7684\u683c\u5f0f\uff1a\\n\\n```json\\n{\\n\\t\\"a\\": \\"b\\",\\n\\t\\"c\\": {\\n\\t\\t\\"d\\": \\"e\\",\\n\\t\\t\\"f\\": \\"g\\"\\n\\t}\\n}\\n```\\n\\n\\n\\n\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u8ff0\u7684`JSON`\u4e2d\u8fd0\u884c\u5982\u4e0b\u7684`MERGE PATCH`:\\n\\n```json\\n{\\n\\t\\"a\\":\\"z\\",\\n\\t\\"c\\": {\\n\\t\\t\\"f\\": null\\n\\t}\\n}\\n```\\n\\n\u8fd9\u4e2a\u5c06 `a` \u7684\u503c\u6539\u4e3a `z` ,\u5e76\u4e14\u5c06\u5220\u9664 `c`\u3002\\n\\n\u5b83\u770b\u7740\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u8fd9\u79cd\u7b80\u5355\u6027\u4e5f\u5e26\u6765\u4e86\u9650\u5236\uff1a\\n\\n- \u901a\u8fc7\u5c06`key`\u7684\u503c\u8bbe\u7f6e\u4e3a`null`\u6765\u8fdb\u884c\u5220\u9664\uff0c\u8fd9\u672c\u8d28\u4e0a\u5c31\u5bfc\u81f4\u7528\u6237\u4e0d\u80fd\u4e3b\u52a8\u8bbe\u7f6e`null`\u503c\u3002\\n- \u6570\u7ec4\u4e0d\u80fd\u88ab`PATCH`\u64cd\u4f5c\uff0c\u5982\u679c\u60f3\u5c06\u4e00\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u6570\u7ec4\u4e2d\uff0c\u6216\u8005\u6539\u53d8\u5b83\u7684\u4efb\u4f55\u5143\u7d20\uff0c\u90a3\u4e48\u5fc5\u987b\u8981\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u624d\u80fd\u6267\u884c\u3002\\n- `MERGE PATCH`\u64cd\u4f5c\u6c38\u8fdc\u4e0d\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u4efb\u4f55\u683c\u5f0f\u9519\u8bef\u7684\u8865\u4e01\u90fd\u4f1a\u88ab`PATCH`,\u6240\u4ee5\u5b83\u662f\u4e00\u79cd\u81ea\u7531\u7684\u683c\u5f0f\uff0c\u8fd9\u4e0d\u4e00\u5b9a\u662f\u597d\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u9700\u8981\u5728\u6267\u884c\u5b8c`MEGER PATCH` \u4e4b\u540e\u8fdb\u884c`JSON SCHEMA`\u7684\u9a8c\u8bc1\uff0c\u9519\u8bef\u5c31\u64a4\u9500`PATCH`\uff0c\u4f46\u662f\u76ee\u524d\u5b9e\u73b0\u4e0d\u4e86\u3002\\n\\n\\n\\n## \u603b\u7ed3\\n\\n`JOSN MERGE PATCH` \u662f\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u7684\u683c\u5f0f\uff0c\u53ef\u7528\u6027\u6709\u9650\uff0c\u5bf9\u4e8e\u66f4\u590d\u6742\u7684\u7528\u6237\uff0c\u8bf7\u4f7f\u7528`JSON PATCH`,\u7531\u4e8e\u5b83\u4f7f\u7528\u4e0e\u4efb\u4f55`JSON`\u6587\u6863\uff0c\u8be5\u89c4\u8303\u8fd8\u63d0\u4f9b\u4e86\u539f\u5b50\u6267\u884c\u548c\u6267\u884c\u524d\u540e\u6267\u884c`test`\u68c0\u67e5\u3002\\n\\n`Kubernetes` \u7684 `PATCH`\u662f\u652f\u6301`JSON MERGER PATCH` \u548c `MERGE PATCH`\u7684\uff0c\u4f46\u662f\u4f7f\u7528`JSON MERGE PATCH`\u7684\u573a\u666f\u8f83\u5c11\uff0c\u4e5f\u662f\u5efa\u8bae\u4f7f\u7528`JSON PATCH`\uff0c\u6700\u6839\u672c\u539f\u56e0\u5c31\u662f`JSON MERGE PATCH`\u7684\u534f\u8bae\u683c\u5f0f\u8fc7\u4e8e\u7b80\u5355\uff0c\u96be\u4ee5\u5e94\u7528\u5728\u590d\u6742\u573a\u666f\u3002"},{"id":"remote-golang-developer-env","metadata":{"permalink":"/blog/remote-golang-developer-env","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-08-31-remote-golang-developer-env.md","source":"@site/blog/2022-08-31-remote-golang-developer-env.md","title":"Vscode Remote Golang\u5f00\u53d1\u73af\u5883\u6253\u9020","description":"\u901a\u8fc7Vscode\u6253\u9020\u8fdc\u7a0b\u5f00\u53d1\u73af\u5883\uff0c\u53ef\u4ee5\u52a0\u5feb\u5de5\u4f5c\u6548\u7387.","date":"2022-08-31T00:00:00.000Z","tags":[{"inline":false,"label":"Developer Env","permalink":"/blog/tags/developer-env","description":"Developer Env"}],"readingTime":5.215,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"remote-golang-developer-env","title":"Vscode Remote Golang\u5f00\u53d1\u73af\u5883\u6253\u9020","authors":["rongfu"],"tags":["Developer Env"]},"unlisted":false,"prevItem":{"title":"JSON Patch and JSON Merge Patch","permalink":"/blog/jsonpatch-jsonmergepatch"},"nextItem":{"title":"Github Contribute \u6ce8\u610f\u4e8b\u9879","permalink":"/blog/github-contribute"}},"content":"\u901a\u8fc7`Vscode`\u6253\u9020\u8fdc\u7a0b\u5f00\u53d1\u73af\u5883\uff0c\u53ef\u4ee5\u52a0\u5feb\u5de5\u4f5c\u6548\u7387.\\n\x3c!-- truncate --\x3e\\n\\n## \u80cc\u666f\\n\\n\u6211\u4e4b\u524d\u7684\u5f00\u53d1\u73af\u5883\u4e00\u76f4\u90fd\u662f\u4f7f\u7528 `Mac + Goland`\uff0c\u4f46\u662f\u6700\u8fd1\u5728\u7f16\u8bd1\u4e00\u4e2a\u7a0b\u5e8f\u7684\u65f6\u5019\u53d1\u73b0\u7f16\u8bd1\u4e0d\u901a\u8fc7\uff0c\u7ecf\u8fc7\u6392\u67e5\u53d1\u73b0\u662f `Mac`\u4e0a\u7684 `Make` \u8bed\u6cd5\u51fa\u73b0\u4e86\u4e0d\u517c\u5bb9\uff0c\u4e8e\u662f\u60f3\u5230\u4e86\u6253\u9020\u4e00\u5957 `Remote Linux + Vscode` \u7684\u5f00\u53d1\u73af\u5883\u3002\\n\\n\u521a\u597d\u6709\u4e00\u4e2a\u5927\u5b66\u65f6\u5019\u7684\u7b14\u8bb0\u672c\uff0c\u91cd\u88c5\u4e3a\u4e86 `Ubuntu` \u7cfb\u7edf\uff0c\u5c31\u7528\u8fd9\u4e2a\u7535\u8111\u6765\u6253\u9020\u5c31\u53ef\u4ee5\uff0c\u8fdc\u7a0b\u5f00\u53d1\u73af\u5883\u548c\u672c\u5730\u5f00\u53d1\u73af\u5883\u76f8\u6bd4\uff0c\u6709\u5229\u6709\u5f0a\uff1b\\n\\n| \u5bf9\u6bd4 | \u672c\u5730\u73af\u5883                                                     | \u8fdc\u7a0b\u73af\u5883                                                     |\\n| ---- | ------------------------------------------------------------ | ------------------------------------------------------------ |\\n| \u4f18\u70b9 | 1.\u7a0b\u5e8f\u542f\u52a8\u5feb\uff0c\u73af\u5883\u52a0\u8f7d\u5feb\u3002<br /> 2.\u4e0d\u4f1a\u53d7\u9650\u4e8e\u7f51\u7edc\u73af\u5883\u548c\u5730\u57df\u73af\u5883\u3002 | 1. \u53ef\u4ee5\u4f7f\u7528\u8f83\u591a\u8d44\u6e90\uff0c\u5982\u5185\u5b58\u3001CPU\u3001\u78c1\u76d8\u7b49\u3002<br />2. \u51cf\u5c11\u5bf9Mac\u73af\u5883\u7684\u5f71\u54cd\uff0c\u4f7f\u7528Linux\u5f00\u53d1\u73af\u5883\u3002 |\\n| \u7f3a\u70b9 | 1. \u548c\u672c\u5730\u7cfb\u7edf\u7ed1\u5b9a\uff0c\u6709\u4e9b\u8f6f\u4ef6\u5728Mac\u4e0b\u4e0d\u80fd\u5f88\u597d\u7684\u6267\u884c\u548c\u7f16\u8f91<br/>2. \u5185\u5b58\u3001\u8d44\u6e90\u8fd9\u4e9b\u90fd\u53d7\u9650 | 1. \u8fd9\u4e2a\u539f\u521b\u73af\u5883\u53ea\u80fd\u5728\u5bb6\u91cc\u79c1\u6709\u5316\u7f51\u7edc\u73af\u5883\u4e0b\u4f7f\u7528<br />2.\u56e0\u4e3a\u64cd\u4f5c\u90fd\u662f\u7f51\u7edc\u4f20\u8f93\uff0c\u6240\u4ee5\u521d\u59cb\u5316\u7684\u65f6\u5019\u6bd4\u8f83\u6162\u3002`` |\\n\\n\\n## \u57fa\u672c\u73af\u5883\\n\\n- \u6709\u4e00\u4e2a\u8fdc\u7a0b\u7684`Linux`\u73af\u5883\uff0c\u53ef\u4ee5\u662f`Ubuntu`\uff0c\u4e5f\u53ef\u4ee5\u662f`Centos`\uff0c\u5e76\u6253\u5f00\u8fdc\u7a0b\u8fde\u63a5`ssh 22`\u7aef\u53e3\u3002\\n- \u672c\u5730\u673a\u5668\u5b89\u88c5`Vscode`\u3002\\n\\n\\n## \u8fdc\u7a0b\u73af\u5883\\n\\n\u6309\u7167\u5982\u4e0b\u7684\u6d41\u7a0b\u914d\u7f6e\u5f00\u53d1\u73af\u5883\uff1b\\n\\n1. \u672c\u5730Vscode\u5b89\u88c5\u6269\u5c55\u63d2\u4ef6\uff1a\u5728`Vscode`\u7684\u6269\u5c55\u4e2d\u641c\u7d22`ssh`\u63d2\u4ef6\uff0c\u9009\u62e9\u5b89\u88c5`Remote - SSH`\u8fd9\u4e2a\u63d2\u4ef6\u3002\\n\\n2. \u521b\u5efa`ssh`\u5bc6\u94a5\uff1a\\n```shell\\n# \u6267\u884c\u5982\u4e0b\u7684\u547d\u4ee4\uff0c\u5c31\u4f1a\u5728~/.ssh\u76ee\u5f55\u4e0b\u751f\u6210 id_rsa_goland_developer_com\u3001id_rsa_goland_developer_com.pub \u4e24\u4e2a\u6587\u4ef6\\n$ ssh-keygen -f id_rsa_goland_developer_com\\n```\\n\\n3. \u5728`Remote Linux`\u4e0a\u914d\u7f6e\u672c\u5730\u516c\u94a5\uff0c\u5b9e\u73b0\u514d\u5bc6\u767b\u5f55\\n```shell\\n# \u628a\u672c\u5730id_rsa_goland_developer_com.pub\u6587\u4ef6\u4e0a\u4f20\u5230\u8fdc\u7a0b\u673a\u5668\u4e0a\uff0c\u5e76\u5199\u5165\u5230 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u901a\u8fc7vim\u7f16\u8f91\u5199\u5165\\n$ cat id_rsa_goland_developer_com.pub > ~/.ssh/authorized_keys\\n```\\n\\n4. \u70b9\u51fb`remote ssh`\u7684`Configure`\uff0c\u9009\u62e9\u7b2c\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6;\\n![image-20220507210602712](static/img/2022-08-31/image-20220507210602712.png)\\n\\n5. \u6dfb\u52a0\u8fdc\u7a0b\u4e3b\u673a\u914d\u7f6e\uff1a\\n```shell\\nHost GoDev\\n    User {user}\\n    HostName {ip}\\n    IdentityFile ~/.ssh/id_rsa_goland_developer_com\\n``` \\n- `GoDev`\uff1a\u8fdc\u7a0b\u4e3b\u673a\u7684\u6807\u793a\u540d\u79f0\uff0c\u53ef\u4ee5\u968f\u610f\u53d6\uff0c\u65b9\u4fbf\u8bc6\u522b\u5c31\u53ef\u4ee5\u3002\\n- `{user}`\uff1a\u8fdc\u7a0b\u4e3b\u673a\u7684\u7528\u6237\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528`root`\uff0c\u53ef\u4ee5\u901a\u8fc7`useradd`\u547d\u4ee4\u65b0\u6dfb\u52a0\u4e00\u4e2a\u7528\u6237\u3002\\n- `{ip}`\uff1a\u8fdc\u7a0b\u4e3b\u673a\u7684\u5730\u5740\u3002\\n- `IdentityFile`\uff1a\u7528\u4e8e\u8fdc\u7a0b\u767b\u5f55\u7684\u79d8\u94a5\\n\\n6. \u4f7f\u7528 `VS CODE` \u8fde\u63a5\u8fdc\u7a0b\u5f00\u53d1\u673a\u5668\\n- \u8fde\u63a5\u8fdc\u7a0b\u4e3b\u673a\\n![image-20220507211751447.png](static/img/2022-08-31/image-20220507211751447.png)\\n\\n- \u8fde\u63a5\u6210\u529f\u540e\u53ef\u4ee5\u9009\u62e9\u6253\u5f00\u7684\u5de5\u4f5c\u76ee\u5f55\\n![image-20220507212224603.png](static/img/2022-08-31/image-20220507212224603.png)\\n\\n\u8fd9\u6837\u8fdc\u7a0b\u73af\u5883\u5c31\u914d\u7f6e\u597d\u4e86\uff0c\u4e0b\u9762\u5c31\u5f00\u59cb\u914d\u7f6e\u5f00\u53d1\u73af\u5883\u3002\\n\\n## \u5f00\u53d1\u73af\u5883\\n\\n\u5982\u679c\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684`Linue`\u73af\u5883\uff0c\u6240\u4ee5\u6211\u4e0a\u9762\u6ca1\u6709`go`\u73af\u5883\u8fd9\u4e9b\uff0c\u9700\u8981\u65b0\u8fdb\u884c\u5b89\u88c5`go`\u73af\u5883\u3002\\n\\n### Go\u73af\u5883\u5b89\u88c5\\n\\n- `Go`\u6e90\u7801\u5305\u4e0b\u8f7d\u5730\u5740\uff1ahttps://go.dev/doc/install\\n1. Go download.\\n```shell\\n$ wget -c https://dl.google.com/go/go1.19.linux-amd64.tar.gz\\n```\\n\\n2. Go install.\\n```shell\\n$ sudo tar -C /usr/local -xzf go1.19.linux-amd64.tar.gz\\n$ vim /etc/profile\\nexport PATH=$PATH:/usr/local/go/bin\\n$ source /etc/profile\\n```\\n\\n3. \u8bbe\u7f6e go env\\n```shell\\n$ go env -w GO111MODULE=on\\n$ go env -w GOPROXY=https://goproxy.cn\\n```\\n\\n### Vscode Go\u73af\u5883\u914d\u7f6e\\n\\n1. \u5728\u6253\u5f00\u8fdc\u7a0b\u8fde\u63a5\u7684`Vscode`\u4e2d\u5b89\u88c5`go`\u63d2\u4ef6\\n![image-20220507212648391](static/img/2022-08-31/image-20220507212648391.png)\\n\\n2. \u5b89\u88c5\u5176\u4ed6Go\u63d2\u4ef6\\n> \u6309\u5feb\u6377\u952ectrl+shift+p \uff0c\u9009\u62e9go install/update tools\uff08\u5b89\u88c5\u6240\u6709\u76f8\u5173\u5305\uff09\u3002\\n\\n![image-20220507212945157](static/img/2022-08-31/image-20220507212945157.png)\\n\\n3. \u9009\u62e9\u5168\u90e8\u8fdb\u884c\u5b89\u88c5\\n> \u6700\u65b0\u7248\u7684Tools\u53ea\u67097\u4e2a\u4e86\uff0c\u7f51\u4e0a\u6709\u4e9b\u6587\u7ae0\u91cc\u9762\u770b\u7740\u670910\u51e0\u4e2a\uff0c\u90a3\u662f\u5f88\u4e45\u4e4b\u524d\u7684\u7248\u672c\uff0c\u5728\u65b0\u7248\u672c\u4e2d\u505a\u4e86\u5f88\u591a\u6574\u5408\uff0c\u6bd4\u5982\uff1agolint\u548cgoimports\u90fd\u6574\u5408\u5230staticcheck\u4e2d\u4e86\u3002\\n\\n![image-20220507213258802](static/img/2022-08-31/image-20220507213258802.png)\\n\\n4. \u5b89\u88c5 `Code Run` \u63d2\u4ef6\\n> \u641c\u7d22\u5173\u952e\u8bcdcode\uff0c\u5b89\u88c5Code Runner\u63d2\u4ef6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528\u5feb\u6377\u952eCtrl+Alt+N\u8fd0\u884c\u4ee3\u7801\u4e86\u3002\\n\\n\\n## \u5176\u4ed6\u8bbe\u7f6e\\n\\n\u56e0\u4e3a\u4f7f\u7528\u7684\u7b14\u8bb0\u672c\u505a\u4e3a\u8fdc\u7a0b\u73af\u5883\uff0c\u6240\u4ee5\u4e3a\u4e86\u907f\u514d\u5c4f\u5e55\u4e00\u76f4\u4eae\u7740\uff0c\u53ef\u4ee5\u914d\u7f6e\u8ba9\u5c4f\u5e55\u5173\u95ed\u663e\u793a\u3002\\n```shell\\n# \u5728\u5982\u4e0b\u6587\u4ef6\u4e2d\u52a0\u5165\u6216\u8005\u4fee\u6539\u5982\u4e0b\u4e24\u4e2a\u53d8\u91cf\u503c\\n$ sudo vim /etc/systemd/logind.conf\\nHandleLidSwitch=ignore\\nHandleLidSwitchExternalPower=ignore\\n\\n# \u4e4b\u540e\u91cd\u542f\u5c31\u53ef\u4ee5\u4e86\\n$ sudo service systemd-logind restart\\n```\\n\\n## \u672a\u6765\\n\\n\u76ee\u524d\u6682\u65f6\u4f7f\u7528\u7b14\u8bb0\u672c\uff0c\u4f46\u662f\u7b14\u8bb0\u672c\u53d7\u9650\u4e8e\u5185\u5b58\u5927\u5c0f\u3001\u78c1\u76d8\u5927\u5c0f\u3001`CPU` \u6027\u80fd\uff0c\u5e76\u4e14\u6ca1\u6709`GPU`,\u672a\u6765\u4e3b\u8981\u671d\u7740\u5bb6\u5ead\u4f4e\u529f\u8017\u670d\u52a1\u5668\u53bb\u6f14\u8fdb\u3002\\n\\n\\n- https://www.reddit.com/r/homelab/comments/rlouof/trying_to_build_a_small_low_power_server/\\n- https://kit.co/TechnoTim/efficient-low-power-powerful-virtualization-server\\n- https://www.proxmox.com/en/"},{"id":"github-contribute","metadata":{"permalink":"/blog/github-contribute","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-08-28-github-contribute.md","source":"@site/blog/2022-08-28-github-contribute.md","title":"Github Contribute \u6ce8\u610f\u4e8b\u9879","description":"\u5f53\u6211\u4eec\u5728Github\u4e0a\u8d21\u732e\u4ee3\u7801\u65f6\u8981\u6ce8\u610f\u4e9b\u4ec0\u4e48\uff1f\u5982\u4e0b\u662f\u4e2a\u4eba\u8d21\u732e\u65f6\u603b\u7ed3\u7684\u4e00\u4e9b\u5c0f\u5fc3\u5f97\uff0c\u6b22\u8fce\u8f7b\u62cd\u3002","date":"2022-08-28T00:00:00.000Z","tags":[{"inline":false,"label":"Github","permalink":"/blog/tags/github","description":"github"}],"readingTime":3.39,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"github-contribute","title":"Github Contribute \u6ce8\u610f\u4e8b\u9879","authors":["rongfu"],"tags":["Github"]},"unlisted":false,"prevItem":{"title":"Vscode Remote Golang\u5f00\u53d1\u73af\u5883\u6253\u9020","permalink":"/blog/remote-golang-developer-env"},"nextItem":{"title":"Distribution Auth Type","permalink":"/blog/distribution-auth"}},"content":"\u5f53\u6211\u4eec\u5728`Github`\u4e0a\u8d21\u732e\u4ee3\u7801\u65f6\u8981\u6ce8\u610f\u4e9b\u4ec0\u4e48\uff1f\u5982\u4e0b\u662f\u4e2a\u4eba\u8d21\u732e\u65f6\u603b\u7ed3\u7684\u4e00\u4e9b\u5c0f\u5fc3\u5f97\uff0c\u6b22\u8fce\u8f7b\u62cd\u3002\\n\x3c!-- truncate --\x3e\\n\\n## \u4ee3\u7801\u63d0\u4ea4\u6d41\u7a0b\\n\u5982\u4e0b\u4ee5\u4ee5`kubernetes`\u4e3a\u4f8b\uff0c\u6838\u5fc3\u64cd\u4f5c\u6b65\u9aa4\u5982\u4e0b\u56fe\uff1a\\n![git_workflow.png](static/img/2022-08-28/git_workflow.png)\\n\\n\\n## \u7b7e\u7f72\u8d21\u732e\u534f\u8bae\\n\u76ee\u524d\u5927\u591a\u6570\u5f00\u6e90\u9879\u76ee\u90fd\u9700\u8981\u7b7e\u7f72\u8d21\u732e\u534f\u8bae\uff0c\u6bd4\u5982`DCO`\u534f\u8bae\uff0c\u7b7e\u7f72\u4f7f\u7528\u7684\u5c31\u662f\u5f53\u524d`github`\u8d26\u53f7\u7684\u8d26\u53f7\u548c\u90ae\u7bb1\uff0c\u6240\u4ee5\u5728\u9879\u76ee\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\u9700\u8981\u5148\u8fdb\u884c\u914d\u7f6e\uff1a\\n\\n```shell\\n$ git config --local user.name lengrongfu\\n$ git config --local user.email 1275177125@qq.com\\n```\\n\\n## \u4e00\u4e2aPR\u5c3d\u91cf\u53ea\u7528\u4e00\u4e2aCommit\\n\u5355\u53d1\u751f\u591a\u6b21\u4ee3\u7801\u4fee\u6539\u7684\u65f6\u5019\uff0c\u5728`commit`\u7684\u65f6\u5019\u4f7f\u7528\u6700\u5f00\u59cb\u7684`commit`\uff0c\u4f7f\u7528\u547d\u4ee4\u5982\u4e0b\uff1a\\n```shell\\n$ git commit -s --amend --no-edit\\n# -s \u540e\u4f1a\u5728PR\u4e2d\u52a0\u5165\u7b7e\u540d\u4fe1\u606f\uff1aSigned-off-by: lengrongfu 1275177125@qq.com\\n# --amend \u8ffd\u52a0commit\uff0c\u4f7f\u7528\u540c\u4e00\u4e2acommit ID\\n# --no-edit \u4e0d\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\uff0c\u5982\u679c\u8981\u4fee\u6539commit \u4fe1\u606f\u5c31\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e2a\u6807\u7b7e\\n```\\n\\n## Go\u9879\u76ee\u5f00\u53d1\u8981\u6ce8\u610f\u4ec0\u4e48\\n`go`\u5f00\u6e90\u9879\u76ee\u76ee\u524d\u5927\u591a\u90fd\u662f\u4f7f\u7528\u7684`golangci-lint`\u3001`goimports`\u6765\u505a\u4ee3\u7801\u683c\u5f0f\u7b49\u76f8\u5173\u9759\u6001\u68c0\u67e5\uff0c\u5728\u63d0\u4ea4`PR`\u7684\u65f6\u5019\u90fd\u4f1a\u68c0\u67e5\u662f\u5426\u7b26\u5408\u8fd9\u4e9b\u5de5\u5177\u7684\u89c4\u8303\u3002\\n\\n\u5728`golangd`\u4e2d\u914d\u7f6e\u4e0a\u8ff0\u5de5\u5177\uff0c\u5728\u6587\u4ef6\u4ea7\u751f\u53d8\u66f4\u7684\u65f6\u5019\u81ea\u52a8\u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\uff0c\u8fdb\u884c\u683c\u5f0f\u6821\u9a8c\uff0c\u4e0b\u9762\u4ee5`Mac Goland`\u4e3a\u4f8b\u8bb2\u89e3\u914d\u7f6e \uff1a\\n\\n- \u901a\u8fc7`command+,`\u5feb\u6377\u952e\u6253\u5f00\u7cfb\u7edf\u914d\u7f6e\uff0c\u6216\u8005\u70b9\u51fb\u5de6\u4e0a\u89d2`preferences`\u83dc\u5355\u3002\\n- \u641c\u7d22`File Watchers`\\n- \u70b9\u51fb\u6dfb\u52a0\u6309\u94ae\uff0c\u9009\u62e9\u5bf9\u5e94\u5de5\u5177\u5373\u53ef\uff1a\\n![file-watcher.png](static/img/2022-08-28/file-watcher.png)\\n- \u6dfb\u52a0\u540e\u53ef\u4ee5\u9009\u62e9\u6240\u6709\u9879\u76ee\u751f\u6548\u6216\u8005\u5f53\u524d\u9879\u76ee\u751f\u6548\u3002\\n\\n## .gitignore\u662f\u5426\u53ef\u4ee5\u4e0d\u4fee\u6539\\n\u5f88\u591a\u7f16\u8f91\u5668\u90fd\u6709\u5bf9\u5e94\u7684\u9690\u85cf\u6587\u4ef6`.vscode`\u3001`.idea`\u7b49\uff0c\u6211\u4eec\u901a\u8fc7\u7f16\u8f91\u5668\u9996\u6b21\u6253\u5f00\u9879\u76ee\u540e\u90fd\u4f1a\u751f\u6210\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u60f3\u8ba9\u8fd9\u4e2a\u6587\u4ef6\u63d0\u4ea4\uff0c\u5c31\u53ea\u80fd\u5f80`.gitignore`\u91cc\u9762\u52a0\u5165\u5ffd\u7565\u6587\u4ef6\u7684\u4fe1\u606f\u3002\\n\\n\u4f46\u662f\u4ece\u4ee3\u7801\u4ed3\u5e93\u7ba1\u7406\u5458\u7684\u89d2\u5ea6\u770b\uff0c\u5982\u679c\u6bcf\u4e2a\u4eba\u90fd\u628a\u7279\u5b9a\u4e8e\u4e2a\u4eba\u7684\u914d\u7f6e\u52a0\u5165\u5230`.gitignore`\u4e2d\uff0c\u90a3\u6574\u4f53\u7ef4\u62a4\u8d77\u6765\u5c06\u4f1a\u5f88\u96be\u3002\\n\\n\u6709\u4e00\u4e2a\u66f4\u597d\u7684\u89e3\u51b3\u529e\u6cd5\uff1a\u4e3a\u60a8\u7684\u6240\u6709\u5b58\u50a8\u5e93\u521b\u5efa\u4e00\u4e2a\u4e2a\u4eba\u7684\u5168\u5c40`.gitignore`\u6587\u4ef6\u3002\\n\\n- \u9009\u62e9\u4e00\u4e2a\u5730\u65b9\u5b58\u50a8\u5168\u5c40`.gitignore`\u7684\u6587\u4ef6\uff0c\u5927\u591a\u6570\u4eba\u9009\u62e9\u4e3b\u76ee\u5f55\\n```shell\\n$ touch ~/.gitignore\\n```\\n- \u5728\u91cc\u9762\u52a0\u5165\u81ea\u5df1\u9700\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6216\u8005\u6587\u4ef6\u5939\\n```shell\\n$ vim ~/.gitignore\\n.DS_Store\\n.idea\\n.vscode\\n```\\n- \u6700\u540e\uff0c\u914d\u7f6egit\u4f7f\u7528\u6211\u4eec\u65b0\u521b\u5efa\u7684~/.gitignore\u6587\u4ef6\\n```shell\\n$ git config --global core.excludesfile ~/.gitignore\\n```\\n- \u5982\u679c\u60a8\u662f Windows \u7528\u6237\uff0c\u5219\u9700\u8981\u4ee5\u4e0d\u540c\u65b9\u5f0f\u683c\u5f0f\u5316\u8def\u5f84\\n```shell\\n$ git config --global core.excludesfile %USERPROFILE%\\\\.gitignore\\n```\\n\\n## \u5f15\u7528\\n- [github-workflow.md](https://github.com/kubernetes/community/blob/master/contributors/guide/github-workflow.md)"},{"id":"distribution-auth","metadata":{"permalink":"/blog/distribution-auth","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-08-05-distribution-auth.md","source":"@site/blog/2022-08-05-distribution-auth.md","title":"Distribution Auth Type","description":"Distribution Auth\u8ba4\u8bc1\u6d41\u7a0b\u4ecb\u7ecd","date":"2022-08-05T00:00:00.000Z","tags":[{"inline":false,"label":"\u955c\u50cf\u4ed3\u5e93","permalink":"/blog/tags/distribution","description":"\u955c\u50cf\u4ed3\u5e93"}],"readingTime":3.2,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"distribution-auth","title":"Distribution Auth Type","authors":["rongfu"],"tags":["\u955c\u50cf\u4ed3\u5e93"]},"unlisted":false,"prevItem":{"title":"Github Contribute \u6ce8\u610f\u4e8b\u9879","permalink":"/blog/github-contribute"},"nextItem":{"title":"Kubernetes Scheduler","permalink":"/blog/Kubernetes-Scheduler"}},"content":"Distribution Auth\u8ba4\u8bc1\u6d41\u7a0b\u4ecb\u7ecd\\n\x3c!-- truncate --\x3e\\n\\n[`Distribution`](https://github.com/distribution/distribution) \u662f\u4e00\u4e2a\u6309\u7167 `OCI` \u7684\u89c4\u8303\u5b9e\u73b0\u7684\u4e00\u4e2a\u5236\u54c1\u5e93\u7ba1\u7406\u5de5\u5177\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e09\u79cd\u7684\u8ba4\u8bc1\u65b9\u5f0f\uff0c`htpasswd`\u3001`silly`\u3001`token`\uff0c\u5728 `Distribution` \u9879\u76ee\u4e2d\u91c7\u7528\u7684\u662f\u7b56\u7565\u6a21\u5f0f\u3002\\n\\n\u5b83\u7684\u8ba4\u8bc1\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n![auth](static/img/2022-08-05/auth.png)\\n\\n## htpasswd\\n\\n`htpasswd` \u662f\u4e00\u79cd\u5728\u7cfb\u7edf\u4e2d\uff0c\u5b83\u5305\u542b\u4e00\u4e2a `htpasswd` \u7684\u6587\u4ef6\uff08\u6587\u4ef6\u5185\u5bb9\u662f\u521d\u59cb\u7684\u7528\u6237\u540d`docker`\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4f7f\u7528\u7279\u5b9a\u7b97\u6cd5\u968f\u673a\u751f\u6210\u7684\u5bc6\u7801\uff09\u4ee5\u53ca\u5982\u4f55\u89e3\u6790\u8fd9\u4e2a\u6587\u4ef6\u7684\u7b97\u6cd5\uff08\u76ee\u524d\u53ea\u80fd\u4f7f\u7528 `bcrypt` \u52a0\u5bc6\u7b97\u6cd5\uff09\u3002\\n\\n\u914d\u7f6e\u683c\u5f0f\u5982\u4e0b\uff1a\\n\\n```yaml\\nauth:\\n  htpasswd:\\n    realm: harbor-registry-basic-realm\\n    path: /etc/registry/passwd\\n```\\n\\n1. \u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u6821\u9a8c `path` \u5bf9\u5e94\u7684\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5c31\u521b\u5efa\u5e76\u5199\u5165\u5185\u5bb9\uff0c\u5185\u5bb9\u4e3a\u7528\u6237\uff1a`docker`, \u5bc6\u7801\u4e3a\u968f\u673a\u751f\u6210\u5e76\u52a0\u5bc6\u5b58\u50a8\u3002\\n\\n2. \u7528\u6237\u5728\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u8fdb\u5165\u914d\u7f6e\u597d\u7684\u8bbf\u95ee\u63a7\u5236\u5668\u4e2d\uff0c\u8fdb\u884c\u6743\u9650\u9a8c\u8bc1\u3002\\n\\n3. \u4f1a\u9996\u5148\u5224\u65ad `Header` \u4e2d\u662f\u5426\u5b58\u5728 `Authorization` \u5b57\u6bb5\u503c\uff0c\u5e76\u6b63\u786e\u89e3\u6790\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8ba4\u4e3a\u65e0\u6548\u8ba4\u8bc1\u3002\\n\\n4. \u5982\u679c\u5b58\u5728\u7528\u6237\u5bc6\u7801\u5219\u4f1a\u548c\u6587\u4ef6\u4e2d\u5199\u5165\u7684\u5185\u5bb9\u8fdb\u884c\u5bf9\u6bd4\uff0c\u786e\u4fdd\u662f\u4e00\u81f4\u7684\uff08\u63d0\u793a\uff1a\u5728\u5bf9\u6bd4\u4e4b\u524d\u7cfb\u7edf\u4f1a\u5148\u6821\u9a8c\u8fd9\u4e2a\u6587\u4ef6\u662f\u5426\u88ab\u4fee\u6539\u8fc7\uff0c\u5982\u679c\u88ab\u4fee\u6539\u8fc7\u5c31\u4f1a\u4ece\u65b0\u751f\u6210\u6587\u4ef6\u5185\u5bb9\uff09\u3002\\n\\n   \\n\\n## silly\\n\\n\u8fd9\u4e2a\u4e3b\u8981\u662f\u7528\u4e8e\u6d4b\u8bd5\u7684\uff0c\u662f\u7b80\u5355\u529f\u80fd\u7684\u5b9e\u73b0\uff1b\u5b83\u4e3b\u8981\u662f\u68c0\u67e5 `Header` \u4e2d\u662f\u5426\u5b58\u5728 `Authorization` \u5e76\u4e14\u503c\u975e\u7a7a\uff0c\u5982\u679c\u662f\u5c31\u8fdb\u884c\u6388\u6743\u901a\u8fc7\u3002\\n\\n\\n\\n## token\\n\\n![auth](static/img/2022-08-05/v2-registry-auth.png)\\n\\n```yaml\\nauth:\\n  token:\\n    realm: https://localhost:5011/auth\\n    service: Authentication\\n    issuer: Sample Issuer\\n    rootCertBundle: /mnt/local/certs/RootCA.crt\\n```\\n`token` \u8ba4\u8bc1\u9700\u8981\u501f\u52a9\u5916\u90e8\u8ba4\u8bc1\u670d\u52a1\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8d44\u6e90\u3001\u6743\u9650\u7684\u7ba1\u7406\uff0c`distribution` \u7684\u54cd\u5e94\u7684\u65f6\u5019\u4f1a\u8fd4\u56de\u7ed9\u7528\u6237 `scope` \u5c31\u662f\u8d44\u6e90\u6743\u9650\\n\\n1. \u542f\u52a8\u8fc7\u7a0b\u4f1a\u6821\u9a8c `token` \u914d\u7f6e\u7684\u53c2\u6570\u662f\u5426\u6b63\u786e\uff0c\u5e76\u4e14\u6821\u9a8c `tls` \u8bc1\u4e66\u3002\\n2. \u7528\u6237\u8bf7\u6c42\u65f6\uff0c\u4f1a\u4ece `Header` \u4e2d\u83b7\u53d6\u8ba4\u8bc1\u4fe1\u606f\uff0c\u5982\u679c\u6ca1\u6709\u8ba4\u8bc1\uff0c\u5219\u4f1a\u6839\u636e\u662f\u5426\u914d\u7f6e `autoRedirect` \u4ee5\u53ca\u91cd\u5b9a\u5411\u5730\u5740 `realm`\u3002\\n3. `distribution` \u4f1a\u8fd4\u56de `401` \u7684\u8bf7\u6c42\uff0c\u5e76\u643a\u5e26`WWW-Authenticate` \u544a\u8bc9\u5ba2\u6237\u7aef\u6539\u5982\u4f55\u5411\u8ba4\u8bc1\u670d\u52a1\u8fdb\u884c\u8ba4\u8bc1\u3002\\n\\n> \u5982\uff1a\u4e00\u4e2a\u672a\u6388\u6743\u7684\u7528\u6237\u6b63\u5728 `Push`\u955c\u50cf\u5230 `samalba/my-app` repoName \u4e2d\uff0c\u5c31\u4f1a\u8fd4\u56de\\n>\\n> - scope: \u6388\u6743\u8303\u56f4\\n> - service: \u6388\u6743\u670d\u52a1\\n> - realm: \u8ba4\u8bc1\u670d\u52a1\\n\\n```shell\\nHTTP/1.1 401 Unauthorized\\nContent-Type: application/json; charset=utf-8\\nDocker-Distribution-Api-Version: registry/2.0\\nWww-Authenticate: Bearer realm=\\"https://auth.docker.io/token\\",service=\\"registry.docker.io\\",scope=\\"repository:samalba/my-app:pull,push\\"\\nDate: Thu, 10 Sep 2015 19:32:31 GMT\\nContent-Length: 235\\nStrict-Transport-Security: max-age=31536000\\n\\n{\\"errors\\":[{\\"code\\":\\"UNAUTHORIZED\\",\\"message\\":\\"access to the requested resource is not authorized\\",\\"detail\\":[{\\"Type\\":\\"repository\\",\\"Name\\":\\"samalba/my-app\\",\\"Action\\":\\"pull\\"},{\\"Type\\":\\"repository\\",\\"Name\\":\\"samalba/my-app\\",\\"Action\\":\\"push\\"}]}]}\\n```\\n\\n4. \u5982\u679c\u5f00\u542f\u81ea\u52a8\u91cd\u5b9a\u5411\uff0c\u5219\u8bf7\u6c42\u7684\u5c31\u662f `distribution` host \u7684\u63a5\u53e3\uff1a`https://%s/auth/token`\uff0c\u6ca1\u6709\u5219\u8d70\u7528\u6237\u914d\u7f6e`realm`"},{"id":"Kubernetes-Scheduler","metadata":{"permalink":"/blog/Kubernetes-Scheduler","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-07-11-Kubernetes-Scheduler.md","source":"@site/blog/2022-07-11-Kubernetes-Scheduler.md","title":"Kubernetes Scheduler","description":"Kubernetes Scheduler \u57fa\u672c\u4f7f\u7528\u6982\u5ff5","date":"2022-07-11T00:00:00.000Z","tags":[{"inline":false,"label":"Kubernetes","permalink":"/blog/tags/kubernetes","description":"kubernetes"},{"inline":false,"label":"Kubernetes Scheduler","permalink":"/blog/tags/kubernetes-scheduler","description":"Kubernetes Scheduler"}],"readingTime":10.29,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"Kubernetes-Scheduler","title":"Kubernetes Scheduler","authors":["rongfu"],"tags":["Kubernetes","Kubernetes Scheduler"]},"unlisted":false,"prevItem":{"title":"Distribution Auth Type","permalink":"/blog/distribution-auth"},"nextItem":{"title":"\u8bfb\u300a\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f\u300b","permalink":"/blog/\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f"}},"content":"Kubernetes Scheduler \u57fa\u672c\u4f7f\u7528\u6982\u5ff5\\n\x3c!-- truncate --\x3e\\n# Kubernetes Scheduler\\n\\n## Scheduler Workflow\\n\\n![schedule-workflow](static/img/2022-07-11/schedule-workflow.jpeg)\\n\\n`Scheduler WorkFlow`\u5b9a\u4e49\u4e86`Scheduler Cycle`\u548c`Binding Cycle`\uff0c\u5728`Scheduler Cycle`\u4e2d\u6709\u4e32\u884c`Filter `\u548c`Score`\u4e24\u4e2a\u9636\u6bb5\uff0c`Bind`\u662f\u5f02\u6b65\u5e76\u884c\u9636\u6bb5\u3002\\n\\n\\n\\n## Scheduler FrameWork\\n\\n`Scheduler FrameWork`\u662f\u901a\u8fc7\u5728`Scheduler  Cycle`\u4e2d\u901a\u8fc7\u9884\u7559\u6269\u5c55\u70b9\u6765\u8fdb\u884c\u6269\u5c55\u8c03\u5ea6\u6d41\u7a0b\uff0c`FrameWork`\u9884\u7559\u4e86\u591a\u4e2a\u6269\u5c55\u70b9:\\n\\n- `QueueSortFunc() LessFunc`\uff1a `Pod` \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u7684\u4f18\u5148\u7ea7\\n- `PreFilter`\uff1a \u5728\u8fc7\u6ee4\u4e4b\u524d\u6267\u884c\\n- `Filter`\uff1a \u6267\u884c\u8fc7\u6ee4\u51fd\u6570\\n- `PostFilter`: \u6267\u884c\u62a2\u5360\\n- `PreScore`\uff1a\u6267\u884c`Score\u4e4b\u524d\u6267\u884c\\n- `Score`: \u6267\u884c`Node`\u6253\u5206\\n- `PreBind`: \u6267\u884c`Binding`\u4e4b\u524d\\n- `Bind`\uff1a \u6267\u884c`Binding`\u52a8\u4f5c\\n- `PostBind`\uff1a\u6267\u884c`Binding`\u4e4b\u540e\\n\\n\u81ea\u5b9a\u4e49`Schedlue`\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u5b9e\u73b0`Scheduler FrameWork`\u4e2d\u66b4\u9732\u7684\u63a5\u53e3\uff0c\u7136\u540e\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u8fdb\u884c`Plugin`\u6ce8\u518c\u5373\u53ef\u3002\\n\\n```go\\nfunc main() {\\n\\trand.Seed(time.Now().UTC().UnixNano())\\n\\tlogs.InitLogs()\\n\\tdefer logs.FlushLogs()\\n\\n\\tcmd := app.NewSchedulerCommand(\\n\\t\\tapp.WithPlugin(sample.Name, sample.New),\\n\\t)\\n\\tif err := cmd.Execute(); err != nil {\\n\\t\\t_, _ = fmt.Fprintf(os.Stderr, \\"%v\\\\n\\", err)\\n\\t\\tos.Exit(1)\\n\\t}\\n}\\n```\\n\\n\\n\\n## Scheduler Plugin\\n\\n\u5982\u4e0b\u7684`Scheduler Plugin`\u662f`kube-scheduler`\u91cc\u9762\u5185\u5d4c\u7684\u63d2\u4ef6\uff0c\u6db5\u76d6\u4e86`WorkFlow`\u91cc\u9762\u7684\u6240\u6709\u6d41\u7a0b\u3002\\n\\n### Sort(\u6392\u5e8f)\\n\\n#### 1.PrioritySort\\n\\n`PrioritySort`\u4f18\u5148\u961f\u5217\u662f\u8fdb\u884c`Pod`\u5728\u5165\u961f\u65f6\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u6309\u627e`Pod`\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u6392\u5e8f\uff0c\u901a\u8fc7\u8bfb\u53d6`pod.Spec.Priority`\u5b57\u6bb5\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u5982\u679c\u672a\u8bbe\u7f6e`Pod`\u7684\u4f18\u5148\u7ea7\u5219\u6309\u7167\u6dfb\u52a0\u5230\u961f\u5217\u7684\u65f6\u95f4\u5148\u540e\u8fdb\u884c\u6392\u5e8f\u3002\\n\\n```Go\\np1 := pod1.Spec.Priority != nil ? *pod1.Spec.Priority : 0\\np2 := pod2.Spec.Priority != nil ? *pod2.Spec.Priority : 0\\nreturn (p1 > p2) || (p1 == p2 && pInfo1.Timestamp.Before(pInfo2.Timestamp))\\n```\\n\\n\\n\\n### Filter(\u9884\u9009) \\n\\n#### 1. InterPodAffinity\\n\\n`InterPodAffinity` \u68c0\u67e5`Pod`\u7684\u4eb2\u548c\u6027\u662f\u5426\u6ee1\u8db3\uff0c\u5b9e\u73b0\u4e86`PreFilterPlugin`\u548c`FilterPlugin`\u4e24\u4e2a\u63d2\u4ef6\uff1b\\n\\n#### 2. NodeAffinity\\n\\n`NodeAffinity`\u662f`Node`\u4eb2\u548c\u6027\u7684\u8fc7\u6ee4\uff0c\u901a\u8fc7`pod.Spec.Affinity.NodeAffinity `\u662f\u5426\u914d\u7f6e`Node`\u4eb2\u548c\u6027\u548c`Node`\u8fdb\u884c`Match`\u52a8\u4f5c\u3002\\n\\n#### 3.NodeName\\n\\n`NodeName`\u7528\u4e8e\u5728\u5bf9`pod.Spec.NodeName`\u5b57\u6bb5\u503c\u7684\u5224\u65ad\uff0c\u5224\u65ad\u662f\u5426\u662f\u5f53\u524d\u7684`Node`\uff0c\u5982\u679c\u6307\u5b9a\u4e86`pod.Spec.NodeName`\u5e76\u4e14\u4e0d\u662f\u5f53\u524d\u7684\u8282\u70b9\uff0c\u5219\u8fd4\u56de`UnschedulableAndUnresolvable`\u72b6\u6001\u3002\\n\\n#### 4.NodePorts\\n\\n`NodePorts`\u7528\u4e8e\u68c0\u67e5\u8981\u542f\u7528\u7684\u7aef\u53e3\u662f\u5426\u5df2\u7ecf\u5728`Node`\u4e0a\u4f7f\u7528\u8fc7\uff0c\u5982\u679c\u4f7f\u7528\u8fc7\u5219\u8fd4\u56de`Unschedulable`\u72b6\u6001\u3002\\n\\n#### 5.NodeResourcesFit\\n\\n`NodeResourcesFit` \u68c0\u67e5\u8282\u70b9\u662f\u5426\u6709\u8db3\u591f\u7684\u8d44\u6e90\uff0c\u5982:`cpu`\u3001`memory`\u3001`gpu`\u7b49\uff0c\u901a\u8fc7\u90a3\u53d6`max_resource(sum_pod, any_init_container)`\u548c`node`\u53ef\u5206\u914d\u7684\u8d44\u6e90\u6765\u5224\u65ad\u8282\u70b9\u662f\u5426\u8d44\u6e90\u8db3\u591f\u3002\u5982\u679c\u6709\u4efb\u4e00\u8d44\u6e90\u4e0d\u591f\uff0c\u6b64\u8282\u70b9\u5219\u4f1a\u8fd4\u56de\u8d44\u6e90\u4e0d\u8db3\u88ab\u8fc7\u6ee4\u3002\\n\\n#### 6.NodeUnschedulable\\n\\n`NodeUnschedulable` \u63d2\u4ef6\u8fc7\u6ee4\u8bbe\u7f6e`node.Spec.Unschedulable=true`\u7684\u8282\u70b9\uff0c\u4f46\u662f\u5982\u679c`Pod`\u8bbe\u7f6e\u4e86\u5bb9\u5fcd`Unschedulable`\u7684\u6c61\u70b9\u5219\u4e0d\u8fc7\u6ee4\u3002\\n\\n#### 7.NodeVolumeLimits\\n\\n`NodeVolumeLimits`\u662f\u4e00\u4e2a\u8282\u70b9\u68c0\u67e5`volume`\u5bb9\u91cf\u7684\u63d2\u4ef6\uff1b \u6821\u9a8cPVC\u6307\u5b9a\u7684Provision\u5728CSI plugin\u6216\u975eCSI Plugin\uff08\u540e\u4e09\u4e2a\uff09\u4e0a\u62a5\u7684\u5355\u673a\u6700\u5927\u6302\u76d8\u6570\uff08\u5b58\u50a8\u63d2\u4ef6\u63d0\u4f9b\u65b9\u4e00\u822c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u5355\u673a\u6700\u5927\u6302\u8f7d\u78c1\u76d8\u6570\u662f\u6709\u9650\u5236\u7684\uff09\\n\\n#### 8.PodTopologySpread\\n\\n`PodTopologySpread` \u662f\u7528\u4e8e\u68c0\u67e5`Pod`\u7684\u62d3\u6251\u903b\u8f91\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\\n\\n#### 9.TaintToleration\\n\\n`TaintToleration`\u662f\u4e00\u4e2a\u6c61\u70b9\u5bb9\u5fcd\u5ea6\u7684\u63d2\u4ef6\uff0c\u7528\u4e8e\u68c0\u67e5`Pod`\u662f\u5426\u80fd\u5bb9\u5fcd\u6b21\u6c61\u70b9\u3002`Taint`\u6c61\u70b9\u662f`Node`\u4e0a\u7684\u6807\u7b7e\uff0c`Toleration`\u5bb9\u5fcd\u5ea6\u662f`Pod`\u4e0a\u7684\u529f\u80fd\uff0c\u4e00\u4e2a\u5bb9\u5fcd\u5ea6\u548c\u4e00\u4e2a\u6c61\u70b9\u76f8\u201c\u5339\u914d\u201d\u662f\u6307\u5b83\u4eec\u6709\u4e00\u6837\u7684`key`\u548c`value`\u3002\\n\\n#### 10.VolumeBinding\\n\\n`VolumeBinding`\u68c0\u67e5`Pod`\u6302\u8f7d\u7684`PVC`\uff0c\u5982\u679c\u5176\u5bf9\u5e94`SC(StorageClass)`\u7684`VolumeBindingMode`\u662f`Immediate`\u6a21\u5f0f\uff0c\u8be5`PVC`\u5fc5\u987b\u5df2\u7ecf\u662f`bound`\uff0c\u5426\u5219\u9700\u8981\u8fd4\u56de`UnschedulableAndUnresolvable`\u3002\\n\\n#### 11.VolumeRestrictions\\n\\n`VolumeRestrictions` \u68c0\u67e5\u6302\u8f7d\u8be5Node\u4e0a\u7684\u5377\u662f\u5426\u6ee1\u8db3\u5b58\u50a8\u63d0\u4f9b\u8005\u7684\u8981\u6c42\\n\\n### Score(\u4f18\u9009)\\n\\n#### 1.ImageLocality\\n\\n`ImageLocality`\u662f\u4e00\u4e2a\u6253\u5206\u63d2\u4ef6\uff0c\u5bf9\u4e8e\u8c03\u5ea6`Pod`\u7684\u955c\u50cf\u5df2\u7ecf\u5b58\u5728`Node`\u4e0a\u7ed9\u8bc4\u5206\u3002\u5df2\u7ecf\u5b58\u5728\u7684\u955c\u50cf\u5e76\u4e14\u955c\u50cf\u8d8a\u5927\u7684\u5206\u8d8a\u9ad8\uff1b\uff08\u903b\u8f91\u5c31\u662f\u8d8a\u5927\u7684\u955c\u50cf\u5982\u679c\u88ab\u91cd\u65b0\u62c9\u53d6\u9700\u8981\u82b1\u8d39\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4f46\u662f\u5c0f\u7684\u955c\u50cf\u62c9\u8d77\u6765\u5c31\u5feb\uff0c\u6240\u4ee5\u955c\u50cf\u5b58\u5728\u5e76\u4e14\u8d8a\u5927\u7684\u5206\u8d8a\u9ad8\u5c31\u662f\u8fd9\u4e2a\u903b\u8f91\uff09;\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684\u955c\u50cf\u603b\u5927\u5c0f`< 23Mb`\u5219`node`\u4f1a\u88ab\u6253`0`\u5206\uff1b\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684\u955c\u50cf\u603b\u5927\u4e8e`1G * \u5bb9\u5668\u6570`\u5219\u4f1a\u88ab\u6253`1`\u5206\u3002\\n\\n#### 2.InterPodAffinity \\n\\n`InterPodAffinity`\u5728`Pod`\u4eb2\u548c\u6027\u4e4b\u95f4\u8ba1\u7b97\u4eb2\u548c\u6027\u7684\u7684\u5206\u503c\u3002\\n\\n#### 3.NodeAffinity\\n\\n`NodeAffinity`\u662f\u901a\u8fc7\u8282\u70b9\u7684\u4eb2\u548c\u6027\u6765\u8fdb\u884c\u8282\u70b9\u6253\u5206\u7684\uff0c`PreScore` \u4e3b\u8981\u903b\u8f91\u662f\u4ece`pod.Spec.Affinity.NodeAffinity.PreferredDuringSchedulingIgnoredDuringExecution`\u5b57\u6bb5\u4e2d\u83b7\u53d6\u9996\u9009\u8282\u70b9\u4eb2\u548c\u914d\u7f6e\uff0c\u4e3b\u8981\u7684\u662f\u914d\u7f6e\u7684`weight`\u5b57\u6bb5\u503c\uff0c\u5728\u901a\u8fc7`Label`\u5339\u914d\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0`Node.Meta.Label`\u662f\u5339\u914d`matchExpressions`\u4e2d\u7684\u5b57\u6bb5\u5219`score += weight`\uff0c\u8fd9\u6837\u8fd9\u4e2a\u8282\u70b9\u7684\u4f18\u5148\u7ea7\u5c31\u63d0\u9ad8\u4e86\u3002\\n\\n#### 4.NodeResourcesBalancedAllocation\\n\\n`NodeResourcesBalancedAllocation`\u8282\u70b9\u8d44\u6e90\u5747\u8861\u63d2\u4ef6\uff0c\u662f\u4e00\u4e2a\u901a\u8fc7`cpu`\u548c`memory`\u5bb9\u91cf\u5206\u6570\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u6839\u636e\u4ed6\u4eec\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u6392\u540d\uff1b\u5bf9\u4e8e\u8d44\u6e90\u4f7f\u7528\u7387\u5747\u8861\u7684\u8282\u70b9\u5206\u503c\u66f4\u9ad8\u3002\\n\\n```\\n# ResourceSpec[{\\"name\\":\\"cpu\\",\\"Weight\\":1},{\\"name\\":\\"memory\\",\\"Weight\\":1}]\\n\\nstd =  \u03a3((fraction(i)-mean)^2)/len(resources)\\n# std\u8ba1\u7b97\u53d6\u51b3\u4e8e\u9700\u8981\u5747\u8861\u51e0\u79cd\u8d44\u6e90\uff0c\u5982\u679c\u53ea\u6709cpu\u548cmemory\\nstd=Abs( (cpuRequest1/cpuAllocable1 - memoryRequest1/memoryAllocable1) / 2 )\\n# node\u6253\u5206\u5219\u7531\u5982\u4e0b\u8ba1\u7b97\\nscore = (1 - std) * MaxNodeScore(100)\\n```\\n\\n#### 5.NodeResourcesFit\\n\\n`NodeResourcesFit`\u6253\u5206\u5df2\u7ecf\u914d\u7f6e\u7684\u7b56\u7565\u8fdb\u884c\uff0c\u6709\u5982\u4e0b\u4e09\u79cd\uff1a\\n\\n- `LeastAllocated`: \u4f18\u5148\u5206\u914d\u8d44\u6e90\u6700\u5c11\u7684\u8282\u70b9\uff1b\u5c31\u662f\u8d44\u6e90\u5806\u53e0\\n- `MostAllocated`: \u4f18\u5148\u5206\u914d\u8d44\u6e90\u6700\u591a\u7684\u8282\u70b9\uff1b\u5c31\u662f\u8d44\u6e90\u6253\u6563\\n- `RequestedToCapacityRatio`: \u53ef\u4ee5\u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5bf9\u8d44\u6e90\u5bb9\u91cf\u8fdb\u884c\u6253\u5206\u3002\\n\\n`LeastAllocated`\u8ba1\u7b97\u8282\u70b9\u5206\u503c\u903b\u8f91\uff1a`(cpu((capacity-requested)*MaxNodeScore*cpuWeight/capacity) + memory((capacity-requested)*MaxNodeScore*memoryWeight/capacity) + ...)/weightSum` \\n\\nMostAllocated \u8ba1\u7b97\u8282\u70b9\u5206\u503c\u903b\u8f91\uff1a`(cpu(MaxNodeScore * sum(requested) / capacity) + memory(MaxNodeScore * sum(requested) / capacity) + ...) / weightSum`\\n\\n`capacity`\u662f`allocable`\\n\\n#### 6.PodTopologySpread\\n\\n`PodTopologySpread`\u6743\u91cd\u4e3a2\\n\\n#### 7.SelectorSpread\\n\\n`SelectorSpread`\u662f\u4e00\u4e2a\u8ba1\u7b97\u9009\u62e9\u5668\u4f20\u64ad\u4f18\u5148\u7ea7\u7684\u6253\u5206\u63d2\u4ef6\uff1b\\n\\n#### 8.TaintToleration\\n\\n`TaintToleration\u8ba1\u7b97\u65e0\u6cd5\u5bb9\u5fcd\u6c61\u70b9\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u7528\u4e8e\u7ed9`Pod \u65e0\u6cd5\u5bb9\u5fcd\u6c61\u70b9\u6253\u5206\uff0c\u6bcf\u4e00\u4e2a\u65e0\u6cd5\u5bb9\u5fcd\u5219`+1`\uff0c\u6700\u540e\u5f97\u5230\u7684\u5c31\u662f`Node`\u7684\u5206\u3002\\n\\n### Binding(\u7ed1\u5b9a)\\n\\n#### 1. DefaultBind\\n\\n`DefaultBind`\u662f\u901a\u8fc7\u4f7f\u7528`k8s client`\u7ed1\u5b9a`Pod`\u5230`Node`\u3002\u7ed1\u5b9a\u6d41\u7a0b\u662f\u5148\u521b\u5efa\u4e00\u4e2a`Binding`\u7c7b\u578b\u5bf9\u8c61\uff0c\u901a\u8fc7\u8bbe\u7f6e`Target`\u5b57\u6bb5\u503c\uff0c\u6765\u8bb0\u5f55\u7ed1\u5b9a\u5bf9\u8c61\u7684\u76ee\u6807\u5bf9\u8c61\u3002\\n\\n```go\\n# Binding\u662f\u5c06\u4e00\u4e2a\u5bf9\u8c61\u4e0e\u53e6\u4e00\u4e2a\u5bf9\u8c61\u8054\u7cfb\u8d77\u6765\\ntype Binding struct {\\n\\tmetav1.TypeMeta `json:\\",inline\\"`\\n\\tmetav1.ObjectMeta `json:\\"metadata,omitempty\\" protobuf:\\"bytes,1,opt,name=metadata\\"`\\n\\tTarget ObjectReference `json:\\"target\\" protobuf:\\"bytes,2,opt,name=target\\"`\\n}\\nbinding := &v1.Binding{\\n\\t\\tObjectMeta: metav1.ObjectMeta{Namespace: p.Namespace, Name: p.Name, UID: p.UID},\\n\\t\\tTarget:     v1.ObjectReference{Kind: \\"Node\\", Name: nodeName},\\n}\\n```\\n\\n\u521b\u5efa`Binding`\u5bf9\u8c61\u4e4b\u540e\uff0c\u901a\u8fc7`Pods`\u7684`Bind`\u65b9\u6cd5\u5c31\u53ef\u4ee5\u8fdb\u884c\u7ed3\u679c\u7ed1\u5b9a\u3002\u6700\u7ec8\u662f\u521b\u5efa`Pod`\u7684\u7ed1\u5b9a\u3002\\n\\n```http\\nPOST /api/v1/namespaces/{namespace}/pods/{name}/binding\\nnamespace: pod namespace\\nname: binding \u540d\u5b57\\nbody: Binding\u5bf9\u8c61\u7ed3\u6784\u4f53\\n```\\n\\n\u9009\u4e2d\u7684\u8282\u70b9\u5728\u548c\u5f85\u8c03\u5ea6Pod\u8fdb\u884cBind\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4f1aBind\u5931\u8d25\uff0c\u6b64\u65f6\u9700\u8981\u505a\u56de\u9000\uff0c\u628aPod\u7684Assumed\u72b6\u6001\u9000\u56deInitial\uff0c\u4eceNode\u91cc\u9762\u628aPod\u6570\u636e\u8d26\u672c\u64e6\u9664\u6389\uff0c\u4f1a\u628aPod\u91cd\u65b0\u4e22\u56de\u5230unschedulableQ\u961f\u5217\u91cc\u9762\u3002\u5728unschedulableQ\u91cc\uff0c\u5982\u679c\u4e00\u4e2aPod\u4e00\u5206\u949f\u6ca1\u8c03\u5ea6\u8fc7\uff0c\u5c31\u4f1a\u91cd\u65b0\u56de\u5230activeQ\u3002\u5b83\u7684\u8f6e\u8be2\u5468\u671f\u662f30s\u3002\\n\\n\u8c03\u5ea6\u5931\u8d25\u7684`Pod`\u4f1a\u653e\u5230`backoffQ`\uff0c\u5728`backoffQ`\u91cc\u7b49\u5f85\u7684\u65f6\u95f4\u4f1a\u6bd4\u5728`unschedulableQ`\u91cc\u66f4\u77ed\uff0c`backoffQ`\u91cc\u7684\u964d\u7ea7\u7b56\u7565\u662f`2`\u7684\u6307\u6570\u6b21\u5e42\u964d\u7ea7\u3002\u5047\u8bbe\u91cd\u8bd5\u7b2c\u4e00\u6b21\u4e3a`1s`\uff0c\u90a3\u7b2c\u4e8c\u6b21\u5c31\u662f`2s`\uff0c\u7b2c\u4e09\u6b21\u5c31\u662f`4s`\uff0c\u4f46\u6700\u5927\u5230`10s`\u3002\\n\\n\\n\\n#### 2.VolumeBinding\\n\\n`VolumeBinding`\u662f`PreBinding`\u4f5c\u4e3a`Binding`\u4e4b\u524d\u68c0\u67e5\u7684`Volume`\u662f\u5426\u7ed1\u5b9a\u5230`Node`\u4e0a\u9762\uff0c\\n\\n### Preemption(\u62a2\u5360)\\n\\n#### 1.DefaultPreemption\\n\\n`DefaultPreemption`\u662f\u4e00\u4e2a`PostFilter`\u63d2\u4ef6\uff0c\u5b9e\u73b0\u4e86\u9ed8\u8ba4\u62a2\u5360\u903b\u8f91\uff1b\u5f53\u9ad8\u4f18\u5148\u7ea7\u7684`Pod`\u6ca1\u6709\u627e\u5230\u5408\u9002\u7684`Node`\u65f6\uff0c\u4f1a\u6267\u884c`Preempt`\u62a2\u5360\u7b97\u6cd5\uff0c\u62a2\u5360\u7684\u6d41\u7a0b\u3002\\n\\n- \u4e00\u4e2a`Pod`\u8fdb\u5165\u62a2\u5360\u7684\u65f6\u5019\uff0c\u9996\u5148\u4f1a\u5224\u65ad`Pod`\u662f\u5426\u62e5\u6709\u62a2\u5360\u7684\u8d44\u683c\uff0c\u6709\u53ef\u80fd\u4e0a\u6b21\u5df2\u7ecf\u62a2\u5360\u8fc7\u4e00\u6b21\u3002\\n- \u5982\u679c\u7b26\u5408\u62a2\u5360\u8d44\u683c\uff0c\u4f1a\u5148\u5bf9\u6240\u6709\u7684\u8282\u70b9\u8fdb\u884c\u4e00\u6b21\u8fc7\u6ee4\uff0c\u8fc7\u6ee4\u51fa\u7b26\u5408\u8fd9\u6b21\u62a2\u5360\u8981\u6c42\u7684\u8282\u70b9\u3002\u7136\u540e\\n- \u6a21\u62df\u4e00\u6b21\u8c03\u5ea6\uff0c\u628a\u4f18\u5148\u7ea7\u4f4e\u7684`Pod`\u5148\u79fb\u9664\u51fa\u53bb\uff0c\u518d\u5c1d\u8bd5\u80fd\u5426\u628a\u5f85\u62a2\u5360\u7684`Pod`\u653e\u7f6e\u5230\u6b64\u8282\u70b9\u4e0a\u3002\u7136\u540e\u901a\u8fc7\u8fd9\u4e2a\u8fc7\u7a0b\u4ece\u8fc7\u6ee4\u5269\u4e0b\u7684\u8282\u70b9\u4e2d\u9009\u51fa\u4e00\u6279\u8282\u70b9\u8fdb\u884c\u62a2\u5360\u3002\\n- `ProcessPreemptionWithExtenders`\u662f\u4e00\u4e2a\u6269\u5c55\u7684\u94a9\u5b50\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u8fd9\u91cc\u52a0\u4e00\u4e9b\u81ea\u5df1\u62a2\u5360\u8282\u70b9\u7684\u7b56\u7565\u3002\u5982\u679c\u6ca1\u6709\u6269\u5c55\u7684\u94a9\u5b50\uff0c\u8fd9\u91cc\u9762\u4e0d\u505a\u4efb\u4f55\u52a8\u4f5c\u3002\\n- `PickOneNodeForPreemption`\uff0c\u4ece\u4e0a\u9762\u9009\u51fa\u7684\u8282\u70b9\u91cc\u6311\u9009\u51fa\u6700\u5408\u9002\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u7b56\u7565\u5305\u62ec\uff1a\\n  - \u4f18\u5148\u9009\u62e9\u6253\u7834`PDB`\u6700\u5c11\u7684\u8282\u70b9\uff1b\\n  - \u5176\u6b21\u9009\u62e9\u5f85\u62a2\u5360`Pods`\u4e2d\u6700\u5927\u4f18\u5148\u7ea7\u6700\u5c0f\u7684\u8282\u70b9\uff1b\\n  - \u518d\u6b21\u9009\u62e9\u5f85\u62a2\u5360`Pods`\u4f18\u5148\u7ea7\u52a0\u548c\u6700\u5c0f\u7684\u8282\u70b9\uff1b\\n  - \u63a5\u4e0b\u6765\u9009\u62e9\u5f85\u62a2\u5360`Pods`\u6570\u76ee\u6700\u5c0f\u7684\u8282\u70b9\uff1b\\n  - \u6700\u540e\u9009\u62e9\u62e5\u6709\u6700\u665a\u542f\u52a8`Pod`\u7684\u8282\u70b9\uff1b\\n\\n\u901a\u8fc7\u8fc7\u6ee4\u4e4b\u540e\uff0c\u4f1a\u9009\u51fa\u4e00\u4e2a\u6700\u5408\u9002\u7684\u8282\u70b9\u3002\u5bf9\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5f85\u62a2\u5360\u7684`Pod`\u8fdb\u884c`delete`\uff0c\u5b8c\u6210\u62a2\u5360\u8fc7\u7a0b\u3002"},{"id":"\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f","metadata":{"permalink":"/blog/\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-05-18-\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b.md","source":"@site/blog/2022-05-18-\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b.md","title":"\u8bfb\u300a\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f\u300b","description":"\u4e91\u8ba1\u7b97\u7684\u6839\u672c\u5c31\u662f\u628a\u57fa\u7840\u8d44\u6e90\u865a\u62df\u5316\u4e4b\u540e\u4ee5\u66f4\u5c0f\u7684\u529b\u5ea6\u63d0\u4f9b\u51fa\u6765\u7684\u80fd\u529b\u3002","date":"2022-05-18T00:00:00.000Z","tags":[{"inline":false,"label":"\u8bfb\u4e66\u7b14\u8bb0","permalink":"/blog/tags/read-notes","description":"\u8bfb\u4e66\u7b14\u8bb0"}],"readingTime":9.525,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f","title":"\u8bfb\u300a\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f\u300b","authors":["rongfu"],"tags":["\u8bfb\u4e66\u7b14\u8bb0"]},"unlisted":false,"prevItem":{"title":"Kubernetes Scheduler","permalink":"/blog/Kubernetes-Scheduler"},"nextItem":{"title":"Linux\u7f51\u7edc\u865a\u62df\u5316:\u63a2\u7d22NetWork Namespace","permalink":"/blog/Linux-Network-Namespace"}},"content":"\u4e91\u8ba1\u7b97\u7684\u6839\u672c\u5c31\u662f\u628a\u57fa\u7840\u8d44\u6e90\u865a\u62df\u5316\u4e4b\u540e\u4ee5\u66f4\u5c0f\u7684\u529b\u5ea6\u63d0\u4f9b\u51fa\u6765\u7684\u80fd\u529b\u3002\\n\x3c!-- truncate --\x3e\\n\\n# \u4e91\u8ba1\u7b97\u6982\u89c8\\n\\n\u4e91\u8ba1\u7b97\u7684\u6839\u672c\u5c31\u662f\u628a\u57fa\u7840\u8d44\u6e90\u865a\u62df\u5316\u4e4b\u540e\u4ee5\u66f4\u5c0f\u7684\u529b\u5ea6\u63d0\u4f9b\u51fa\u6765\u7684\u80fd\u529b\u3002\\n\\n## \u4e91\u8ba1\u7b97\u5206\u7c7b\\n- IaaS: \u57fa\u7840\u8bbe\u65bd\u5373\u670d\u52a1\uff0c\u5c31\u662f\u5c06\u57fa\u7840\u8bbe\u65bd\u5f53\u4f5c\u670d\u52a1\u961f\u5916\u8f93\u51fa\uff0c\u8ba1\u7b97\u3001\u7f51\u7edc\u3001\u5b58\u50a8\u8fd9\u4e9b\u539f\u59cb\u8d44\u6e90\u5c31\u662f\u57fa\u7840\u8bbe\u65bd\u8d44\u6e90\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u961f\u5916\u63d0\u4f9b\u670d\u52a1\u3002\u865a\u62df\u5316\u662fIaaS\u5b9e\u73b0\u7684\u57fa\u7840\uff0c\u901a\u8fc7\u8ba1\u7b97\u865a\u62df\u5316\u3001\u7f51\u7edc\u865a\u62df\u5316\u3001\u5b58\u50a8\u865a\u62df\u5316\u5c06\u7269\u7406\u8d44\u6e90\u6574\u5408\u6210\u865a\u62df\u7684\u8d44\u6e90\u6c60\uff0c\u7136\u540e\u628a\u8d44\u6e90\u4ee5\u6309\u9700\u7684\u5f62\u5f0f\u63d0\u4f9b\u7ed9\u8d44\u6e90\u7533\u8bf7\u8005\uff0c\u4ece\u800c\u5b8c\u6210\u8d44\u6e90\u7684\u4e8c\u6b21\u5206\u914d\u3002\\n- PaaS\uff1a\u5e73\u53f0\u5373\u670d\u52a1\uff0c\u5b83\u76f4\u63a5\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u5957\u5e73\u53f0\uff0c\u5305\u62ec\u8bed\u8a00\u8fd0\u884c\u73af\u5883\u3001\u7f16\u7a0b\u6846\u67b6\u53ca\u6570\u636e\u5b58\u50a8\u4e2d\u95f4\u4ef6\u7b49\u4e00\u7cfb\u5217\u529f\u80fd\u3002PaaS\u5c06\u7ba1\u7406\u7684\u5bf9\u8c61\u4ece\u8d44\u6e90\u5347\u7ea7\u5230\u670d\u52a1\uff0c\u9762\u5411\u63a5\u53e3\u7f16\u7a0b\u548c\u8fd0\u7ef4\u3002\\n- SaaS: \u8f6f\u4ef6\u5373\u670d\u52a1\uff0c\u5b83\u662f\u6700\u9ad8\u5c42\u7684\u62bd\u8c61\uff0c\u5bf9\u4e8e\u6700\u7ec8\u7684\u7528\u6237\uff0c\u5b83\u4e0d\u5173\u5fc3\u4efb\u4f55\u6280\u672f\u76f8\u5173\u5185\u5bb9\uff0c\u4ee5\u670d\u52a1\u7684\u65b9\u5f0f\u4ea4\u4ed8\u3002\u5982\uff1a\u5728\u7ebf\u7684\u4e91\u7f16\u8f91\u5668\u3002\\n- FaaS\uff1a\u51fd\u6570\u5373\u670d\u52a1\uff0c\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e9bCRUD\u64cd\u4f5c\u51fd\u6570\uff0c\u5728\u7279\u5b9a\u4e8b\u4ef6\u4e0b\u89e6\u53d1\u8fd9\u4e9b\u51fd\u6570\uff0c \u5e76\u6267\u884c\u3002\\n\\n## \u5173\u952e\u6280\u672f\\n\u8d44\u6e90\u8c03\u5ea6\uff1a\u8d44\u6e90\u8c03\u5ea6\u5c31\u662f\u5f53\u7528\u6237\u7533\u8bf7\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u9700\u8981\u901a\u8fc7\u8c03\u5ea6\u786e\u5b9a\u8d44\u6e90\u4f4d\u7f6e\u3002\\n\\nGoogle\u5728Omega\u7684\u8c03\u5ea6\u7cfb\u7edf\u8bba\u6587\u4e2d\u5c06\u8c03\u5ea6\u5206\u4e3a\u4e09\u7c7b\uff1a\\n- \u5355\u4f53\uff1a\u5355\u4f53\u8c03\u5ea6\u662f\u6307\u6240\u6709\u4efb\u52a1\u90fd\u662f\u901a\u8fc7\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\u5668\u5206\u914d\u7684\uff0c\u5178\u578b\u4ee3\u8868\u662fKubernetes\uff0c\u5b83\u7684\u4f18\u70b9\u662f\u7b80\u5355\uff0c\u7f3a\u70b9\u662f\u5f88\u96be\u652f\u6301\u591a\u7c7b\u578b\u4efb\u52a1\u7684\u6267\u884c\uff0c\u5982\u540c\u65f6\u652f\u6301\u6279\u5904\u7406\u548c\u957f\u4efb\u52a1\u3002\\n- \u4e8c\u5c42\u8c03\u5ea6\uff1a\u4e8c\u5c42\u8c03\u5ea6\u662f\u5c06\u8d44\u6e90\u5206\u914d\u548c\u4efb\u52a1\u8c03\u5ea6\u5206\u79bb\uff0c\u7b2c\u4e00\u5c42\u662f\u4ece\u5168\u5c40\u7684\u8d44\u6e90\u6c60\u4e2d\u5206\u914d\u8d44\u6e90\u7ed9\u5404\u79cd\u7c7b\u578b\u4efb\u52a1\u8c03\u5ea6\u5668\uff0c\u7b2c\u4e8c\u5c42\u4efb\u52a1\u8c03\u5ea6\u5668\u4f9d\u636e\u4efb\u52a1\u7279\u70b9\u542f\u52a8\u4efb\u52a1\uff0c\u5178\u578b\u4ee3\u8868\u662fMesos\u548cYarn\u3002\u4e8c\u5c42\u8c03\u5ea6\u7684\u4f18\u70b9\u662f\u53ef\u4ee5\u51cf\u5c11\u8c03\u5ea6\u65f6\u95f4\uff0c\u7f3a\u70b9\u662f\uff1a\u8d44\u6e90\u8c03\u5ea6\u65e0\u6cd5\u611f\u77e5\u5168\u5c40\u8d44\u6e90\uff0c\u53ea\u4e86\u89e3\u81ea\u5df1\u7684\u53ef\u7528\u8d44\u6e90\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4efb\u52a1\u8c03\u5ea6\u5668\u53ea\u4f1a\u6700\u5927\u5316\u81ea\u5df1\u7684\u5229\u76ca\uff0c\u9020\u6210\u5168\u5c40\u8d44\u6e90\u7684\u4f7f\u7528\u5e73\u8861\u3002\\n- \u5171\u4eab\u72b6\u6001\uff1a\u5171\u4eab\u72b6\u6001\u8c03\u5ea6\u5668\uff0c\u5b83\u901a\u8fc7\u5728\u6bcf\u4e2a\u4efb\u52a1\u8c03\u5ea6\u5668\u4e2d\u4fdd\u5b58\u4e00\u4efd\u6574\u4e2a\u96c6\u7fa4\u72b6\u6001\u4fe1\u606f\u7684\u526f\u672c\uff0c\u4ece\u800c\u5b9e\u73b0\u5168\u5c40\u8c03\u5ea6\uff0c\u5982Omega\u7684\u5b9e\u73b0\u3002\\n\\n\u901a\u5e38\u7684\u8c03\u5ea6\u6d41\u7a0b\u5206\u4e3a\u4e24\u5c42\uff1a\u7b2c\u4e00\u5c42\u662f\u4e3b\u673a\u8fc7\u6ee4\uff0c\u7b2c\u4e8c\u5c42\u662f\u4e3b\u673a\u6253\u5206\uff0c\u5f53\u670d\u52a1\u5668\u8fbe\u5230\u4e00\u5b9a\u89c4\u6a21\u540e\uff0c\u8fc7\u6ee4\u548c\u6253\u5206\u5c06\u4f1a\u8017\u8d39\u5f88\u591a\u65f6\u95f4\uff0c\u4f18\u5316\u7684\u65b9\u5f0f\u901a\u5e38\u5305\u62ec\uff1a\u5206\u533a\u8c03\u5ea6\uff08\u5c06\u4e3b\u673a\u5212\u5206\u6210\u591a\u4e2a\u96c6\u7fa4\uff0c\u6bcf\u6b21\u8c03\u5ea6\u53ea\u9488\u5bf9\u96c6\u7fa4\uff09\u3001\u5e76\u884c\u8c03\u5ea6\uff08\u5c06\u8c03\u5ea6\u7b97\u6cd5\u5e76\u884c\u5316\u5904\u7406\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u5e76\u91c7\u7528\u4e50\u89c2\u9501\u548c\u91cd\u8bd5\u673a\u5236\uff09\u3002\u5728\u8d44\u6e90\u6df7\u90e8\u7684\u60c5\u51b5\u4e0b\uff0c\u8d44\u6e90\u8c03\u5ea6\u66f4\u52a0\u590d\u6742\uff1a\u865a\u62df\u673a\u548c\u5bb9\u5668\u6df7\u90e8\u3001\u6d41\u6216\u6279\u5904\u7406\u4efb\u52a1\u4e0e\u5e38\u9a7b\u8fdb\u7a0b\u6df7\u90e8\u3001\u591a\u4efb\u52a1\u4f18\u5148\u7ea7QOS\u7b49\u3002\\n\\n# \u865a\u62df\u5316\u4e0eIaaS\\n\\n\\n## \u8ba1\u7b97\u865a\u62df\u5316\\n\u8ba1\u7b97\u865a\u62df\u5316\u5c31\u662f\u5728\u865a\u62df\u7cfb\u7edf\u548c\u5e95\u5c42\u786c\u4ef6\u4e4b\u95f4\u62bd\u8c61\u51faCPU\u548c\u5185\u5b58\u7b49\uff0c\u4ee5\u4f9b\u865a\u62df\u673a\u4f7f\u7528\u3002\\n\\n## \u7f51\u7edc\u865a\u62df\u5316\\n\u7f51\u7edc\u865a\u62df\u5316\u662f\u5728\u7269\u7406\u7f51\u7edc\u62d3\u6251\u57fa\u7840\u4e4b\u4e0a\u5efa\u7acb\u7684\u865a\u62df\u7f51\u7edc\uff0c\u5b83\u4e0d\u4f9d\u8d56\u5e95\u5c42\u7269\u7406\u7f51\u7edc\uff0c\u80fd\u72d7\u5b9e\u73b0\u7f51\u7edc\u62d3\u6251\u7684\u52a8\u6001\u53d8\u5316\uff0c\u5e76\u4e14\u63d0\u4f9b\u591a\u79df\u6237\u9694\u79bb\u3002\\n\u5728\u7f51\u7edc\u865a\u62df\u5316\u73af\u5883\u4e2d\uff0c\u4e00\u5207\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u9996\u5148\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u865a\u62df\u5316\uff0c\u865a\u62df\u4ea4\u6362\u673a\uff0c\u865a\u62df\u8def\u7531\u5668\uff0c\u865a\u62df\u8d1f\u8f7d\u5747\u8861\u548c\u865a\u62df\u9632\u706b\u5899\u3002\\n- \u7f51\u5361\u865a\u62df\u5316\uff1a\u901a\u8fc7SR-IOV\u6280\u672f\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u7269\u7406\u7f51\u5361\u865a\u62df\u591a\u4e2a\u7f51\u5361\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7tap/veth\u5b9e\u73b0\u7f51\u5361\u865a\u62df\u5316\u3002\\n- \u94fe\u8def\u5c42\u865a\u62df\u5316\uff1a\u4e3b\u8981\u901a\u8fc7\u865a\u62df\u4ea4\u6362\u673a\uff0c\u5b9e\u73b0\u7f51\u7edc\u5305\u7684VLAN\u8bbe\u7f6e\u3001\u96a7\u9053\u5efa\u7acb\u7b49\u3002\\n- \u7f51\u7edc\u5c42\u865a\u62df\u5316\uff1a\u5305\u62ecVPN\u3001Overlay\u7f51\u7edc\u7b49\uff0c\u521b\u5efa\u4e00\u5957\u9694\u79bb\u7684\u4e09\u5c42\u7f51\u7edc\u3002\\n\\n\u968f\u7740\u4e91\u8ba1\u7b97\u548c\u5927\u6570\u636e\u7684\u5174\u8d77\uff0c\u4e1c\u897f\u6d41\u91cf\u8d8a\u6765\u8d8a\u591a\uff1a\\n- \u5357\u5317\u6d41\u6cea\uff1a\u4ece\u9632\u706b\u5899\u8fdb\u5165\u5230\u76ee\u6807\u670d\u52a1\u5668\u7ecf\u8fc7\u7684\u6d41\u91cf\u3002\\n- \u4e1c\u897f\u6d41\u91cf\uff1a\u670d\u52a1\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6d41\u91cf\uff1b\u6bd4\u5982\u5206\u5e03\u5f0f\u5b58\u50a8\u7cfb\u7edf\u5728\u670d\u52a1\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u590d\u5236\u4f1a\u4ea7\u751f\u8f83\u591a\u7684\u4e1c\u897f\u6d41\u91cf\u3002\\n\\nLinux\u6536\u53d1\u5305\u6d41\u7a0b\uff1a\\n![netfilter](static/img/2022-05-18/netfilter.jpeg)\\n\\n\u7f51\u7edc\u6a21\u5757`net_rx_action`\u4f1a\u8c03\u7528\u9a71\u52a8\u5c06\u7f51\u7edc\u5305\u8f6c\u5316\u4e3a\u7f51\u7edc\u6a21\u5757\u80fd\u591f\u8bc6\u522b\u7684SKB\u683c\u5f0f\uff0c\u7136\u540e\u7ecf\u8fc7`netfilter`\u540e\u53d1\u9001\u5230\u7528\u4e0a\u5c42\u534f\u8bae\u6808\u4e2d\u3002\\n\\n### VLAN\\n`VLAN`\u7684\u4e2d\u6587\u540d\u4e3a\u865a\u62df\u5c40\u57df\u7f51\uff0cVLAN\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u89e3\u51b3\u4e8c\u5c42\u94fe\u8def\u4e2d\u5e7f\u64ad\u57df\u7684\u95ee\u9898\uff0c\u4f20\u7edf\u7684\u4e8c\u5c42\u94fe\u8def\u5c42\u5e7f\u64ad\u8bbf\u95ee\u592a\u5e7f\uff0c\u9700\u8981\u7528\u4e09\u5c42\u8def\u7531\u6765\u505alan\u5207\u5206\u9694\u79bb\u5e7f\u64ad\u57df\uff0c\u4f46\u662f\u8def\u7531\u5668\u7684\u63a5\u53e3\u8f83\u5c11\uff0c\u56e0\u6b64\u5728\u4ea4\u6362\u673a\u4e0a\u914d\u7f6eVLAN\uff0c\u4f7f\u4e4b\u4e00\u4e2a\u4ea4\u6362\u673a\u53ef\u4ee5\u6309\u9700\u6c42\u914d\u7f6e\u591a\u4e2aLAN\uff0c\u6765\u5c4f\u853d\u5e7f\u64ad\u57df\u3002\\n- [VLAN\u57fa\u7840\u77e5\u8bc6](https://zhuanlan.zhihu.com/p/35616289)\\n- [VLAN\u8be6\u89e3](https://blog.csdn.net/weixin_40748006/article/details/80181493)\\n\\n\\n\\n\\n\\n\\n## \u5b58\u50a8\u865a\u62df\u5316\\n\u5b58\u50a8\u865a\u62df\u5316\u901a\u8fc7\u8f6f\u4ef6\u7684\u65b9\u5f0f\u91cd\u5851\u5b58\u50a8\u7cfb\u7edf\uff0c\u4e0d\u4f9d\u8d56\u5177\u4f53\u7684\u5b58\u50a8\u786c\u4ef6\u3002\u6bd4\u5982\u901a\u5e38\u4e91\u5b58\u50a8\u6240\u6307\u7684\u516c\u6709\u4e91\u63d0\u4f9b\u7684\u6587\u4ef6\u5b58\u50a8\u3001\u5757\u5b58\u50a8\u3001\u5bf9\u8c61\u5b58\u50a8\u90fd\u662f\u901a\u8fc7\u5b58\u50a8\u865a\u62df\u5316\u5b9e\u73b0\u7684\u3002\\n\\n\u5b58\u50a8\u5206\u7c7b\uff1a\\n- \u5757\u5b58\u50a8\uff1a\u6587\u4ef6\u4f1a\u88ab\u5206\u5757\u5b58\u50a8\u5230\u78c1\u76d8\uff0c\u4ee5\u78c1\u76d8\u65b9\u5f0f\u63d0\u4f9b\u3002\u5757\u5b58\u50a8\u90fd\u9075\u5faaSCSI\u534f\u8bae\uff0c\\n- \u6587\u4ef6\u5b58\u50a8\uff1a\u4ee5\u6587\u4ef6\u76ee\u5f55\u7684\u65b9\u5f0f\u63d0\u4f9b\u3002\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edfNFS\u3002\\n- \u5bf9\u8c61\u5b58\u50a8\uff1a\u4ee5\u4e8c\u8fdb\u5236\u5bf9\u8c61\u7684\u5f62\u5f0f\u63d0\u4f9b\u670d\u52a1\u3002\\n\\n### \u5206\u5e03\u5f0f\u5b58\u50a8\\n![dis](static/img/2022-05-18/dis-storage.png)\\n\u4e0a\u56fe\u5c55\u793a\u4e86\u5206\u5e03\u5f0f\u5b58\u50a8\u7684\u603b\u4f53\u67b6\u6784\uff0c\u603b\u4f53\u6709\u6709\u5143\u6570\u636e\u7ba1\u7406\u8282\u70b9\u548c\u6570\u636e\u7ba1\u7406\u8282\u70b9\uff0c\u8981\u5b9e\u73b0\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u4fdd\u8bc1\u5b58\u50a8\u5143\u6570\u636e\u6a21\u5757\u7684\u9ad8\u53ef\u7528\u3002\\n\\n\u5206\u5e03\u5f0f\u7cfb\u7edf\u90fd\u4e0d\u80fd\u8fdd\u80ccCAP\u5b9a\u7406\uff1a\\n- C\uff08Consistenncy\uff09\uff1a\u4e00\u81f4\u6027\uff0c\u6307\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u591a\u526f\u672c\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\\n- A\uff08Avaliability\uff09\uff1a\u53ef\u7528\u6027\uff0c\u8fd9\u91cc\u6307\u80fd\u591f\u968f\u65f6\u8bfb\u5199\u6570\u636e\u3002\\n- P\uff08Partition tolerance\uff09\uff1a\u5373\u5206\u533a\u5bb9\u9519\u6027\uff0c\u8fd9\u91cc\u6307\u80fd\u591f\u5bb9\u5fcd\u7f51\u7edc\u4e2d\u65ad\u51fa\u73b0\u5206\u533a\u7684\u60c5\u51b5\u3002\\n\\n\u5728\u4e00\u4e9b\u8981\u6c42\u4e0d\u9ad8\u7684\u573a\u666f\u4e0b\uff0c\u4fdd\u8bc1\u57fa\u672c\u53ef\u7528\u548c\u5f31\u4e00\u81f4\u5373\u53ef\uff0c\u5bf9\u5e94\u7684\u662fBASE\u7406\u8bbaL\uff1a\\n- B\uff08Basically Avaliable\uff09\uff1a\u57fa\u672c\u53ef\u7528\\n- S\uff08Soft State\uff09\uff1a\u8f6f\u72b6\u6001\\n- E\uff08Eventual Consistency\uff09\u6700\u7ec8\u4e00\u81f4\u3002\\n\\n\u6570\u636e\u5206\u5e03\u5bfb\u5740\u95ee\u9898\uff0c\u5982\u4f55\u67e5\u627e\u5230\u6587\u4ef6\u5728\u90a3\u4e2a\u6570\u636e\u8282\u70b9\u4e2d\uff0c\u5171\u6709\u4e24\u79cd\u79cd\u65b9\u6cd5\uff1a\uff1b\\n- \u5728\u5143\u6570\u636e\u4e2d\u6807\u793a\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982HDFS\u4e2d\uff0cNameNode\u4fdd\u5b58\u4e86\u6240\u6709\u5757\u7684\u5143\u6570\u636e\uff1b\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u907f\u514d\u5728\u6dfb\u52a0\u8282\u70b9\u65f6\u6570\u636e\u8fc1\u79fb\uff0c\u7f3a\u70b9\u662f\uff1a\u9700\u8981\u989d\u5916\u7ef4\u62a4\u4e00\u5957\u5143\u6570\u636e\uff0c\u5e76\u4e14\u5143\u6570\u636e\u670d\u52a1\u7684\u53ef\u7528\u6027\u662f\u4e2a\u95ee\u9898\u3002\u53ef\u7528\u901a\u8fc7\u91c7\u7528Raft\u7b97\u6cd5\u6765\u89e3\u51b3\u5143\u6570\u636e\u670d\u52a1\u7684\u53ef\u7528\u6027\u95ee\u9898\u3002\\n- \u901a\u8fc7DHT\u7b97\u6cd5\u8ba1\u7b97\u5f97\u5230\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982\u91c7\u7528\u4e00\u81f4\u6027Hash\u73af\u7b97\u6cd5\uff0c\u6216\u8005rados\u7b97\u6cd5\uff1b\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u4e0d\u4f1a\u5b58\u50a8\u5143\u6570\u636e\u670d\u52a1\u74f6\u9888\u548c\u53ef\u7528\u6027\u95ee\u9898\uff0c\u7f3a\u70b9\u662f\uff1a\u5728\u589e\u51cf\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6574\u4e2a\u7b97\u6cd5\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\uff0c\u5bfc\u81f4\u5927\u91cf\u6570\u636e\u91cd\u65b0\u5206\u5e03\uff0c\u4e0d\u4ec5\u5f71\u54cd\u96c6\u7fa4\u6027\u80fd\uff0c\u8fd8\u53ef\u80fd\u9020\u6210\u96c6\u7fa4\u6682\u65f6\u4e0d\u53ef\u7528\u3002\\n\\n\u5f00\u6e90Ceph\u89e3\u51b3\u6570\u636e\u5206\u5e03\u5bfb\u5740\u4f7f\u7528\u7684\u662fCRUSH\u65b9\u6848\u3002"},{"id":"Linux-Network-Namespace","metadata":{"permalink":"/blog/Linux-Network-Namespace","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-05-12-Linux-Network-Namespace.md","source":"@site/blog/2022-05-12-Linux-Network-Namespace.md","title":"Linux\u7f51\u7edc\u865a\u62df\u5316:\u63a2\u7d22NetWork Namespace","description":"NetWork Namespace \u662f Linux 2.6 \u7248\u672c\u5f15\u5165\u7684\uff0c\u4f5c\u7528\u662f\u9694\u79bb\u51fa\u4e00\u4e2a\u72ec\u7acb\u7684\u7f51\u7edc\u6808\uff08\u5305\u62ec\u8bbe\u5907\u3001IP\u3001\u8def\u7531\u8868\u3001\u7aef\u53e3\u3001\u9632\u706b\u5899\u7b49\uff09\uff0c\u5b83\u80fd\u521b\u5efa\u591a\u4e2a\u9694\u79bb\u7684\u7f51\u7edc\u7a7a\u95f4\u3002","date":"2022-05-12T00:00:00.000Z","tags":[{"inline":false,"label":"Kubernetes","permalink":"/blog/tags/kubernetes","description":"kubernetes"},{"inline":false,"label":"Kubernetes Network","permalink":"/blog/tags/kubernetes-network","description":"Kubernetes Network"}],"readingTime":7.795,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"Linux-Network-Namespace","title":"Linux\u7f51\u7edc\u865a\u62df\u5316:\u63a2\u7d22NetWork Namespace","authors":["rongfu"],"tags":["Kubernetes","Kubernetes Network"]},"unlisted":false,"prevItem":{"title":"\u8bfb\u300a\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f\u300b","permalink":"/blog/\u8bfb\u4e91\u8ba1\u7b97\u90a3\u4e9b\u4e8b\u513f"},"nextItem":{"title":"Kubernetes\u7f51\u7edc\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","permalink":"/blog/k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb"}},"content":"`NetWork Namespace` \u662f `Linux 2.6` \u7248\u672c\u5f15\u5165\u7684\uff0c\u4f5c\u7528\u662f\u9694\u79bb\u51fa\u4e00\u4e2a\u72ec\u7acb\u7684\u7f51\u7edc\u6808\uff08\u5305\u62ec\u8bbe\u5907\u3001IP\u3001\u8def\u7531\u8868\u3001\u7aef\u53e3\u3001\u9632\u706b\u5899\u7b49\uff09\uff0c\u5b83\u80fd\u521b\u5efa\u591a\u4e2a\u9694\u79bb\u7684\u7f51\u7edc\u7a7a\u95f4\u3002\\n\x3c!-- truncate --\x3e\\n\\n## NetWork Namespace\u7b80\u4ecb\\n`NetWork Namespace` \u662f `Linux 2.6` \u7248\u672c\u5f15\u5165\u7684\uff0c\u4f5c\u7528\u662f\u9694\u79bb\u51fa\u4e00\u4e2a\u72ec\u7acb\u7684\u7f51\u7edc\u6808\uff08\u5305\u62ec\u8bbe\u5907\u3001IP\u3001\u8def\u7531\u8868\u3001\u7aef\u53e3\u3001\u9632\u706b\u5899\u7b49\uff09\uff0c\u5b83\u80fd\u521b\u5efa\u591a\u4e2a\u9694\u79bb\u7684\u7f51\u7edc\u7a7a\u95f4\u3002\\n\\n\u5728`Linux`\u7cfb\u7edf\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528`ip`\u547d\u4ee4\u6765\u521b\u5efa\u548c\u7ba1\u7406`Network namespace`\u3002\\n\\n### ip netns \u547d\u4ee4\u624b\u518c\\n```shell\\nSYNOPSIS\\n       ip netns [ list ]\uff1a\u5217\u51fa\u6240\u6709\u7684network namespace\\n\\n       ip netns add NETNSNAME\uff1a\u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684ns\\n\\n       ip [-all] netns del [ NETNSNAME ]\uff1a\u5220\u9664\u6240\u6709\u6216\u8005\u6307\u5b9a\u7684ns\\n\\n       ip netns set NETNSNAME NETNSID\uff1a\u4fee\u6539netnsname\u6216\u8005netnsid\\n\\n       ip netns identify [ PID ]\uff1a\u628a\u67d0\u4e2a\u8fdb\u7a0b\u52a0\u5165\u5230network namespace\u4e2d\\n\\n       ip netns pids NETNSNAME\uff1a\u5217\u51fa\u52a0\u5165\u5f53\u524dns\u7684pid\\n\\n       ip [-all] netns exec [ NETNSNAME ] command...\uff1a\u5728netns\u4e2d\u6267\u884c\u547d\u4ee4\uff0c\u5982ping\u3001ifconfig\\n\\n       ip netns monitor\uff1a\u76d1\u63a7\\n```\\n\\n\u6309\u7167\u64cd\u4f5c\u624b\u518c\u4e2d\u7684\u547d\u4ee4\u5c31\u53ef\u4ee5\u521b\u5efa `ns`.\\n\\n### \u7ba1\u7406Network Namespace\\n- \u521b\u5efaNS\\n```shell\\n[root@k8s-master-168 ~]# ip netns add nets1\\n[root@k8s-master-168 ~]# ip netns list\\nnets1\\n```\\n\\n- \u67e5\u770bNS\u4e2d\u7684\u7f51\u7edc\u4fe1\u606f\\n```shell\\n[root@k8s-master-168 ~]# ip netns exec nets1 ip link list\\n1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000\\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\\n\\n[root@k8s-master-168 ~]# ip netns exec nets1 route\\nKernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\n\\n[root@k8s-master-168 ~]# ip netns exec nets1 iptables -L\\nChain INPUT (policy ACCEPT)\\ntarget     prot opt source               destination         \\n\\nChain FORWARD (policy ACCEPT)\\ntarget     prot opt source               destination         \\n\\nChain OUTPUT (policy ACCEPT)\\ntarget     prot opt source               destination\\n```\\n\u4ece\u7ed3\u679c\u6765\u770b\uff0c\u521b\u5efa\u7684`nets1`\u7f51\u7edc\u6808\u4e2d\u53ea\u6709`lo`\u8fd9\u4e2a\u672a\u542f\u7528\u7684\u56de\u73af\u8bbe\u5907\uff0c\u5e76\u4e14\u6ca1\u6709\u914d\u7f6e\u8def\u7531\u548c\u9632\u706b\u5899\u89c4\u5219\u7b49\u3002\\n\\n- \u521b\u5efa\u4e00\u4e2a\u7f51\u7edc\u8bbe\u5907\u5e76\u914d\u7f6eIP\\n```shell\\n# \u521b\u5efaveth pair\u865a\u62df\u7f51\u7edc\u8bbe\u5907\u7f51\u5361\\n# \u521b\u5efa\u4e00\u4e2aveth0\u548cveth1\u7684veth \u5bf9\uff0c\u628aveth1\u63d2\u5165\u5230nets1\u7684\u7f51\u7edc\u6808\u4e2d\uff0cveth0\u9ed8\u8ba4\u5728\u8ddfnetwork namespace\u4e2d\u3002\\n[root@k8s-master-168 ~]# ip link add  veth0 type veth peer name veth1\\n[root@k8s-master-168 ~]# ip link set veth1 netns nets1\\n# \u6b64\u65f6\u67e5\u770b\u5c31\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a\u7f51\u7edc\u8bbe\u5907veth1\uff0c\u4f46\u662f\u8bbe\u5907\u6ca1\u6709\u542f\u52a8\uff0c\u5e76\u4e14\u6ca1\u6709\u914d\u7f6eIP\\n[root@k8s-master-168 ~]# ip netns exec nets1 ip link list\\n1: lo: <LOOPBACK> mtu 65536 qdisc noop state DOWN mode DEFAULT group default qlen 1000\\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\\n9: veth1@if10: <BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\\n    link/ether aa:54:ee:12:3a:34 brd ff:ff:ff:ff:ff:ff link-netnsid 0\\n# \u542f\u7528\u7f51\u5361\uff0c\u5e76\u8bbe\u7f6eip\\n[root@k8s-master-168 ~]# ip netns exec nets1 ifconfig veth1 10.1.1.1/24 up\\n[root@k8s-master-168 ~]# ip netns exec nets1 ifconfig\\nveth1: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\\n        inet 10.1.1.1  netmask 255.255.255.0  broadcast 10.1.1.255\\n        ether aa:54:ee:12:3a:34  txqueuelen 1000  (Ethernet)\\n        RX packets 0  bytes 0 (0.0 B)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 0  bytes 0 (0.0 B)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n```\\n\\n- \u5220\u9664veth\u5bf9\u548cns\\n```shell\\n# veth\u5bf9\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u5220\u9664veth0\uff0cveth1\u4e5f\u5c31\u4e0d\u5b58\u5728\u3002\\n[root@k8s-master-168 ~]# ip link del veth0\\n[root@k8s-master-168 ~]# ip netns del nets1\\n```\\n\\n## \u5355\u4e3b\u673a\u4e24\u4e2a NetWork Namespace \u4e4b\u95f4\u901a\u4fe1\\n\\n![veth1](static/img/2022-05-12/veth1.png)\\n\\n\u4e3b\u673a\u4e0a\u521b\u5efa\u4e24\u4e2a`ns`\uff0c\u5b83\u4eec\u4e4b\u95f4\u5982\u4f55\u901a\u4fe1\u5462\uff0c\u53ef\u4ee5\u4f7f\u7528`veth pair`\u8fdb\u884c\u8fde\u63a5\u3002\\n\\n- \u521b\u5efa\u4e24\u4e2a`ns`\\n```shell\\n#\u521b\u5efa\u4e24\u4e2ans\\n[root@k8s-master-168 ~]# ip netns add nets1\\n[root@k8s-master-168 ~]# ip netns add nets2\\n\\n# \u521b\u5efaveth\uff0c\u5e76\u5206\u522b\u63d2\u5165ns\u4e2d\\n[root@k8s-master-168 ~]# ip link add veth0 type veth peer name veth1\\n[root@k8s-master-168 ~]# ip link set veth0 netns nets1\\n[root@k8s-master-168 ~]# ip link set veth1 netns nets2\\n```\\n\\n- \u914d\u7f6e\u4e24\u4e2aveth\u7f51\u7edc\u8bbe\u5907\\n```shell\\n[root@k8s-master-168 ~]# ip netns exec nets2 ifconfig veth1 10.1.1.2/24 up\\n[root@k8s-master-168 ~]# ip netns exec nets1 ifconfig veth0 10.1.1.1/24 up\\n\\n# \u68c0\u67e5\u662f\u5426\u914d\u7f6e\u6210\u529f\\n[root@k8s-master-168 ~]# ip netns exec nets1 ifconfig\\nveth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\\n        inet 10.1.1.1  netmask 255.255.255.0  broadcast 10.1.1.255\\n        inet6 fe80::b4c2:70ff:fe8d:3b0e  prefixlen 64  scopeid 0x20<link>\\n        ether b6:c2:70:8d:3b:0e  txqueuelen 1000  (Ethernet)\\n        RX packets 8  bytes 656 (656.0 B)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 8  bytes 656 (656.0 B)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n\\n\\n[root@k8s-master-168 ~]# ip netns exec nets2 ifconfig\\nveth1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\\n        inet 10.1.1.2  netmask 255.255.255.0  broadcast 10.1.1.255\\n        inet6 fe80::f046:44ff:fe62:1ecc  prefixlen 64  scopeid 0x20<link>\\n        ether f2:46:44:62:1e:cc  txqueuelen 1000  (Ethernet)\\n        RX packets 9  bytes 726 (726.0 B)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 9  bytes 726 (726.0 B)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n```\\n\\n- \u6d4b\u8bd5\u7f51\u7edc\\n```shell\\n# \u4ecenets1 ping nets2\u7f51\u7edc\u662f\u901a\u7684\\n[root@k8s-master-168 ~]# ip netns exec nets1 ping 10.1.1.2\\nPING 10.1.1.2 (10.1.1.2) 56(84) bytes of data.\\n64 bytes from 10.1.1.2: icmp_seq=1 ttl=64 time=0.106 ms\\n64 bytes from 10.1.1.2: icmp_seq=2 ttl=64 time=0.079 ms\\n64 bytes from 10.1.1.2: icmp_seq=3 ttl=64 time=0.083 ms\\n\\n# \u4ecenets2 ping nets1 \u7f51\u7edc\u662f\u901a\u7684\\n[root@k8s-master-168 ~]# ip netns exec nets2 ping 10.1.1.1\\nPING 10.1.1.1 (10.1.1.1) 56(84) bytes of data.\\n64 bytes from 10.1.1.1: icmp_seq=1 ttl=64 time=0.108 ms\\n64 bytes from 10.1.1.1: icmp_seq=2 ttl=64 time=0.085 ms\\n64 bytes from 10.1.1.1: icmp_seq=3 ttl=64 time=0.078 ms\\n```\\n\\n## \u5355\u4e3b\u673a\u591a\u4e2a NetWork Namespace \u4e4b\u95f4\u901a\u4fe1\\n\\n![bridge](static/img/2022-05-12/bridge.png)\\n\\n\u4e0a\u8ff0\u662f\u4e24\u4e2a`ns`\u53ef\u4ee5\u91c7\u7528\u76f4\u63a5`veth`\u7684\u6a21\u5f0f\u8fdb\u884c\u901a\u4fe1\uff0c\u5c31\u597d\u6bd4\u91c7\u7528\u4e00\u6839\u7f51\u7ebf\uff0c\u8fde\u63a5\u4e24\u53f0\u7535\u8111\uff0c\u5982\u679c\u51fa\u73b03\u53f0\u7535\u8111\u9700\u8981\u901a\u4fe1\uff0c\u6b64\u65f6\u5c31\u4e0d\u80fd\u518d\u901a\u8fc7\u62c9\u53d6\u7f51\u7ebf\u7684\u65b0\u5f0f\u4e86\uff0c\u5728\u7269\u7406\u7f51\u7edc\u4e2d\u662f\u91c7\u7528\u4ea4\u6362\u673a\u6765\u5904\u7406\u8fd9\u79cd\u95ee\u9898\u3002\\n\\n\u5728\u865a\u62df\u7f51\u7edc\u4e2d\u901a\u5e38\u7528`Linux bridge`, `Linux Bridge`\u53ef\u4ee5\u8fde\u63a5\u4efb\u610f\u771f\u5b9e\u7684\u7269\u7406\u8bbe\u5907\uff08\u5982\uff1aeth0\u7f51\u5361\uff09\u6216\u4efb\u610f\u865a\u62df\u8bbe\u5907\uff08\u5982\uff1aveth pair\u8bbe\u5907\uff0ctap\u8bbe\u5907\uff09\u3002\\n\\n- \u521b\u5efa\u4e00\u4e2abridge\\n```shell\\n[root@k8s-master-168 ~]# ip link add name br0 type bridge\\n[root@k8s-master-168 ~]# ip link set br0 up\\n```\\n\\n- \u521b\u5efa\u4e09\u4e2ans\\n```shell\\n# \u521b\u5efa3\u4e2ans\\n[root@k8s-master-168 ~]# ip netns add nets1\\n[root@k8s-master-168 ~]# ip netns add nets2\\n[root@k8s-master-168 ~]# ip netns add nets3\\n# \u521b\u5efa3\u5bf9veth pair\\n[root@k8s-master-168 ~]# ip link add type veth\\n[root@k8s-master-168 ~]# ip link add type veth\\n[root@k8s-master-168 ~]# ip link add type veth\\n\\n```\\n\\n- \u628abr0\u548c3\u4e2ans\u7248\u5b9a\\n```shell\\n# \u628aveth1\u3001veth3\u3001veth5\u5206\u522b\u63d2\u5165nets1\u3001nets2\u3001nets3\u4e2d\\n[root@k8s-master-168 ~]# ip link set veth1 netns nets1\\n[root@k8s-master-168 ~]# ip link set veth3 netns nets2\\n[root@k8s-master-168 ~]# ip link set veth5 netns nets3\\n# \u628aveth0\u3001veth2\u3001veth4\u63d2\u5165br0\u4e2d\\n[root@k8s-master-168 ~]# ip link set dev veth0 master br0 up\\n[root@k8s-master-168 ~]# ip link set dev veth2 master br0 up\\n[root@k8s-master-168 ~]# ip link set dev veth4 master br0 up\\n# \u8bbe\u7f6e\u4e09\u4e2aip\u7ed9veth1\u3001veth3\u3001veth5\u8bbe\u5907\u5e76\u542f\u7528\\n[root@k8s-master-168 ~]# ip netns exec nets1 ifconfig veth1 10.1.1.1/24 up\\n[root@k8s-master-168 ~]# ip netns exec nets2 ifconfig veth3 10.1.1.2/24 up\\n[root@k8s-master-168 ~]# ip netns exec nets3 ifconfig veth5 10.1.1.3/24 up\\n```\\n\\n\u8fdb\u8fc7\u4e0a\u8ff0\u914d\u7f6e\u4e4b\u540e\u5462\u5c31\u628a\u8fd9\u4e09\u4e2ans\u901a\u8fc7br0\u8fd9\u4e2a\u6865\u7ed1\u5b9a\u4e0a\u4e86\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u4e24\u4e24\u4efb\u610f\u8bbf\u95ee\u4e86\u3002\\n\\n```shell\\n[root@k8s-master-168 ~]# ip netns exec nets1 ping 10.1.1.2\\nPING 10.1.1.2 (10.1.1.2) 56(84) bytes of data.\\n64 bytes from 10.1.1.2: icmp_seq=1 ttl=64 time=0.138 ms\\n64 bytes from 10.1.1.2: icmp_seq=2 ttl=64 time=0.172 ms\\n64 bytes from 10.1.1.2: icmp_seq=3 ttl=64 time=0.138 ms\\n\\n[root@k8s-master-168 ~]# ip netns exec nets1 ping 10.1.1.3\\nPING 10.1.1.3 (10.1.1.3) 56(84) bytes of data.\\n64 bytes from 10.1.1.3: icmp_seq=1 ttl=64 time=0.149 ms\\n64 bytes from 10.1.1.3: icmp_seq=2 ttl=64 time=0.114 ms\\n64 bytes from 10.1.1.3: icmp_seq=3 ttl=64 time=0.130 ms\\n\\n```\\n\\n## \u8de8\u4e3b\u673a\u591a\u4e2a NetWork Namespace \u4e4b\u95f4\u901a\u4fe1\\n\\n\u8de8\u4e3b\u673a\u7f51\u7edc\u901a\u4fe1\u6d89\u53ca\u5230\u9700\u8981\u901a\u8fc7`vxlan`\u3001`macvlan`\u3001`ipvlan`\u7b49\u6280\u672f\u8fdb\u884c\u8de8\u4e3b\u673a\u7ec4\u7f51\uff0c"},{"id":"k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","metadata":{"permalink":"/blog/k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-05-11-k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb.md","source":"@site/blog/2022-05-11-k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb.md","title":"Kubernetes\u7f51\u7edc\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","description":"\u5bb9\u5668\u7f51\u7edc\u63a5\u53e3\uff08Container Network Interface\uff09\uff0c\u7b80\u79f0 CNI\uff0c\u662f CNCF \u65d7\u4e0b\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u7531\u4e00\u7ec4\u7528\u4e8e\u914d\u7f6e Linux \u5bb9\u5668\u7684\u7f51\u7edc\u63a5\u53e3\u7684\u89c4\u8303\u548c\u5e93\u7ec4\u6210\uff0c\u540c\u65f6\u8fd8\u5305\u542b\u4e86\u4e00\u4e9b\u63d2\u4ef6\u3002CNI \u4ec5\u5173\u5fc3\u5bb9\u5668\u521b\u5efa\u65f6\u7684\u7f51\u7edc\u5206\u914d\uff0c\u548c\u5f53\u5bb9\u5668\u88ab\u5220\u9664\u65f6\u91ca\u653e\u7f51\u7edc\u8d44\u6e90\u3002","date":"2022-05-11T00:00:00.000Z","tags":[{"inline":false,"label":"Kubernetes","permalink":"/blog/tags/kubernetes","description":"kubernetes"},{"inline":false,"label":"Kubernetes Network","permalink":"/blog/tags/kubernetes-network","description":"Kubernetes Network"}],"readingTime":5.185,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","title":"Kubernetes\u7f51\u7edc\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","authors":["rongfu"],"tags":["Kubernetes","Kubernetes Network"]},"unlisted":false,"prevItem":{"title":"Linux\u7f51\u7edc\u865a\u62df\u5316:\u63a2\u7d22NetWork Namespace","permalink":"/blog/Linux-Network-Namespace"},"nextItem":{"title":"Serverless \u57fa\u7840\u77e5\u8bc6","permalink":"/blog/serverless\u57fa\u7840\u77e5\u8bc6"}},"content":"\u5bb9\u5668\u7f51\u7edc\u63a5\u53e3\uff08Container Network Interface\uff09\uff0c\u7b80\u79f0 CNI\uff0c\u662f CNCF \u65d7\u4e0b\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u7531\u4e00\u7ec4\u7528\u4e8e\u914d\u7f6e Linux \u5bb9\u5668\u7684\u7f51\u7edc\u63a5\u53e3\u7684\u89c4\u8303\u548c\u5e93\u7ec4\u6210\uff0c\u540c\u65f6\u8fd8\u5305\u542b\u4e86\u4e00\u4e9b\u63d2\u4ef6\u3002CNI \u4ec5\u5173\u5fc3\u5bb9\u5668\u521b\u5efa\u65f6\u7684\u7f51\u7edc\u5206\u914d\uff0c\u548c\u5f53\u5bb9\u5668\u88ab\u5220\u9664\u65f6\u91ca\u653e\u7f51\u7edc\u8d44\u6e90\u3002\\n\x3c!-- truncate --\x3e\\n\\n![image](static/img/2022-05-11/cni-horizontal-color.png)\\n\\n## CNI \u7b80\u4ecb\\n\u5bb9\u5668\u7f51\u7edc\u63a5\u53e3\uff08Container Network Interface\uff09\uff0c\u7b80\u79f0 CNI\uff0c\u662f CNCF \u65d7\u4e0b\u7684\u4e00\u4e2a\u9879\u76ee\uff0c\u7531\u4e00\u7ec4\u7528\u4e8e\u914d\u7f6e Linux \u5bb9\u5668\u7684\u7f51\u7edc\u63a5\u53e3\u7684\u89c4\u8303\u548c\u5e93\u7ec4\u6210\uff0c\u540c\u65f6\u8fd8\u5305\u542b\u4e86\u4e00\u4e9b\u63d2\u4ef6\u3002CNI \u4ec5\u5173\u5fc3\u5bb9\u5668\u521b\u5efa\u65f6\u7684\u7f51\u7edc\u5206\u914d\uff0c\u548c\u5f53\u5bb9\u5668\u88ab\u5220\u9664\u65f6\u91ca\u653e\u7f51\u7edc\u8d44\u6e90\u3002\\n\\n\u4f7f\u7528CNI\u7684\u5bb9\u5668\u8fd0\u884c\u65f6\u6709\uff1a\\n- Kubernetes\\n- ContainerD\\n- Mesos\\n- Cloud Foundry\\n- OpenShift\\n\\n\u5b9e\u73b0\u4e86CNI\u89c4\u8303\u7684\u7f51\u7edc\u63d2\u4ef6\u6709\uff1a\\n- Flannel\\n- Calico\\n- Weave\\n- Cilium\\n- [\u7b49\u7b49](https://www.cni.dev/docs/#3rd-party-plugins)\\n\\n\\n## CNI\u63d2\u4ef6\\n\\nCNI \u63d2\u4ef6\u5fc5\u987b\u5b9e\u73b0\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u88ab\u5bb9\u5668\u7ba1\u7406\u7cfb\u7edf\uff08\u4f8b\u5982 rkt \u6216 Kubernetes\uff09\u8c03\u7528\u3002\\n\\nCNI \u63d2\u4ef6\u8d1f\u8d23\u5c06\u7f51\u7edc\u63a5\u53e3\u63d2\u5165\u5bb9\u5668\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\uff08\u4f8b\u5982\uff0cveth \u5bf9\u7684\u4e00\u7aef\uff09\uff0c\u5e76\u5728\u4e3b\u673a\u4e0a\u8fdb\u884c\u4efb\u4f55\u5fc5\u8981\u7684\u6539\u53d8\uff08\u4f8b\u5982\u5c06 veth \u7684\u53e6\u4e00\u7aef\u8fde\u63a5\u5230\u7f51\u6865\uff09\u3002\u7136\u540e\u5c06 IP \u5206\u914d\u7ed9\u63a5\u53e3\uff0c\u5e76\u901a\u8fc7\u8c03\u7528\u9002\u5f53\u7684 IPAM \u63d2\u4ef6\u6765\u8bbe\u7f6e\u4e0e \u201cIP \u5730\u5740\u7ba1\u7406\u201d \u90e8\u5206\u4e00\u81f4\u7684\u8def\u7531\u3002\\n\\n\\n## CNI\u89c4\u8303\\n\\n##### 1. CNI\u5b9a\u4e49\u89c4\u8303\u7248\u672c\uff0c\u7528\u6765\u63a7\u5236\u7248\u672c\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u4f46\u662f\u7248\u672c\u4e0d\u662f\u4e00\u5c18\u4e0d\u53d8\u7684\u3002\\n\\n#### 2. \u6982\u5ff5\uff1a\\n- \u5bb9\u5668\u662f\u4e00\u4e2a\u7f51\u7edc\u9694\u79bb\u57df\u3002\\n- \u7f51\u7edc\u662f\u6307\u4e00\u7ec4\u53ef\u4ee5\u552f\u4e00\u5bfb\u5740\u7684\u7aef\u70b9\uff0c\u5b83\u4eec\u53ef\u4ee5\u76f8\u4e92\u901a\u4fe1\u3002\\n- Container Runtime\u662f\u8d1f\u8d23\u6267\u884cCNI\u63d2\u4ef6\u7684\u5730\u65b9\u3002\\n- Plugin\u662f\u6307\u7f51\u7edc\u914d\u7f6e\u7684\u7a0b\u5e8f\u3002\\n\\n#### 3. \u89c4\u8303\\nCNI\u89c4\u8303\u5b9a\u4e49\u4e865\u70b9\uff1a\\n- 1. \u7cfb\u7edf\u7ba1\u7406\u5458\u53bb\u5b9a\u4e49\u7f51\u7edc\u914d\u7f6e\u7684\u683c\u5f0f\u3002\\n- 2. Container Runtime\u5411\u7f51\u7edc\u63d2\u4ef6\u53d1\u8d77\u8bf7\u6c42\u7684\u534f\u8bae\u3002\\n- 3. \u57fa\u4e8e\u7cfb\u7edf\u7ba1\u7406\u5458\u63d0\u4f9b\u7684\u914d\u7f6e\u6267\u884c\u63d2\u4ef6\uff0c\u7531\u7b2c2\u6b65\u53d1\u8d77\u8c03\u7528\u3002\\n- 4. CNI\u63d2\u4ef6\u4f1a\u5c06\u529f\u80fd\u59d4\u6258\u7ed9\u5176\u4ed6\u63d2\u4ef6\u3002\\n- 5. \u63d2\u4ef6\u8fd4\u56deresult\u5230container runtime\u7684\u6570\u636e\u7c7b\u578b\u3002\\n\\n![CNI Arch](static/img/2022-05-11/cni.png)\\n\\n##### 3.1 \u7f51\u7edc\u914d\u7f6e\\n\\n\u7f51\u7edc\u914d\u7f6e\u662f\u5177\u6709\u5982\u4e0b\u5b57\u6bb5\u7684json\u683c\u5f0f\uff1a\\n- `cniVersion`: \u6307\u5b9aCNI\u89c4\u8303\u7684\u7248\u672c\u3002\\n- `Name`: \u7f51\u7edc\u540d\u5b57\uff0c\u8fd9\u5728\u4e3b\u673a\u7684\u7f51\u7edc\u914d\u7f6e\u4e2d\u5e94\u8be5\u552f\u4e00\u3002\\n- `disableCheck`: \u662f\u5426\u7981\u7528\u68c0\u67e5\u7f51\u7edc\uff0c\u5982\u679c\u4e3atrue,\u5219 `container runtime` \u4e0d\u4f1a\u8c03\u7528 Check \u65b9\u6cd5\u8fdb\u884c\u7f51\u7edc\u68c0\u67e5\u3002\\n- `plugin`: cni\u63d2\u4ef6\u53ca\u5176\u914d\u7f6e\u5217\u8868\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\u63d2\u4ef6\u3002\\n\\n##### 3.2 \u6267\u884c\u534f\u8bae\\nCNI\u534f\u8bae\u57fa\u4e8e\u5bb9\u5668\u8fd0\u884c\u65f6\u8c03\u7528\u63d2\u4ef6\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u3002CNI\u7a0b\u5e8f\u903b\u8f91\u672c\u8eab\u88ab\u5c01\u88c5\u5728\u4e86`libcni`\u4e2d\uff0c\u4f1a\u88ab\u5176\u4ed6\u5bb9\u5668\u8fd0\u884c\u65f6\u8c03\u7528\u3002\u5728`libcni`\u4e2d\u603b\u5171\u66b4\u9732\u4e86 4 \u4e2a\u6838\u5fc3\u65b9\u6cd5\uff1a\\n\\n```go\\ntype CNI interface {\\n    // \u6dfb\u52a0\u7f51\u7edc\\n    AddNetwork(ctx context.Context, net *NetworkConfig, rt *RuntimeConf) (types.Result, error)\\n    // \u68c0\u67e5\u7f51\u7edc\\n\\tCheckNetwork(ctx context.Context, net *NetworkConfig, rt *RuntimeConf) error\\n    // \u5220\u9664\u7f51\u7edc\\n\\tDelNetwork(ctx context.Context, net *NetworkConfig, rt *RuntimeConf) error\\n    // \u83b7\u53d6\u7f51\u7edc\u7f13\u5b58\u7ed3\u679c\\n\\tGetNetworkCachedResult(net *NetworkConfig, rt *RuntimeConf) (types.Result, error)\\n    // \u83b7\u53d6\u7f51\u7edc\u7f13\u5b58\u914d\u7f6e\\n\\tGetNetworkCachedConfig(net *NetworkConfig, rt *RuntimeConf) ([]byte, *RuntimeConf, error)\\n    // \u6821\u9a8c\u7f51\u7edc\\n\\tValidateNetwork(ctx context.Context, net *NetworkConfig) ([]string, error)\\n}\\n```\\n\\n`CNI`\u63d2\u4ef6\u8d1f\u8d23\u4ee5\u67d0\u79cd\u65b9\u5f0f\u914d\u7f6e\u5bb9\u5668\u7684\u7f51\u7edc\u63a5\u53e3\uff0c\u901a\u8fc7\u6807\u51c6\u8f93\u5165\u63d0\u4f9b\u914d\u7f6e\uff0c\u6807\u51c6\u8f93\u51fa\u4e0a\u8fd4\u56de\u7ed3\u679c\uff0c\u6807\u51c6\u9519\u8bef\u4e0a\u8fd4\u56deerror\u3002\\n\\n##### 3.3 CNI\u64cd\u4f5c\\nCNI\u63d2\u4ef6\u5b9a\u4e49\u4e864\u4e2a\u64cd\u4f5c\uff1aADD\u3001DEL\u3001CHECK\u3001Version\u3002\\n\\n1. ADD\uff1a\u6dfb\u52a0\u5bb9\u5668\u5230\u7f51\u7edc\u4e2d\uff0c\u63d2\u4ef6\u6536\u5230ADD\u547d\u4ee4\u6267\u884c\u5982\u4e0b\u6b65\u9aa4\uff1b\u4e0d\u652f\u6301\u591a\u6b21\u8c03\u7528\u3002\\n- \u5728CNI_NETNS\u7684\u5bb9\u5668\u4e2d\u521b\u5efaCNI_IFNAME\u7684\u63a5\u53e3\u3002\\n- \u8c03\u6574CNI_NETNS\u5bb9\u5668\u5185CNI_IFNAME\u7684\u914d\u7f6e\u3002\\n\\n2. DEL\uff1a\u4ece\u5bb9\u5668\u4e2d\u5220\u9664\u7f51\u7edc\uff0c\u63d2\u4ef6\u6536\u5230DEL\u547d\u4ee4\u6267\u884c\u5982\u4e0b\u6b65\u9aa4\uff1b\u652f\u6301\u591a\u6b21\u8c03\u7528\u3002\\n- \u5220\u9664CNI_NETNS\u5bb9\u5668\u5185\u7684CNI_IFNAME\u5b9a\u4e49\u7684\u63a5\u53e3\u3002\\n- \u64a4\u9500\u63d2\u4ef6ADD\u529f\u80fd\u4e2d\u5e94\u7528\u7684\u4fee\u6539\u3002\\n\\n3. Check\uff1a\u68c0\u67e5\u5bb9\u5668\u7684\u7f51\u7edc\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\\n\\n4. Version\uff1a\u63a2\u6d4bCNI\u63d2\u4ef6\u7248\u672c\u662f\u5426\u652f\u6301\u3002\\n\\n\\n## CNI Plugin \u9879\u76ee\\nPlugin\u4e2d\u63d0\u4f9b\u4e863\u4e2a\u7ef4\u5ea6\u7684\u63d2\u4ef6\uff0c\u4e00\u4e2a\u662fmain\uff0c\u7528\u6237\u521b\u5efa\u7f51\u7edc\u63a5\u53e3\u7684\u63d2\u4ef6\uff0c\u4e00\u4e2aipam\uff0c\u7528\u4e8e\u7ba1\u7406ip\u5730\u5740\u7684\u63d2\u4ef6\uff0c\u53ef\u4ee5\u88abmain\u63d2\u4ef6\u8c03\u7528\uff0c\u4e00\u4e2ameta\u63d2\u4ef6\uff0c\u5c31\u662f\u5176\u5b83\u63d2\u4ef6\u3002"},{"id":"serverless\u57fa\u7840\u77e5\u8bc6","metadata":{"permalink":"/blog/serverless\u57fa\u7840\u77e5\u8bc6","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-03-01-serverless\u57fa\u7840\u77e5\u8bc6.md","source":"@site/blog/2022-03-01-serverless\u57fa\u7840\u77e5\u8bc6.md","title":"Serverless \u57fa\u7840\u77e5\u8bc6","description":"Serverless \u662f\u4ec0\u4e48\uff0c\u5b83\u6709\u4ec0\u4e48\u4f18\u52bf\uff0c\u6709\u4ec0\u4e48\u9650\u5236\uff0c\u5e94\u8be5\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u5b83.","date":"2022-03-01T00:00:00.000Z","tags":[{"inline":false,"label":"Serveless","permalink":"/blog/tags/Serveless","description":"Serveless"}],"readingTime":6.35,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"serverless\u57fa\u7840\u77e5\u8bc6","title":"Serverless \u57fa\u7840\u77e5\u8bc6","authors":["rongfu"],"tags":["Serveless"]},"unlisted":false,"prevItem":{"title":"Kubernetes\u7f51\u7edc\u4e4bCNI\u89c4\u8303\u89e3\u8bfb","permalink":"/blog/k8s\u4e4bCNI\u89c4\u8303\u89e3\u8bfb"},"nextItem":{"title":"gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6"}},"content":"Serverless \u662f\u4ec0\u4e48\uff0c\u5b83\u6709\u4ec0\u4e48\u4f18\u52bf\uff0c\u6709\u4ec0\u4e48\u9650\u5236\uff0c\u5e94\u8be5\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u5b83.\\n\x3c!-- truncate --\x3e\\n\\n![image](static/img/2022-03-01/Serverless-architecture-preview-image.png)\\n\\nServerless \u662f\u4ec0\u4e48\uff0c\u5b83\u6709\u4ec0\u4e48\u4f18\u52bf\uff0c\u6709\u4ec0\u4e48\u9650\u5236\uff0c\u5e94\u8be5\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u5b83.\\n\\n## Serverless \u662f\u4ec0\u4e48\\n\\n\u65e0\u670d\u52a1\u5668\u67b6\u6784\u662f\u4e00\u79cd\u57fa\u4e8e\u4e8b\u4ef6\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u65e0\u9700\u5904\u7406\u3001\u4f9b\u5e94\u548c\u6269\u5c55\u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u3002\u8fd9\u6837\uff0c\u4f01\u4e1a\u5c31\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9\u670d\u52a1\u8fd0\u884c\u4ed6\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u65e0\u9700\u6295\u8d44\u7269\u7406\u6216\u865a\u62df\u670d\u52a1\u5668\u3002\u8bb8\u591a\u5904\u7406\u4e91\u670d\u52a1\u7684\u63d0\u4f9b\u5546\u5904\u7406\u8ba1\u7b97\u3001\u670d\u52a1\u5668\u7ba1\u7406\u3001\u7f16\u7801\u548c\u52a8\u6001\u5206\u914d\u8d44\u6e90\u7684\u590d\u6742\u6027\u3002\\n\\n\u5728\u65e0\u670d\u52a1\u7684\u53d1\u5c55\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u6709\u4e24\u79cd\u6a21\u5f0f\uff1a\\n- \u540e\u7aef\u5373\u670d\u52a1\uff08BaaS\uff09\\n- \u529f\u80fd\u5373\u670d\u52a1\uff08FaaS\uff09\\n\\n### \u4ec0\u4e48\u662f BaaS\\n\\n\u540e\u7aef\u5373\u670d\u52a1\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u4e13\u6ce8\u4e8e\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u524d\u7aef\uff0c\u5e76\u8ba9\u4ed6\u4eec\u6446\u8131\u6258\u7ba1\u3001\u4e91\u5b58\u50a8\u548c\u6570\u636e\u5e93\u7ba1\u7406\u7b49\u540e\u7aef\u5f00\u53d1\u4efb\u52a1\u3002\u8fd9\u6837\uff0c\u4ed6\u4eec\u5c31\u4e0d\u5fc5\u4e3a\u670d\u52a1\u5668\u7aef\u6d3b\u52a8\uff08\u4f8b\u5982\u6570\u636e\u5e93\u7ba1\u7406\u3001\u7528\u6237\u8eab\u4efd\u9a8c\u8bc1\u548c\u52a0\u5bc6\uff09\u7ba1\u7406\u6216\u7f16\u5199\u4ee3\u7801\u3002\\n\\n\\n\\n### \u4ec0\u4e48\u662f FaaS\\n\\n\u529f\u80fd\u5373\u670d\u52a1\u662f\u4e00\u79cd\u4e8b\u4ef6\u9a71\u52a8\u7684\u6267\u884c\u6a21\u578b\uff0c\u53ef\u4ee5\u6267\u884c\u5c0f\u4ee3\u7801\u6a21\u5757\u3002\u5f53\u5e94\u7528\u7a0b\u5e8f\u6a21\u5757\u4e2d\u53d1\u751f\u67d0\u4e9b\u4e8b\u4ef6\u7684\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u89e6\u53d1\u51fd\u6570\u3002\u8fd9\u5e26\u6765\u4e86\u5353\u8d8a\u7684\u6210\u672c\u6548\u7387\u3001\u8d44\u6e90\u7684\u52a8\u6001\u6269\u5c55\u548c\u7b80\u5316\u7684\u6d41\u7a0b\u3002\\n\\n## Serverless \u6709\u4ec0\u4e48\u4f18\u52bf\\n\\n- \u60a8\u7684\u5f00\u53d1\u4eba\u5458\u73b0\u5728\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7f16\u5199\u4ee3\u7801\u548c\u4f18\u5316\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u3002\\n- \u60a8\u53ef\u4ee5\u53d8\u5f97\u66f4\u52a0\u654f\u6377\uff0c\u83b7\u5f97\u521b\u4e1a\u521b\u65b0\uff0c\u5e76\u62e5\u6709\u4f01\u4e1a\u7ade\u4e89\u4f18\u52bf\u3002\\n- \u7531\u4e8e\u65e0\u670d\u52a1\u5668\u67b6\u6784\u5c06\u4e1a\u52a1\u903b\u8f91/\u4ee3\u7801\u4f5c\u4e3a\u51fd\u6570\u6267\u884c\uff0c\u56e0\u6b64\u60a8\u4e0d\u518d\u9700\u8981\u624b\u52a8\u7ba1\u7406\u57fa\u7840\u67b6\u6784\u3002\\n- \u5177\u6709\u6210\u672c\u6548\u76ca\u7684\u5b9a\u4ef7\u6a21\u5f0f\u2014\u2014\u6309\u4ef7\u503c\u4ed8\u8d39\u2014\u2014\u6d88\u9664\u4e86\u5728\u7ba1\u7406\u5185\u90e8\u67b6\u6784\u65b9\u9762\u8fdb\u884c\u5927\u91cf\u6295\u8d44\u7684\u9700\u8981\u3002 \\n- \u6545\u969c\u4e0d\u4f1a\u5f71\u54cd\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\uff0c\u56e0\u4e3a\u57fa\u4e8e\u4e8b\u4ef6\u7684\u67b6\u6784\u4f7f\u5e94\u7528\u7a0b\u5e8f\u6a21\u5757\u5f7c\u6b64\u72ec\u7acb\u3002\\n- \u60a8\u53ef\u4ee5\u66f4\u5feb\u5730\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u5e76\u5728\u53d1\u5e03\u4e2d\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u547d\u4ee4\u884c\u754c\u9762\u8fd8\u6709\u52a9\u4e8e\u5728\u51e0\u5206\u949f\u5185\u90e8\u7f72\u4ee3\u7801\u3002 \\n- \u5b83\u4f7f\u60a8\u80fd\u591f\u6784\u5efa\u4f18\u96c5\u3001\u65e0\u7f1d\u7684\u7528\u6237\u4f53\u9a8c\u5e76\u6ee1\u8db3\u5ba2\u6237\u7684\u9700\u6c42\u3002 \\n- \u60a8\u53ef\u4ee5\u6309\u9700\u548c\u6309\u4f7f\u7528\u60c5\u51b5\u6269\u5c55\u6216\u7f29\u5c0f\u5e94\u7528\u7a0b\u5e8f\u3002 \\n- \u529f\u80fd\u5373\u670d\u52a1\u67b6\u6784\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u521b\u5efa\u72ec\u7acb\u7684\u3001\u6709\u76ee\u7684\u7684\u529f\u80fd\uff0c\u4f8b\u5982 API \u8c03\u7528\u3002\\n- \u7531\u4e8e\u57fa\u4e8e\u6a21\u5757\u5316\u3001\u5feb\u901f\u548c\u8f83\u5c0f\u7684\u7248\u672c\uff0c\u5b83\u663e\u7740\u7f29\u77ed\u4e86\u4ea7\u54c1\u4e0a\u5e02\u65f6\u95f4\u3002\\n- \u60a8\u65e0\u9700\u62c5\u5fc3\u57fa\u7840\u67b6\u6784\u7684\u5b89\u5168\u6027\uff0c\u56e0\u4e3a\u4e91\u63d0\u4f9b\u5546\u4f1a\u7ef4\u62a4\u5b83\u3002\\n- \u60a8\u7684\u56e2\u961f\u53ef\u4ee5\u4f7f\u7528 AWS Lambda\u8fb9\u7f18\u7b49\u73b0\u4ee3\u65e0\u670d\u52a1\u5668\u529f\u80fd\u6765\u6539\u5584\u5ef6\u8fdf\u671f\u3002\\n\\n## Serverless \u6709\u4ec0\u4e48\u9650\u5236\\n\\n- \u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5728\u65e0\u670d\u52a1\u5668\u4e0a\u53ef\u80fd\u6bd4\u4e13\u7528\u670d\u52a1\u5668\u6210\u672c\u66f4\u9ad8\u3002 \\n- \u5728\u6267\u884c\u51fd\u6570\u65f6\u5904\u7406\u51b7\u542f\u52a8\u8bf7\u6c42\u65f6\uff0c\u60a8\u53ef\u80fd\u4f1a\u9047\u5230\u5ef6\u8fdf\u3002\u4f46\u662f\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001\u5b9a\u671f\u8bf7\u6c42\u4ee5\u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002 \\n- \u60a8\u5c06\u4f9d\u8d56\u4e8e\u60a8\u7684\u63d0\u4f9b\u5546\u6765\u63d0\u4f9b\u8c03\u8bd5\u548c\u76d1\u63a7\u5de5\u5177\uff0c\u5e76\u4e14\u5bf9\u5e73\u53f0\u67b6\u6784\u548c\u53ef\u7528\u6027\u7684\u63a7\u5236\u6709\u9650\u3002 \\n- \u7531\u4e8e\u66f4\u591a\u7684\u529f\u80fd\uff0c\u5f00\u53d1\u4eba\u5458\u9762\u4e34\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u590d\u6742\u6027\u3002\u5ffd\u7565\u51e0\u4e2a\u51fd\u6570\u7684\u7c92\u5ea6\u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u5e73\u8861\u4f1a\u9020\u6210\u6df7\u4e71\u3002 \\n- \u7531\u4e8e\u65e0\u670d\u52a1\u5668\u67b6\u6784\u4e2d\u7684\u5c0f\u578b\u6a21\u5757\uff0c\u60a8\u53ef\u80fd\u4f1a\u9762\u4e34\u90e8\u7f72\u3001\u7248\u672c\u63a7\u5236\u548c\u5176\u4ed6\u5b9e\u65bd\u95ee\u9898\u3002\u8fd9\u5728\u5bf9\u4e00\u7ec4\u90e8\u7f72\u7684\u529f\u80fd\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\u65f6\u63d0\u51fa\u4e86\u6311\u6218\u3002 \\n- \u7531\u4e8e\u4e91\u63d0\u4f9b\u5546\u53ef\u4ee5\u63a7\u5236\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u56e0\u6b64\u53ef\u80fd\u4f1a\u5f71\u54cd\u7cfb\u7edf\u7684\u7075\u6d3b\u6027\u548c\u5b9a\u5236\u5316\u3002 \\n\\n## Serverless \u4ec0\u4e48\u573a\u666f\u53ef\u4ee5\u4f7f\u7528\u5b83\\n\\n\u65e0\u670d\u52a1\u5668\u67b6\u6784\u4e3a\u654f\u6377\u5de5\u4f5c\u73af\u5883\u3001\u8d44\u6e90\u5206\u914d\u81ea\u52a8\u5316\u3001\u53ef\u6269\u5c55\u6027\u3001\u6539\u8fdb\u54cd\u5e94\u65f6\u95f4\u7b49\u672a\u6765\u4e1a\u52a1\u76ee\u6807\u5960\u5b9a\u4e86\u57fa\u7840\u3002\u6b64\u5916\uff0c\u60a8\u4f1a\u770b\u5230\u7269\u7406\u57fa\u7840\u8bbe\u65bd\u7684\u8fd0\u8425\u5f00\u9500\u548c\u914d\u7f6e\u51cf\u5c11\uff0c\u4ece\u800c\u4e3a\u60a8\u7684\u6295\u8d44\u5e26\u6765\u4ef7\u503c\u3002\\n\\n\u4ee5\u4e0b\u662f\u65e0\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u5217\u8868\uff0c\u5c55\u793a\u4e86\u60a8\u53ef\u4ee5\u5728\u54ea\u4e9b\u5730\u65b9\u5c06\u65e0\u670d\u52a1\u5668\u67b6\u6784\u96c6\u6210\u5230\u60a8\u7684\u4e1a\u52a1\u4e2d\uff1a\\n\\n- \u6784\u5efa\u9ad8\u5ef6\u8fdf\u7684\u5b9e\u65f6\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f8b\u5982\u591a\u5a92\u4f53\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u6267\u884c\u5185\u5b58\u7684\u81ea\u52a8\u5206\u914d\u548c\u590d\u6742\u7684\u6570\u636e\u5904\u7406 \\n- \u4e3a\u4e86\u6ee1\u8db3\u5feb\u901f\u53d8\u5316\u7684\u5f00\u53d1\u9700\u6c42\u3001\u5ba2\u6237\u9700\u6c42\u529f\u80fd\u6dfb\u52a0\u548c\u5176\u4ed6\u590d\u6742\u7684\u53ef\u6269\u5c55\u6027\u9700\u6c42\uff0c\u4e3a\u4e0d\u53ef\u9884\u6d4b\u7684\u5de5\u4f5c\u8d1f\u8f7d\u63d0\u4f9b\u670d\u52a1\u3002 \\n- \u52a8\u6001\u8c03\u6574\u56fe\u50cf\u5927\u5c0f\u6216\u8f6c\u7801\u89c6\u9891\u5e76\u7b80\u5316\u4e0d\u540c\u8bbe\u5907\u7684\u591a\u5a92\u4f53\u5904\u7406\u3002 \\n- \u652f\u6301\u591a\u8bed\u8a00\u670d\u52a1\u96c6\u6210\uff0c\u6ee1\u8db3\u73b0\u4ee3\u8f6f\u4ef6\u9700\u6c42\u3002\\n- \u4f7f\u7528\u7269\u8054\u7f51\u83b7\u53d6\u7cbe\u786e\u7684\u8bbe\u5907\u72b6\u6001\u5e76\u5904\u7406\u667a\u80fd\u8bbe\u5907\u5e94\u7528\u7a0b\u5e8f\u3002 \\n- \u5efa\u7acb\u5b89\u5168\u7684\u5ba2\u6237\u4ea4\u4ed8\u8c03\u5ea6\u7cfb\u7edf\u5e76\u5e2e\u52a9\u52a8\u6001\u8c03\u6574\u5927\u5c0f\u3002"},{"id":"gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","metadata":{"permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-01-01 gRPC \u5b66\u4e60\u4e4b\u9ad8\u7ea7\u77e5\u8bc6.md","source":"@site/blog/2022-01-01 gRPC \u5b66\u4e60\u4e4b\u9ad8\u7ea7\u77e5\u8bc6.md","title":"gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","description":"gRPC \u5b66\u4e60\u901a\u4fe1\u57fa\u7840","date":"2022-01-01T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/gRPC","description":"gRPC"}],"readingTime":5.69,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","title":"gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","authors":["rongfu"],"tags":["gRPC"]},"unlisted":false,"prevItem":{"title":"Serverless \u57fa\u7840\u77e5\u8bc6","permalink":"/blog/serverless\u57fa\u7840\u77e5\u8bc6"},"nextItem":{"title":"gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6"}},"content":"gRPC \u5b66\u4e60\u901a\u4fe1\u57fa\u7840\\n\x3c!-- truncate --\x3e\\n## \u9ad8\u7ea7\u77e5\u8bc6\\n\\n\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u8bb0\u5f55\u4e86\u5bf9 gRPC \u7684\u4f7f\u7528\uff0c\u4f46\u662f\u90fd\u6ca1\u6709\u6d89\u53ca\u5e95\u5c42\u7684\u901a\u4fe1\u57fa\u7840\u77e5\u8bc6\u3002\u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u4ecb\u7ecd gRPC \u7684\u9ad8\u7ea7\u77e5\u8bc6\uff0c\u6d89\u53ca\u5230 gRPC \u7684\u5e95\u5c42\u539f\u7406\u3001\\n\\n### gRPC \u5e95\u5c42\u539f\u7406\\n\\n\\n### gRPC \u8d85\u8d8a\u57fa\u7840\u77e5\u8bc6\\n\\n\u8fd9\u90e8\u5206\u4e3b\u8981\u8bb2\u8ff0\u5728\u6784\u5efa\u771f\u6b63\u7684gRPC\u5e94\u7528\u65f6\uff0c\u5bf9\u4e8e\u9700\u8981\u589e\u5f3a\u5b83\u4eec\u7684\u5404\u79cd\u80fd\u529b\uff0c\u6bd4\u5982\uff1a\u62e6\u622agRPC\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3001\u5f39\u6027\u5904\u7406\u7f51\u7edc\u5ef6\u8fdf\u3001\u5904\u7406\u9519\u8bef\u3001\u5728\u670d\u52a1\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u5171\u4eab\u5143\u6570\u636e\u3002\\n\\n#### \u62e6\u622a\u5668\\n\\n\u5728 `gRPC` \u4e2d\uff0c\u53ef\u4ee5\u62e6\u622a `gRPC` \u7684\u6267\u884c.\u6765\u6ee1\u8db3\u7279\u5b9a\u7684\u9700\u6c42\uff0c\u5982\u65e5\u5fd7\u3001\u8ba4\u8bc1\u3001\u6027\u80fd\u5ea6\u76d0\u6307\u6807\u7b49\uff0c\u8fd9\u4f1a\u4f7f\u7528\u4e00\u79cd\u540d\u4e3a\u62e6\u622a\u5668\u7684\u6269\u5c55\u673a\u5236\u3002\u5b83\u662f `gRPC` \u6838\u5fc3\u6269\u5c55\u673a\u5236\u4e4b\u4e00 \uff0c\u5728\u4e00\u4e9b\u4f7f\u7528\u573a\u5446\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982\u65e5\u5fd7\u3001\u8eab\u4efd\u9a8c\u8bc1\u3001\u6388\u6743\u3001\u6027\u80fd\u5ea6\u76d8\u6307\u6807\u3001\u8ddf\u8e2a\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u81ea\u5b9a\u4e49\u9519\u6c42.\\n\\n\u6839\u636e\u6240\u62e6\u622a\u7684 `RPC` \u8c03\u7528\u7c7b\u578b\uff0c`gRPC` \u62e6\u622a\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u5bf9\u4e8e\u4e00\u5143`RPC`\uff0c\u4f7f\u7528\u4e00\u5143\u62e6\u622a\u5668\uff0c\u5bf9\u4e8e\u6d41`RPC`\uff0c\u4f7f\u7528\u6d41\u62e6\u622a\u5668\uff1b\u8fd9\u4e9b\u62e6\u622a\u5668\u65e2\u53ef\u4ee5\u7528\u5728\u670d\u52a1\u7aef\u4e5f\u53ef\u4ee5\u7528\u5728\u5ba2\u6237\u7aef\u3002\\n\\n##### \u670d\u52a1\u7aef\u62e6\u622a\u5668\\n\\n\u5f53\u5ba2\u6237\u7aef\u8c03\u7528 gRPC\u670d\u52a1\u7684\u8fdc\u7a0b\u65b9\u6cd5\u8098\uff0c\u901a\u8fc7\u4f7f\u7528\u670d\u52a1\u5668\u7aef\u62e6\u622a\u5668\uff0c\u53ef\u4ee5\u5728\u6267\u884c\u8fdc\u7a0b\u65b9\u6cd5 \u4e4b\u524d\uff0c\u6267\u884c\u4e00\u4e2a\u901a\u7528\u7684\u903b\u8f91\u3002\\n\\n![grpc-server-intercepter](static/img/2021-12-30-grpc/grpc-server-intercepter.png)\\n\\n\u5728\u670d\u52a1\u5668\u9500\uff0c \u4e00\u5143\u62e6\u622a\u5668\u62e6\u622a\u4e00\u5143 RPC\uff0c\u68b3\u62e6iliV:\xecI\u552e\u51fa1\u62e6\u622a\u6d41 RPC. \u4e0b\u56de\u6765\u53f3\u4e00\u4e0b\u670d\u52a1\u5668\u63e3\\n\u4e00\u5143\u62e6\u6572\u5668.\\n\\n- \u4e00\u5143\u62e6\u622a\\n\\n\u8981\u5b9e\u73b0\u8fd9\u4e00\u70b9 \uff0c\u9700\u8981\u5148\u5b9e\u73b0 `UnaryServerlnterceptor` \u7c7b\u578b\u7684\u51fd\u6570\uff0c \u5e76\u5728\u521b `gRPC` \u670d\u52a1\u5668\u7aef\u65f6\u5c06\u51fd\u6570\u6ce8\u518c\u8fdb\u6765\u3002 `UnaryServerlnterceptor` \u662f\u7528\u4e8e\u670d\u52a1\u5668\u7aef\u4e00\u5143\u62e6\u622a\u7684\u7c7b\u578b\u3002\u51fd\u6570\u5b9a\u4e49\u7c7b\u578b\u5982\u4e0b\u3002\\n\\n```go\\nfunc(ctx context.Context, req interface{}, info \u53ebJnaryServerlnfo\uff0c\\nhand1er UnaryHand1er) (re5p interface{}, err error)\\n```\\n\\n\u4f8b\u5982\uff1a\u8fdb\u884c\u4e00\u5143\u62e6\u622a\uff0c\u6253\u5370\u65e5\u5fd7\u3002\\n\\n```go\\nfunc orderUnaryServerlnterceptor(ctx context.Context, req interface{},\\n\\tinfo *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (interface{}, error) {\\n\\tlog.Println(\\"======= [Server Interceptor1 \\", info.FullMethod)\\n\\tm, err := handler(ctx, req)\\n\\tlog.Printf(\\"post proc mess: %s\\", m)\\n    // \u53ef\u4ee5\u62e6\u622a\u4fee\u6539\u8fd4\u56de\u5185\u5bb9\\n    if order, ok := m.(*pb.Order); ok {\\n\\t\\torder.Price = 100\\n\\t\\treturn order, err\\n\\t}\\n\\treturn m, err\\n}\\n\\nfunc main() {\\n    ....\u7701\u7565\\n\\ts := grpc.NewServer(grpc.UnaryInterceptor(orderUnaryServerlnterceptor))\\n\\tpb.RegisterOrderManagementServer(s, &server{})\\n\\tif err := s.Serve(listen); err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n}\\n\\n```\\n\\n- \u6d41\u62e6\u622a\\n\\n\u670d\u52a1\u5668\u7aef\u6d41\u62e6\u622a\u5668\u4f1a\u62e6\u622a `gRPC` \u670d\u52a1\u5668\u6240\u5904\u7406\u7684\u6240\u6709\u6d41`RPC`\u3002 \u6d41\u62e6\u622a\u5668\u5305\u62ec\u524d\u7f6e\u5904\u7406\u9636\u6bb5\u548c\u6d41\u64cd\u4f5c\u62e6\u622a\u9636\u6bb5\u3002\\n\\n\u8981\u5b9e\u73b0\u6d41\u62e6\u622a\uff0c\u9700\u8981\u5b9e\u73b0`Streal\'1Serverlnterceptor` \u51fd\u6570\uff1a\\n```go\\nfunc (srv interface{}, ss grpc.ServerStream,info *grpc.StreamServerInfo,handler grpc.StreamHandler) error  {\\n\\n}\\n```\\n\\n`grpc.ServerStream` \u7684\u5305\u88c5\u5668\u53ef\u4ee5\u62e6\u622a `gRPC` \u670d\u52a1\u53d1\u9001\u6216\u63a5\u6536\u5230\u7684\u6570\u636e\uff0c\u5b83\u5b9e\u73b0\u4e86 `SendMsg` \u51fd\u6570\u548c `RecvMsg` \u51fd\u6570\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u4f1a\u5728\u670d\u52a1\u53d1\u9001\u548c\u63a5\u6536 `RPC` \u6d41\u6d88\u606f\u7684\u65f6\u5019\u8c03\u7528\u3002\\n\\n\u5728\u6d41 `RPC` \u8fdb\u5165\u670d\u52a1\u524d\uff0c\u53ef\u4ee5\u901a\u8fc7 `grpc.ServeStream` \u8fdb\u884c\u6d41\u7684\u5904\u7406\uff0c\u518d\u901a\u8fc7 `grpc.StreamHandler` \u6765\u8fdb\u884c\u8c03\u7528\u3002\\n\\n\u4f8b\u5982\uff1a\u5728 `OrderManager` \u7684\u6d41\u63a5\u53e3\u4e2d\u5148\u8fdb\u884c\u8f93\u5165\u6d41\u7684\u5904\u7406\uff0c\u518d\u8c03\u7528 `RPC`.\\n\\n```go\\ntype wrappedSteam struct {\\n\\tgrpc.ServerStream\\n}\\n\\nvar _ grpc.ServerStream = &wrappedSteam{}\\n\\nfunc (w *wrappedSteam) RecvMsg(m interface{}) error {\\n\\tlog.Printf(\\"=====RecvMSg==== %T\\", m)\\n\\treturn w.ServerStream.RecvMsg(m)\\n}\\n\\nfunc (w *wrappedSteam) SendMsg(m interface{}) error {\\n\\tlog.Println(\\"====SendMsg====\\", m)\\n\\treturn w.ServerStream.SendMsg(m)\\n}\\n\\nfunc newWrappedStream(s grpc.ServerStream) grpc.ServerStream {\\n\\treturn &wrappedSteam{s}\\n}\\n\\nfunc orderServerStreamInterceptor(srv interface{}, ss grpc.ServerStream, info *grpc.StreamServerInfo, handler grpc.StreamHandler) error {\\n\\tlog.Println(\\"===== [Server Steam Interceptor ]\\", info.FullMethod) \\n\\terr := handler(srv, newWrappedStream(ss))\\n\\tif err != nil {\\n\\t\\tlog.Fatalf(\\"RPC failed with error %v\\", err)\\n\\t}\\n\\treturn err\\n}\\n\\nfunc main() {\\n\\t...\\n\\ts := grpc.NewServer(grpc.StreamInterceptor(orderServerStreamInterceptor))\\n\\tpb.RegisterOrderManagementServer(s, &server{})\\n\\tif err := s.Serve(listen); err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n}\\n```\\n\\n\u5728\u6d41\u5f00\u59cb\u65f6\u4f1a\u8fdb\u5165 `orderServerStreamInterceptor` \u65b9\u6cd5\uff0c\u6d41\u7ed3\u675f\u540e\u624d\u4f1a\u63a8\u51fa\uff0c\u5728\u6d41\u6bcf\u6b21 `RecvMsg` \u65f6\u4f1a\u8fdb\u5165\u5230\u6d41\u62e6\u622a\u7684 `(w *wrappedSteam) RecvMsg` \u65b9\u6cd5\u4e2d\uff0c`SendMsg` \u540c\u7406\u3002\\n\\n\\n\\n##### \u5ba2\u6237\u7aef\u62e6\u622a\u5668\\n\\n![grpc-client-interceptor](static/img/2021-12-30-grpc/grpc-client-interceptor.png)\\n\\n- \u4e00\u5143\u62e6\u622a\\n\\n\u4e00\u5143\u62e6\u622a\u7684\u51fd\u6570\u7b7e\u540d\uff1a\\n```go\\ntype UnaryClientInterceptor func(ctx context.Context, method string, req, reply interface{}, cc *ClientConn, invoker UnaryInvoker, opts ...CallOption) error\\n\\n```\\n\\n\u4e0e\u670d\u52a1\u7aef\u62e6\u622a\u4e00\u5143\u62e6\u622a\u5668\u4e00\u6837\uff0c\u5ba2\u6237\u7aef\u4e00\u5143\u62e6\u622a\u5668\u4e5f\u6709\u4e0d\u540c\u7684\u9636\u6bb5\u3002\\n\\n\u4f8b\u5b50\uff1a\\n```go\\nfunc orderClientInterceptor(ctx context.Context, method string, req, apply interface{}, cc *grpc.ClientConn, invoker grpc.UnaryInvoker, opts ...grpc.CallOption) error {\\n\\tlog.Println(\\"Method :\\" + method)\\n\\tstart := time.Now()\\n\\terr := invoker(ctx, method, req, apply, cc, opts...)\\n\\tlog.Printf(\\"cost is [%d]ms\\",time.Now().Sub(start).Milliseconds())\\n\\treturn err\\n}\\n\\nfunc main(){\\n\\tconn, err := grpc.Dial(address, grpc.WithInsecure(),grpc.WithUnaryInterceptor(orderClientInterceptor))\\n}\\n```\\n\\n- \u6d41\u62e6\u622a\\n\\n```go\\ntype StreamClientInterceptor func(ctx context.Context, desc *StreamDesc, cc *ClientConn, method string, streamer Streamer, opts ...CallOption) (ClientStream, error)\\n\\n```\\n\\n\u4f8b\u5b50\uff1a\\n```go\\ntype wrappedSteam struct {\\n\\tgrpc.ClientStream\\n}\\n\\nfunc (w *wrappedSteam) RecvMsg(m interface{}) error {\\n\\tlog.Printf(\\"===== [ Client Stream Interceptor ] Receive a message (Type :%T) at %v\\", m, time.Now().Format(time.RFC3339))\\n\\treturn w.ClientStream.RecvMsg(m)\\n}\\n\\nfunc (w *wrappedSteam) SendMsg(m interface{}) error {\\n\\tlog.Printf(\\"===== [Client Stream Interceptor ] Send a message (Type :%T) at %v\\",m, time.Now().Format(time.RFC3339))\\n\\treturn w.ClientStream.SendMsg(m)\\n}\\n\\nfunc newWrappedStream(cs grpc.ClientStream) grpc.ClientStream {\\n\\treturn &wrappedSteam{cs}\\n}\\n\\nfunc orderClientStreamInterceptor(ctx context.Context, desc *grpc.StreamDesc, cc *grpc.ClientConn, method string, streamer grpc.Streamer, opts ...grpc.CallOption) (grpc.ClientStream, error) {\\n\\tlog.Println(\\"===== [Client Interceptor] \\",method)\\n\\ts, err := streamer(ctx, desc, cc, method, opts...)\\n\\treturn newWrappedStream(s), err\\n}\\n\\nfunc main(){\\n\\tconn, err := grpc.Dial(address, grpc.WithInsecure(),grpc.WithStreamInterceptor(orderClientStreamInterceptor))\\n}\\n```"},{"id":"gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","metadata":{"permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-12-30 gRPC \u5b66\u4e60\u4e4b\u4e2d\u7ea7\u77e5\u8bc6.md","source":"@site/blog/2021-12-30 gRPC \u5b66\u4e60\u4e4b\u4e2d\u7ea7\u77e5\u8bc6.md","title":"gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","description":"gRPC \u5b66\u4e60\u901a\u4fe1\u6a21\u578b","date":"2021-12-30T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/gRPC","description":"gRPC"}],"readingTime":9.25,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","title":"gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","authors":["rongfu"],"tags":["gRPC"]},"unlisted":false,"prevItem":{"title":"gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6","permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u9ad8\u7ea7\u77e5\u8bc6"},"nextItem":{"title":"gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6"}},"content":"gRPC \u5b66\u4e60\u901a\u4fe1\u6a21\u578b\\n\x3c!-- truncate --\x3e\\n## \u4e2d\u7ea7\u77e5\u8bc6\\n\\n\u501f\u52a9 gRPC \u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6a21\u5f0f\uff08\u4e5f\u79f0RPC\u98ce\u683c\uff09\uff1b\u672c\u7ae0\u5c06\u8ba8\u8bba gRPC \u5e94\u7528\u7684\u56db\u79cd\u901a\u4fe1\u6a21\u5f0f\uff0c\u4e00\u5143RPC\u3001\u670d\u52a1\u7aef\u6d41RPC\u3001\u5ba2\u6237\u7aef\u6d41RPC\u3001\u4ee5\u53ca\u53cc\u5411RPC\u3002\\n\\n### \u4e00\u5143RPC\\n\\n\u4e00\u5143RPC\uff1a\u4e00\u5143RPC\u6a21\u5f0f\u4e5f\u88ab\u79f0\u4e3a\u7b80\u5355RPC\u6a21\u5f0f\uff0c\u5f53\u5ba2\u6237\u7aef\u8c03\u7528\u670d\u52a1\u7aef\u7684\u8fdc\u7a0b\u65b9\u6cd5\u65f6\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u7aef\u5e76\u83b7\u5f97\u4e00\u4e2a\u54cd\u5e94\uff0c\u4e0e\u54cd\u5e94\u4e00\u8d77\u53d1\u9001\u8fd8\u6709\u5143\u6570\u636e\u3002\\n\\n### \u670d\u52a1\u5668\u7aef\u6d41 RPPC \u6a21\u5f0f\\n\\n\u4e00\u5143RPC\u6a21\u5f0f\uff1agRPC \u670d\u52a1\u5668\u7aef\u548c gRPC \u5ba2\u6237\u7aef\u5728\u901a\u4fe1\u65f6\u59cb\u7ec8\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u548c\u4e00\u4e2a\u54cd\u5e94\u3002\\n\u670d\u52a1\u5668\u7aef\u6d41 RPC \u6a21\u5f0f\uff1agRPC \u670d\u52a1\u5668\u7aef\u5728\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u6d88\u606f\u540e\uff0c\u4f1a\u53d1\u56de\u4e00\u4e2a\u54cd\u5e94\u5e8f\u5217\uff08\u7b80\u5355\u8bf4\u5c31\u662f\u4f1a\u53d1\u56de\u591a\u4e2a\u54cd\u5e94\uff09\u3002\u8fd9\u79cd\u591a\u4e2a\u54cd\u5e94\u6240\u7ec4\u6210\u7684\u5e8f\u5217\u4e5f\u88ab\u79f0\u4e3a\u6d41\u3002\\n\\n\u4f8b\u5982\uff1a\\n> \u5728 OrderManagement \u670d\u52a1\u4e2d\uff0c\u5047\u8bbe\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u8ba2\u5355\u641c\u7d22\u529f\u80fd\uff1b\u5229\u7528\u670d\u52a1\u5668\u7aef\u6d41 gRPC \u6a21\u5f0f\u65f6 OrderManagement \u670d\u52a1\u4e0d\u4f1a\u5c06\u6240\u6709\u5339\u914d\u7684\u8ba2\u5355\u4e00\u6b21\u6027\u7684\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u800c\u662f\u5728\u627e\u5230\u5339\u914d\u7684\u8ba2\u5355\u65f6\uff0c\u9010\u6b65\u5c06\u5176\u53d1\u9001\u51fa\u53bb\u3002\\n\\n![grpc-server-stream](static/img/2021-12-30-grpc/grpc-server-stream.png)\\n\\n- grpc server\\n```go\\nfunc (s *server) SearchOrders(searchQuery *wrappers.StringValue,stream pb.OrderManagement_SearchOrdersServer) error {\\n\\tfor key, order := range orderMap {\\n\\t\\tlog.Print(key, order)\\n\\t\\tfor _, itemStr := range order.Items {\\n\\t\\t\\tlog.Print(itemStr)\\n\\t\\t\\tif strings.Contains(itemStr, searchQuery.Value) {\\n\\t\\t\\t\\t// Send the matching orders in a stream\\n\\t\\t\\t\\terr := stream.Send(&order)\\n\\t\\t\\t\\tif err != nil {\\n\\t\\t\\t\\t\\treturn fmt.Errorf(\\"error sending message to stream : %v\\", err)\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlog.Print(\\"Matching Order Found : \\" + key)\\n\\t\\t\\t\\tbreak\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn nil\\n}\\n```\\n\\n- grpc clinet \\n```go\\nfunc main() {\\n    ....\\n    searchStream, \\t_ := client.SearchOrders(ctx, &wrappers.StringValue{Value: \\"Google\\"})\\n\\tfor {\\n\\t\\tsearchOrder, err := searchStream.Recv()\\n\\t\\tif err == io.EOF {\\n\\t\\t\\tlog.Print(\\"EOF\\")\\n\\t\\t\\tbreak\\n\\t\\t}\\n\\n\\t\\tif err == nil {\\n\\t\\t\\tlog.Print(\\"Search Result : \\", searchOrder)\\n\\t\\t}\\n\\t}\\n    ...\\n}\\n```\\n\\n\u4e0a\u8ff0\u5c31\u662f `gRPC` \u670d\u52a1\u5668\u7aef\u6d41\u6a21\u5f0f\uff0c\u670d\u52a1\u5728\u68c0\u7d22\u5230\u8ba2\u5355\u65f6\uff0c\u901a\u8fc7\u4ee5\u6d41\u7684\u5f62\u5f0f\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef `err := stream.Send(&order)` ; \u5ba2\u6237\u7aef\u5728\u8c03\u7528\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u5ba2\u6237\u7aef\u6d41\uff0c\u5b83\u6709\u4e00\u4e2a `Recv` \u65b9\u6cd5\uff0c\u8c03\u7528\u5ba2\u6237\u7aef\u7684 `Recv` \u65b9\u6cd5\uff0c\u53ef\u4ee5\u9010\u4e2a\u8bfb\u53d6\u670d\u52a1\u7aef\u5199\u5165\u7684\u6570\u636e\u3002\u5f53\u53d1\u73b0\u6d41\u7ed3\u675f\u65f6\uff0c `Recv` \u4f1a\u8fd4\u56de `io.EOF`\u3002\\n\\n### \u5ba2\u6237\u7aef\u6d41 RPC \u6a21\u5f0f\\n\\n\u5ba2\u6237\u7aef\u6d41RPC\u6a21\u5f0f\uff1a\u5ba2\u6237\u7aef\u4f1a\u53d1\u8d77\u591a\u4e2a\u8bf7\u6c42\u7ed9\u670d\u52a1\u7aef\uff0c\u800c\u4e0d\u518d\u662f\u5355\u4e2a\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u7aef\u5219\u4f1a\u53d1\u9001\u4e00\u4e2a\u54cd\u5e94\u7ed9\u5ba2\u6237\u7aef\u3002\u4f46\u662f\uff0c\u670d\u52a1\u7aef\u4e0d\u4e00\u5b9a\u8981\u7b49\u5230\u4ece\u5ba2\u6237\u7aef\u63a5\u53d7\u5230\u6240\u6709\u6d88\u606f\u540e\u624d\u53d1\u9001\u54cd\u5e94\u3002\\n\\n\u4f8b\u5982\uff1a\\n> \u5728 OrderManagement \u670d\u52a1\u4e2d\u5e0c\u671b\u6dfb\u52a0 updateOrders \u65b9\u6cd5\uff0c\u4ece\u800c\u66f4\u65b0\u4e00\u4e2a\u8ba2\u5355\u96c6\u5408\u3002\\n\\n![grpc client stream](static/img/2021-12-30-grpc/grpc-client-stream.png)\\n\\n\\n- grpc server : \u5982\u4e0b\u65b9\u6cd5\u5b9a\u4e49\u4e86\u4e00\u4e2a\u670d\u52a1\u7aef\u63a5\u6536\u5ba2\u6237\u7aef\u6d41\u7684\u65b9\u6cd5\\n\\n```go\\nfunc (s *server) UpdateOrders(stream pb.OrderManagement_UpdateOrdersServer) error {\\n\\tordersStr := \\"Updated Order IDs : \\"\\n\\tfor {\\n\\t\\torder, err := stream.Recv()\\n\\t\\tif err == io.EOF {\\n\\t\\t\\t// \u5ba2\u6237\u7aef\u53d1\u9001\u5b8c\u6d41\u6570\u636e\\n\\t\\t\\treturn stream.SendAndClose(&wrappers.StringValue{Value: \\"Orders processed \\" + ordersStr})\\n\\t\\t}\\n\\n\\t\\tif err != nil {\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\t\\t// Update order\\n\\t\\torderMap[order.Id] = *order\\n\\n\\t\\tlog.Printf(\\"Order ID : %s - %s\\", order.Id, \\"Updated\\")\\n\\t\\tordersStr += order.Id + \\", \\"\\n\\t}\\n}\\n```\\n- grpc client\\n```go\\nfunc main(){\\n    ....\u7701\u7565\\n    // =========================================\\n\\t// Update Orders : Client streaming scenario\\n\\tupdOrder1 := pb.Order{Id: \\"102\\", Items:[]string{\\"Google Pixel 3A\\", \\"Google Pixel Book\\"}, Destination:\\"Mountain View, CA\\", Price:1100.00}\\n\\tupdOrder2 := pb.Order{Id: \\"103\\", Items:[]string{\\"Apple Watch S4\\", \\"Mac Book Pro\\", \\"iPad Pro\\"}, Destination:\\"San Jose, CA\\", Price:2800.00}\\n\\tupdOrder3 := pb.Order{Id: \\"104\\", Items:[]string{\\"Google Home Mini\\", \\"Google Nest Hub\\", \\"iPad Mini\\"}, Destination:\\"Mountain View, CA\\", Price:2200.00}\\n\\n\\tupdateStream, err := client.UpdateOrders(ctx)\\n\\n\\tif err != nil {\\n\\t\\tlog.Fatalf(\\"%v.UpdateOrders(_) = _, %v\\", client, err)\\n\\t}\\n\\n\\t// Updating order 1\\n\\tif err := updateStream.Send(&updOrder1); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", updateStream, updOrder1, err)\\n\\t}\\n\\n\\t// Updating order 2\\n\\tif err := updateStream.Send(&updOrder2); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", updateStream, updOrder2, err)\\n\\t}\\n\\n\\t// Updating order 3\\n\\tif err := updateStream.Send(&updOrder3); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", updateStream, updOrder3, err)\\n\\t}\\n\\n\\tupdateRes, err := updateStream.CloseAndRecv()\\n\\tif err != nil {\\n\\t\\tlog.Fatalf(\\"%v.CloseAndRecv() got error %v, want %v\\", updateStream, err, nil)\\n\\t}\\n\\tlog.Printf(\\"Update Orders Res : %s\\", updateRes)\\n\\n}\\n```\\n\u5ba2\u6237\u7aef\u4ee5\u6d41\u7684\u5f62\u5f0f\u53d1\u9001`updateStream.Send(&updOrder2)`\u7ed9\u670d\u52a1\u7aef\uff0c\u4e00\u65e6\u6240\u6709\u6d88\u606f\u90fd\u4ee5\u6d41\u7684\u5f62\u5f0f\u53d1\u9001\u51fa\u53bb\uff0c\u5ba2\u6237\u7aef\u5c31\u53ef\u4ee5\u5c06\u6d41\u6807\u8bb0\u4e3a\u5df2\u5b8c\u6210\uff0c\u5e76\u901a\u8fc7 `CloseAndRecv` \u65b9\u6cd5\u6765\u8bfb\u53d6\u670d\u52a1\u7aef\u7684\u54cd\u5e94\u3002\\n\\n### \u53cc\u5411\u6d41 RPC \u6a21\u5f0f\\n\u53cc\u5411\u6d41RPC\u6a21\u5f0f\uff1a\u5ba2\u6237\u7aef\u4ee5\u6d88\u606f\u6d41\u7684\u5f62\u5f0f\u53d1\u9001\u8bf7\u6c42\u5230\u670d\u52a1\u5668\u7aef\uff0c\u670d\u52a1\u5668\u7aef\u4e5f\u4ee5\u6d88\u606f\u6d41\u7684\u5f62\u5f0f\u8fdb\u884c\u54cd\u5e94\u3002\u8c03\u7528\u5fc5\u987b\u7531\u5ba2\u6237\u7aef\u53d1\u8d77\uff0c\u4f46\u5728\u6b64\u4e4b\u540e\uff0c\u901a\u4fe1\u5b8c\u5168\u57fa\u4e8e gRPC \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u7684\u5e94\u7528\u7a0b\u5e8f\u903b\u8f91\u3002\\n\\n\u4f8b\u5982\uff1a\\n> \u5728 OrderManagement \u670d\u52a1\u4e2d\uff0c\u5047\u8bbe\u9700\u8981\u4e00\u4e2a\u8ba2\u5355\u5904\u7406\u529f\u80fd\uff0c\u901a\u8fc7\u8be5\u529f\u80fd\uff0c\u7528\u6237\u53ef\u4ee5\u53d1\u9001\u8fde\u7eed\u7684\u8ba2\u5355\u96c6\u5408\uff0c\u5e76\u6839\u636e\u6295\u9012\u5730\u5740\u5bf9\u5b83\u4eec\u8fdb\u884c\u7ec4\u5408\u53d1\u8d27\u3002\\n\\n![grpc-double-stream](static/img/2021-12-30-grpc/grpc-double-stream.png)\\n\\n\u8fd9\u4e2a\u4e1a\u52a1\u7528\u4f8b\u7684\u5173\u952e\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff1a\\n- \u6bcf\u4e2a\u8ba2\u5355\u4ee5\u72ec\u7acb\u7684 gRPC \u6d88\u606f\u7684\u5f62\u5f0f\u53d1\u9001\u81f3\u670d\u52a1\u5668\u7aef\u3002\\n- \u6bcf\u4e2a\u53d1\u8d27\u7ec4\u5408\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u4e2a\u8ba2\u5355\uff0c\u5b83\u4eec\u5e94\u8be5\u88ab\u6295\u9012\u5230\u76f8\u540c\u7684\u76ee\u7684\u5730\u3002\\n- \u8ba2\u5355\u662f\u6210\u6279\u5904\u7406\u7684\uff0c\u5f53\u8fbe\u5230\u6307\u5b9a\u7684\u6279\u6b21\u5927\u5c0f\u65f6\uff0c\u5f53\u524d\u521b\u5efa\u7684\u6240\u6709\u53d1\u8d27\u7ec4\u5408\u90fd\u4f1a\u88ab\u53d1\u9001\u81f3\u5ba2\u6237\u7aef\u3002\\n- \u5047\u8bbe\uff1a\u6d41\u4e2d\u67094\u4e2a\u8ba2\u5355\uff0c\u5176\u4e2d\u6709\u4e24\u4e2a\u8ba2\u5355\u8981\u53d1\u9001\u81f3X\uff0c\u4e24\u4e2a\u8981\u53d1\u9001\u81f3Y\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u8868\u793a\u4e3a\uff1aX\u3001Y\u3001X\u3001Y\u3002\u5982\u679c\u6279\u6b21\u5927\u5c0f\u4e3a3\uff0c\u90a3\u4e48\u6240\u521b\u5efa\u7684\u8ba2\u5355\u53d1\u8d27\u7ec4\u5408\u4f1a\u662f[X\uff0cX],[Y],[Y]\u3002\\n\\n\\ngRpc Server\uff1a\u4e3b\u8981\u903b\u8f91\u5c31\u662f\u901a\u8fc7\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u8ba2\u5355ID\u6309\u7167\u6307\u5b9a\u6279\u6b21\u5927\u5c0f\u4ee5\u53ca\u53d1\u8d27\u5730\u5740\u8fdb\u884c\u5206\u7ec4\uff0c\u518d\u628a\u5206\u7ec4\u540e\u7684\u4fe1\u606f\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\\n```go\\nconst orderBatchSize = 3\\nfunc (s *server) ProcessOrders(stream pb.OrderManagement_ProcessOrdersServer) error {\\n\\tbatchMarker := 1\\n\\tvar combinedShipmentMap = make(map[string]pb.CombinedShipment)\\n\\tfor {\\n\\t\\torderId, err := stream.Recv()\\n\\t\\tlog.Printf(\\"Reading Proc order : %s\\", orderId)\\n\\t\\tif err == io.EOF {\\n\\t\\t\\t// \u5ba2\u6237\u7aef\u53d1\u9001\u5173\u95ed\u65f6\uff0c\u9700\u8981\u628a\u670d\u52a1\u7aef\u5df2\u7ecf\u63a5\u6536\u5230\u7684\u8fdb\u884c\u53d1\u9001\\n\\t\\t\\tlog.Printf(\\"EOF : %s\\", orderId)\\n\\t\\t\\tfor _, shipment := range combinedShipmentMap {\\n\\t\\t\\t\\tif err := stream.Send(&shipment); err != nil {\\n\\t\\t\\t\\t\\treturn err\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn nil\\n\\t\\t}\\n\\t\\tif err != nil {\\n\\t\\t\\tlog.Println(err)\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\n\\t\\tdestination := orderMap[orderId.GetValue()].Destination\\n\\t\\tshipment, found := combinedShipmentMap[destination]\\n\\n\\t\\tif found {\\n\\t\\t\\tord := orderMap[orderId.GetValue()]\\n\\t\\t\\tshipment.OrdersList = append(shipment.OrdersList, &ord)\\n\\t\\t\\tcombinedShipmentMap[destination] = shipment\\n\\t\\t} else {\\n\\t\\t\\tcomShip := pb.CombinedShipment{Id: \\"cmb - \\" + (orderMap[orderId.GetValue()].Destination), Status: \\"Processed!\\", }\\n\\t\\t\\tord := orderMap[orderId.GetValue()]\\n\\t\\t\\tcomShip.OrdersList = append(shipment.OrdersList, &ord)\\n\\t\\t\\tcombinedShipmentMap[destination] = comShip\\n\\t\\t\\tlog.Print(len(comShip.OrdersList), comShip.GetId())\\n\\t\\t}\\n\\n\\t\\tif batchMarker == orderBatchSize {\\n\\t\\t\\tfor _, comb := range combinedShipmentMap {\\n\\t\\t\\t\\tlog.Printf(\\"Shipping : %v -> %v\\" , comb.Id, len(comb.OrdersList))\\n\\t\\t\\t\\tif err := stream.Send(&comb); err != nil {\\n\\t\\t\\t\\t\\treturn err\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tbatchMarker = 0\\n\\t\\t\\tcombinedShipmentMap = make(map[string]pb.CombinedShipment)\\n\\t\\t} else {\\n\\t\\t\\tbatchMarker++\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\ngRpc Client\uff1a\u4e3b\u8981\u903b\u8f91\u5c31\u662f\u53d1\u9001\u8ba2\u5355ID\u7ed9\u670d\u52a1\u7aef\uff0c\u4e4b\u540e\u5f00\u542f Go\u534f\u7a0b\u6765\u8bfb\u53d6\u670d\u52a1\u7aef\u8fd4\u56de\u7684\u6d88\u606f\u3002\\n```go\\nfunc main(){\\n    ...\\n    // =========================================\\n\\t// Process Order : Bi-di streaming scenario\\n\\tstreamProcOrder, err := client.ProcessOrders(ctx)\\n\\tif err != nil {\\n\\t\\tlog.Fatalf(\\"%v.ProcessOrders(_) = _, %v\\", client, err)\\n\\t}\\n\\n\\tif err := streamProcOrder.Send(&wrappers.StringValue{Value:\\"102\\"}); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", client, \\"102\\", err)\\n\\t}\\n\\n\\tif err := streamProcOrder.Send(&wrappers.StringValue{Value:\\"103\\"}); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", client, \\"103\\", err)\\n\\t}\\n\\n\\tif err := streamProcOrder.Send(&wrappers.StringValue{Value:\\"104\\"}); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", client, \\"104\\", err)\\n\\t}\\n\\n\\tif err := streamProcOrder.Send(&wrappers.StringValue{Value:\\"101\\"}); err != nil {\\n\\t\\tlog.Fatalf(\\"%v.Send(%v) = %v\\", client, \\"101\\", err)\\n\\t}\\n\\n    channel := make(chan struct{})\\n\\tgo asncClientBidirectionalRPC(streamProcOrder, channel)\\n\\t\\n\\tif err := streamProcOrder.CloseSend(); err != nil {\\n\\t\\tlog.Fatal(err)\\n\\t}\\n\\tchannel <- struct{}{}\\n\\n}\\n\\nfunc asncClientBidirectionalRPC(streamProcOrder pb.OrderManagement_ProcessOrdersClient, c chan struct{}) {\\n\\tfor {\\n\\t\\tcombinedShipment, errProcOrder := streamProcOrder.Recv()\\n\\t\\tif errProcOrder == io.EOF { // \u5224\u65ad\u670d\u52a1\u7aef\u6d41\u662f\u5426\u7ed3\u675f\uff1b\u670d\u52a1\u7aef\u65b9\u6cd5\u53ea\u8981\u6709return\u5c31\u610f\u5473\u7740\u6d41\u7ed3\u675f\u6d41\u4e86\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6b63\u5e38\u7ed3\u675f\uff0c\u4e5f\u53ef\u80fd\u662f\u9519\u8bef\u5bfc\u81f4\u7ed3\u675f\uff0c\u603b\u4e4b\u53ea\u8981return\u4e4b\u540e\u53cc\u5411\u6d41\u5c31\u65ad\u5f00\u4e86\u3002\\n\\t\\t\\tbreak\\n\\t\\t}\\n\\t\\tlog.Printf(\\"Combined shipment : \\", combinedShipment.OrdersList)\\n\\t}\\n\\t<-c\\n}\\n```\\n\\n\u5728\u53cc\u5411\u6d41\u4e2d\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49\u5ba2\u6237\u7aef\u6d41\u548c\u670d\u52a1\u7aef\u6d41\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u5b9a\u4e49\u4e86 `Send` \u548c `Recv` \u65b9\u6cd5\u3002\u53ef\u4ee5\u5b9e\u73b0\u53cc\u5411\u4f20\u8f93\u3002\\n```go\\n// \u5ba2\u6237\u7aef\u6d41\\ntype OrderManagement_ProcessOrdersClient interface {\\n\\tSend(*wrappers.StringValue) error\\n\\tRecv() (*CombinedShipment, error)\\n\\tgrpc.ClientStream\\n}\\n\\n// \u670d\u52a1\u7aef\u6d41\\ntype OrderManagement_ProcessOrdersServer interface {\\n\\tSend(*CombinedShipment) error\\n\\tRecv() (*wrappers.StringValue, error)\\n\\tgrpc.ServerStream\\n}\\n```\\n\\n\u5ba2\u6237\u7aef\u53ef\u4ee5\u5e76\u53d1\u8bfb\u53d6\u548c\u5199\u5165\u540c\u4e00\u4e2a\u6d41\uff0c\u8f93\u5165\u6d41\u548c\u8f93\u51fa\u6d41\u53ef\u4ee5\u72ec\u7acb\u8fdb\u884c\u64cd\u4f5c\u3002"},{"id":"gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","metadata":{"permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-12-25 gRPC \u5b66\u4e60\u4e4b\u521d\u7ea7\u77e5\u8bc6.md","source":"@site/blog/2021-12-25 gRPC \u5b66\u4e60\u4e4b\u521d\u7ea7\u77e5\u8bc6.md","title":"gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","description":"gRPC \u5b66\u4e60\u4e4b\u57fa\u672c\u6982\u5ff5","date":"2021-12-25T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/gRPC","description":"gRPC"}],"readingTime":5.65,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","title":"gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","authors":["rongfu"],"tags":["gRPC"]},"unlisted":false,"prevItem":{"title":"gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6","permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u4e2d\u7ea7\u77e5\u8bc6"},"nextItem":{"title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe","permalink":"/blog/\u6280\u672f\u5199\u4f5c"}},"content":"gRPC \u5b66\u4e60\u4e4b\u57fa\u672c\u6982\u5ff5\\n\x3c!-- truncate --\x3e\\n## \u521d\u7ea7\u77e5\u8bc6\\n\\n### 1\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1\\n\\n- \u540c\u6b65\u8bf7\u6c42\u7684\u54cd\u5e94\u98ce\u683c\\n- \u5f02\u6b65\u8bf7\u6c42\u7684\u4e8b\u4ef6\u9a71\u52a8\u98ce\u683c\\n\\n\u8bf7\u6c42\u54cd\u5e94\u7684\u98ce\u683c\u6700\u5e38\u89c1\u548c\u4f20\u7edf\u7684\u65b9\u5f0f\u5c31\u662f\u6784\u5efa\u4e3aRESTful \u670d\u52a1\uff0c\u4f46\u662f\uff0c\u4f7f\u7528RESTful \u670d\u52a1\u6765\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u663e\u5f97\u8fc7\u4e8e\u7b28\u91cd\u3001\u4f4e\u6548\u5e76\u4e14\u5bb9\u6613\u51fa\u9519\u3002\\n\\n\\n\\n### 2\u3001\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6280\u672f\u7684\u6f14\u8fdb\\n\\n- \u4f20\u7edf\u7684RPC\uff1a\\n\\n> \u65e9\u671f\u6709\u4e00\u4e9b\u6d41\u884c\u7684RPC\u5b9e\u73b0\uff0c\u6bd4\u5982\u901a\u7528\u5bf9\u8c61\u8bf7\u6c42\u4ee3\u7406\u4f53\u7cfb\u7ed3\u6784CORBA\u548c Java \u7684\u8fdc\u7a0b\u8c03\u7528(remot method invocation, RMI)\uff1b\u4f46\u662f\uff0c\u4ed6\u4eec\u7684\u5b9e\u73b0\u6781\u5176\u590d\u6742\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u6784\u5efa\u5728TCP\u8fd9\u6837\u7684\u901a\u4fe1\u534f\u8bae\u4e4b\u4e0a\u3002\\n\\n- SOAP\\n\\n> \u9274\u4e8eCORBA\u7b49\u4f20\u7edfRPC\u5b9e\u73b0\u7684\u5c40\u9650\u6027\uff0c\u7b80\u5355\u5bf9\u8c61\u8bbf\u95ee\u534f\u8bae\uff08SOAP\uff09\u5c31\u4ea7\u751f\u4e86\uff0cSOAP\u662f\u9762\u5411\u670d\u52a1\u7684\u67b6\u6784\uff08SOA\uff09\u4e2d\u7684\u6807\u51c6\u901a\u4fe1\u6280\u672f\uff0c\u80fd\u591f\u57fa\u4e8e\u4efb\u610f\u7684\u5e95\u5c42\u901a\u4fe1\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u5c31\u662fHTTP\u3002\\n\\n- RESTFul\\n\\n> \u63cf\u8ff0\u6027\u72b6\u6001\u8fc1\u79fb (REST) \u662f\u9762\u5411\u8d44\u6e90\u7684\u67b6\u6784\u7684\u57fa\u7840\uff0c\u5728\u8fd9\u79cd\u67b6\u6784\u4e2d\uff0c\u9700\u8981\u5c06\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u5efa\u6a21\u4e3a\u8d44\u6e90\u96c6\u5408\uff0c\u8bbf\u95ee\u8fd9\u4e9b\u8d44\u6e90\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d8\u66f4\u8fd9\u4e9b\u8d44\u6e90\u7684\u72b6\u6001\uff08\u521b\u5efa\u3001\u4fee\u6539\u3001\u5220\u9664\uff09\u3002RUST \u7684\u901a\u7528\u5b9e\u73b0\u662f HTTP\u3002\\n>\\n> \u968f\u7740\u5fae\u670d\u52a1\u7684\u6570\u91cf\u53ca\u5176\u7f51\u7edc\u4ea4\u4e92\u7684\u6fc0\u589e\uff0cRESTFul \u670d\u52a1\u5df2\u7ecf\u65e0\u6cd5\u6162\u716e\u73b0\u4ee3\u5316\u7684\u9700\u6c42\u4e86\uff0c\u4e0b\u9762\u4ecb\u7ecd 3 \u4e2a\u4e3b\u8981\u7684\u5c40\u9650\u6027\uff1a\\n>\\n> 1. \u57fa\u4e8e\u6587\u672c\u7684\u4f4e\u6548\u6d88\u606f\u534f\u8bae\uff1aRESTFul \u670d\u52a1\u5efa\u7acb\u5728\u57fa\u4e8e\u6587\u672c\u7684\u4f20\u8f93\u534f\u8bae\u4e4b\u4e0a\uff0c\u5e76\u4e14\u4f1a\u4f7f\u7528\u4eba\u7c7b\u53ef\u8bfb\u7684\u6587\u672c\u683c\u5f0f\uff0c\u5982 JSON\u3002\\n> 2. \u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7f3a\u4e4f\u5f3a\u7c7b\u578b\u63a5\u53e3\uff1a\u8d8a\u6765\u8d8a\u591a\u7684\u670d\u52a1\u8981\u901a\u8fc7\u7f51\u7edc\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u4e14\u8fd9\u4e9b\u670d\u52a1\u4f7f\u7528\u5b8c\u5168\u4e0d\u540c\u7684\u8bed\u8a00\u6765\u6784\u5efa\uff0c\u7f3a\u4e4f\u660e\u786e\u5b9a\u4e49\u548c\u5f3a\u7c7b\u578b\u7684\u670d\u52a1\u63a5\u53e3\u6210\u4e86\u4f7f\u7528RESTFul \u670d\u52a1\u7684\u4e3b\u8981\u969c\u788d\u3002\\n> 3. REST \u67b6\u6784\u98ce\u683c\u96be\u4ee5\u5f3a\u5236\u5b9e\u65bd\uff1aREST \u67b6\u6784\u98ce\u683c\u6709\u5f88\u591a\u597d\u7684\u5b9e\u8df5\uff0c\u53ea\u6709\u9075\u5faa\u8fd9\u4e9b\u5b9e\u8df5\uff0c\u624d\u80fd\u6784\u5efa\u51fa\u771f\u6b63\u7684 RESTFul \u670d\u52a1\uff1b\u4f46\u662f\uff0c\u7531\u4e8e\u6ca1\u6709\u4f5c\u4e3a\u5b9e\u73b0\u534f\u8bae\uff08\u5982\uff1aHTTP\uff09\u7684\u4e00\u90e8\u5206\u5f3a\u5236\u8981\u6c42\uff0c\u56e0\u6b64\uff0c\u5728\u5b9e\u8df5\u9636\u6bb5\uff0c\u8fd9\u4e9b\u5b9e\u8df5\u96be\u4ee5\u5b9e\u65bd\u3002\\n\\n\\n### 3\u3001gRPC \u7684\u8d77\u6e90\\n\\n\u6765\u6e90\u4e8e Google \u7684 Stubby \u7684\u901a\u7528 RPC \u6846\u67b6\u30022015 \u5e74 Google \u53d1\u5e03\u4e86 Stubby \u7684\u793e\u533a\u7248\u672c gRPC \u6846\u67b6\uff0c\u5e76\u6350\u732e\u7ed9\u4e86 CNCF \u793e\u533a\u3002\\n\\n### 4\u3001gRPC \u7684\u4f18\u52bf\\n\\n- \u63d0\u4f9b\u9ad8\u6548\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\\n\\n> 1. gRPC \u6ca1\u6709\u4f7f\u7528\u7c7b\u4f3c JSON \u3001 XML \u4e4b\u7c7b\u7684\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u800c\u662f\u91c7\u7528\u81ea\u5b9a\u4e49\u7684  `protocol buffers ` \u7684\u4e8c\u8fdb\u5236\u534f\u8bae\u3002\\n> 2. gRPC \u5728 HTTP/2 \u4e0a\u5b9e\u73b0\u4e86 protocol buffers \u7684\u534f\u8bae\u3002\\n\\n- \u5177\u6709\u7b80\u5355\u4e14\u5b9a\u4e49\u826f\u597d\u7684\u670d\u52a1\u63a5\u53e3\u548c\u6a21\u5f0f\\n\\n> gRPC \u4e3a\u5e94\u7528\u63d0\u4f9b\u4e86\u5fc5\u987b\u5148\u5b9a\u4e49\u63a5\u53e3\uff0c\u624d\u80fd\u53bb\u5904\u7406\u7ec6\u8282\u7684\u8981\u6c42\uff0cgRPC \u4e3a\u5e94\u7528\u63d0\u4f9b\u4e86\u7b80\u5355\u4f46\u4e00\u81f4\uff0c\u53ef\u9760\u4e14\u53ef\u6269\u5c55\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\\n>\\n> \u89e3\u51b3\u4e86\u7c7b\u4f3c REST \u6a21\u5f0f\u9700\u8981\u9075\u5faa\u597d\u7684\u67b6\u6784\u98ce\u683c\u5b9e\u8df5\uff0c\u624d\u80fd\u6784\u5efa\u51fa\u771f\u6b63\u7684 RESTFul \u670d\u52a1\uff0c\u4f46\u662f gRPC \u81ea\u5e26\u7c7b\u4f3c\u7684\u597d\u7684\u67b6\u6784\u98ce\u683c\u3002\\n\\n- \u5c5e\u4e8e\u5f3a\u7c7b\u578b\\n\\n> \u901a\u8fc7\u5b9a\u4e49\u5e94\u7528\u670d\u52a1\u4e4b\u95f4\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7c7b\u578b\uff0c\u5bf9\u4e8e\u5176\u6240\u4ea7\u751f\u7684\u5927\u591a\u6570\u8fd0\u884c\u65f6\u9519\u8bef\u548c\u4e92\u64cd\u4f5c\u9519\u8bef\uff0c\u53ef\u4ee5\u901a\u8fc7\u9759\u6001\u7c7b\u578b\u6765\u514b\u670d\u3002\\n\\n- \u652f\u6301\u591a\u8bed\u8a00\\n\\n> gRPC \u652f\u6301\u591a\u8bed\u8a00\uff0c\u57fa\u4e8e protocol buffers \u5b9a\u4e49\u7684\u670d\u52a1\u65f6\u8bed\u8a00\u4e2d\u7acb\u7684\u3002\\n\\n- \u652f\u6301\u53cc\u5de5\u6d41\\n\\n> gRPC \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u63d0\u4f9b\u4e86\u5bf9\u6d41\u7684\u539f\u751f\u652f\u6301\u3002\\n\\n- \u5177\u5907\u5185\u7f6e\u7684\u5546\u4e1a\u5316\u7279\u6027\\n\\n> gRPC \u63d0\u4f9b\u4e86\u5546\u4e1a\u5316\u7279\u6027\u7684\u5185\u7f6e\u652f\u6301\uff0c\u5982**\u8ba4\u8bc1\u3001\u52a0\u5bc6\u3001\u5f39\u6027\u3001\u5143\u6570\u636e\u4ea4\u6362\u3001\u538b\u7f29\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u670d\u52a1\u53d1\u73b0**\u7b49\u3002\\n\\n- \u4e0e\u4e91\u539f\u751f\u7cfb\u7edf\u8fdb\u884c\u4e86\u96c6\u6210\\n\\n> gRPC \u662f CNCF \u7684\u4e00\u90e8\u5206\uff0c\u5927\u591a\u6570\u6846\u67b6\u548c\u6280\u672f\u90fd\u5bf9 gRPC \u63d0\u4f9b\u4e86\u539f\u751f\u7684\u652f\u6301\u3002\\n>\\n> \u540c\u65f6\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u5e94\u7528\u6027\u80fd\u76d1\u63a7\u5de5\u5177\u3002\u5982 metrics\u3001tracing\u3001logging\u3002\\n\\n### 5\u3001gRPC \u7684\u52a3\u52bf\\n\\n- gRPC \u4e0d\u592a\u9002\u5408\u9762\u5411\u5916\u90e8\u7684\u670d\u52a1\\n\\n> gRPC \u670d\u52a1\u5177\u6709\u5951\u7ea6\u7cbe\u795e\u3001\u5f3a\u7c7b\u578b\u7b49\u7279\u70b9\uff0c\u4f1a\u9650\u5236\u66b4\u9732\u5916\u90e8\u670d\u52a1\u7684\u7075\u6d3b\u6027\uff0c\u540c\u65f6\u6d88\u8d39\u8005\u7684\u63a7\u5236\u6743\u4f1a\u524a\u5f31\u5f88\u591a\u3002gRPC \u7f51\u5173\u662f\u514b\u670d\u8be5\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\\n\\n- \u5927\u7684\u670d\u52a1\u53d8\u66f4\u662f\u590d\u6742\u7684\u5f00\u53d1\u6d41\u7a0b\\n\\n> gRPC \u670d\u52a1\u51fa\u73b0\u53d8\u66f4\uff0c\u9700\u8981\u91cd\u65b0\u751f\u6210\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4ee3\u7801\u3002\\n\\n- gRPC \u7cfb\u7edf\u76f8\u5bf9\u8f83\u5c0f\\n\\n> \u4e0e REST \u548c HTTP \u7b49\u534f\u8bae\u76f8\u6bd4\uff0cgRPC \u7684\u751f\u6001\u7cfb\u7edf\u76f8\u5bf9\u8f83\u5c0f\u3002"},{"id":"\u6280\u672f\u5199\u4f5c","metadata":{"permalink":"/blog/\u6280\u672f\u5199\u4f5c","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-05-25-\u6280\u672f\u5199\u4f5c.md","source":"@site/blog/2021-05-25-\u6280\u672f\u5199\u4f5c.md","title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe","description":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe","date":"2021-05-25T00:00:00.000Z","tags":[{"inline":false,"label":"\u5199\u4f5c","permalink":"/blog/tags/write","description":"\u5199\u4f5c"},{"inline":false,"label":"\u8f6f\u6280\u80fd","permalink":"/blog/tags/soft-skills","description":"\u8f6f\u6280\u80fd"}],"readingTime":8.405,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"\u6280\u672f\u5199\u4f5c","title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe","authors":["rongfu"],"tags":["\u5199\u4f5c","\u8f6f\u6280\u80fd"]},"unlisted":false,"prevItem":{"title":"gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6","permalink":"/blog/gRPC \u5b66\u4e60\u4e4b-\u521d\u7ea7\u77e5\u8bc6"},"nextItem":{"title":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","permalink":"/blog/\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224"}},"content":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe\\n\x3c!-- truncate --\x3e\\n# \u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe\\n\\n\\n### \u76ee\u6807\u8bfb\u8005\\n\\n\u200b\\t\\t\u672c\u8bfe\u7a0b\u7684\u76ee\u6807\u8bfb\u8005\u4e3a\u5df2\u5b8c\u6210[\u6280\u672f\u5199\u4f5c \u7b2c\u4e00\u8bfe](https://lengrongfu.github.io/2021/05/21/%E6%8A%80%E6%9C%AF%E5%86%99%E4%BD%9C-%E7%AC%AC%E4%B8%80%E8%8A%82/)\uff0c\u4f46\u662f\u4ecd\u7136\u6e34\u671b\u8fdb\u884c\u66f4\u591a\u5199\u4f5c\u57f9\u8bad\u7684\u4eba\u5458\u3002\u5982\u679c\u4f60\u6ca1\u6709\u63a5\u53d7\u8fc7\u4efb\u4f55\u6280\u672f\u5199\u4f5c\u7684\u57f9\u8bad\uff0c\u6700\u597d\u5148\u770b\u4e00\u4e0b\u7b2c\u4e00\u8bfe\u80fd\u5bb9\u3002\\n\\n### \u5b66\u4e60\u76ee\u6807\\n\\n\u200b\\t\\t\u8fd9\u8282\u8bfe\u4fa7\u91cd\u4e8e\u6280\u672f\u5199\u4f5c\u4e2d\u7684\u51e0\u4e2a\u4e2d\u95f4\u4e3b\u9898\uff0c\u5b66\u4e60\u5b8c\u672c\u8bfe\u7a0b\u4e4b\u540e\uff0c\u5c06\u6536\u83b7\u5982\u4e0b\u7684\u77e5\u8bc6\uff1a\\n\\n- \u4ece\u51e0\u79cd\u4e0d\u540c\u7684\u7b56\u7565\u4e2d\u9009\u62e9\u4e00\u79cd\u7f16\u5199\u7b2c\u4e00\u7a3f\u7684\u7b56\u7565\uff0c\u4ee5\u53ca\u7b2c\u4e8c\u7a3f\u3001\u7b2c\u4e09\u7a3f\u7684\u5176\u4ed6\u7b56\u7565\u3002\\n- \u4f7f\u7528\u591a\u79cd\u6280\u672f\u6765\u68c0\u6d4b\u5199\u4f5c\u4e2d\u7684\u9519\u8bef\u3002\\n- \u5b66\u4f1a\u7ec4\u7ec7\u5927\u578b\u7684\u6587\u6863\u3002\\n- \u4ecb\u7ecd\u6587\u6863\u7684\u8303\u56f4\u548c\u6240\u6709\u5148\u51b3\u6761\u4ef6\u3002\\n- \u5199\u4e0b\u6e05\u6670\u7684\u56fe\u5f62\u6807\u9898\u3002\\n- \u5728\u6280\u672f\u63d2\u56fe\u4e2d\u9009\u62e9\u9002\u5f53\u7684\u4fe1\u606f\u5bc6\u5ea6\u3002\\n- \u5c06\u8bfb\u8005\u7684\u6ce8\u610f\u529b\u96c6\u4e2d\u5728\u63d2\u56fe\u4e0a\u3002\\n- \u901a\u8fc7\u56fe\u7247\u5efa\u7acb\u4e0a\u4e0b\u6587\u3002\\n- \u6709\u6548\u7684\u4fee\u6539\u6280\u672f\u63d2\u56fe\u3002\\n- \u521b\u5efa\u6709\u7528\u3001\u51c6\u786e\u3001\u7b80\u6d01\uff0c\u6e05\u6670\uff0c\u53ef\u91cd\u7528\u548c\u6ce8\u91ca\u826f\u597d\u7684\u4ee3\u7801\uff0c\u7528\u6765\u6f14\u793a\u4e00\u7cfb\u5217\u7684\u590d\u6742\u6027\u3002\\n- \u6807\u793a\u4e0d\u540c\u7684\u6587\u6863\u7c7b\u578b\u3002\\n- \u63cf\u8ff0\u6240\u6709\u7684\u5185\u5bb9\u3002\\n- \u4f53\u8c05\u521d\u5b66\u8005\uff0c\u5e76\u4e3a\u4ed6\u4eec\u7f16\u5199\u6559\u7a0b\u3002\\n\\n\u200b\\t\\t\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u5de5\u7a0b\u5e08\u6216\u8005\u4f18\u79c0\u7684\u6280\u672f\u4f5c\u5bb6\u90fd\u9700\u8981\u82b1\u8d39\u591a\u5e74\u7684\u4e13\u6ce8\u5b9e\u8df5\uff0c\u8fd9\u95e8\u8bfe\u7a0b\u80fd\u63d0\u9ad8\u4f60\u7684\u5199\u4f5c\u6c34\u5e73\uff0c\u4f46\u4e0d\u4f1a\u7acb\u5373\u4f7f\u4f60\u6210\u4e3a\u4e00\u4e2a\u51fa\u8272\u7684\u4f5c\u5bb6\u3002\\n\\n### \u81ea\u6211\u7f16\u8f91\\n\\n\u53c2\u8003\u300a[Google\u5f00\u53d1\u5206\u6863\u98ce\u683c\u6307\u5357](https://developers.google.com/style/highlights)\u300b\\n\\n\u6362\u4f4d\u601d\u8003\uff1a\\n\\n- \u5c1d\u8bd5\u4ece\u8bfb\u8005\u7684\u89d2\u5ea6\u9605\u8bfb\u6587\u6863\uff0c\u786e\u4fdd\u6587\u6863\u76ee\u7684\u662f\u660e\u786e\u7684\uff1b\u5e76\u8003\u8651\u597d\u4e0d\u540c\u7684\u89d2\u8272\u6240\u62e5\u6709\u7684\u77e5\u8bc6\u50a8\u5907\u3002\\n- \u7136\u540e\u4ece\u4f5c\u8005\u7684\u89d2\u5ea6\u9605\u8bfb\u6587\u6863\uff0c\u786e\u4fdd\u4f60\u505a\u7684\u5047\u8bbe\u6709\u7528\uff0c\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u8d44\u6e90\u7684\u94fe\u63a5\u3002\\n- \u6700\u540e\u8bf7\u6ce8\u610f\uff0c\u8fc7\u5206\u4f9d\u8d56\u89d2\u8272\uff0c\u4f1a\u5bfc\u81f4\u6587\u6863\u8fc7\u4e8e\u72ed\u9698\uff0c\u800c\u65e0\u6cd5\u5bf9\u5927\u591a\u6570\u8bfb\u8005\u6709\u7528\u3002\\n\\n\u5927\u58f0\u8bfb\u51fa\u6765\uff1a\\n\\n- \u81ea\u5df1\u5927\u58f0\u7684\u6717\u8bfb\u6216\u8005\u4f7f\u7528\u5c4f\u5e55\u9605\u8bfb\u5668\u6717\u8bfb\uff0c\u6765\u542c\u53d6\u5c34\u5c2c\u7684\u63aa\u8f9e\uff0c\u5197\u957f\u7684\u53e5\u5b50\u6216\u5176\u4ed6\u4e0d\u81ea\u7136\u7684\u5185\u5bb9\u3002\\n\\n\u7f16\u5199\u6bcf\u4e00\u641e\u7684\u7b56\u7565\uff1a\\n\\n- \u7f16\u5199\u5b8c\u6bcf\u4e00\u4e2a\u7248\u672c\u4e4b\u540e\uff0c\u5148\u653e\u8fb9\u4e0a\u4e00\u4e2a\u5c0f\u65f6\uff0c\u7136\u540e\u518d\u56de\u6765\u9605\u8bfb\u4e00\u904d\uff0c\u603b\u4f1a\u53d1\u73b0\u6709\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u63a8\u8350\u505a\u4e09\u904d\u3002\\n\\n\u68c0\u67e5\u5199\u4f5c\u4e2d\u7684\u9519\u8bef\uff1a\\n\\n- \u9080\u8bf7\u67d0\u4eba\u67e5\u770b\u4f60\u7684\u6587\u6863\uff0c\u5e76\u7ed9\u4f60\u5177\u4f53\u7684\uff0c\u5efa\u8bbe\u6027\u610f\u89c1\u3002\\n- \u9605\u8bfb\u7684\u4eba\u4e0d\u4e00\u5b9a\u662f\u540c\u884c\uff0c\u4f46\u662f\u6700\u597d\u719f\u6089\u4f60\u9075\u5faa\u7684\u6587\u6863\u98ce\u683c\u3002\\n\\n\\n\\n### \u5199\u4e00\u4e2a\u5927\u578b\u6587\u6863\\n\\n\u4f7f\u7528\u4ee5\u4e0b\u7b56\u7565\u53ef\u4ee5\u5e2e\u52a9\u4f60\u4eec\u64b0\u5199\u5927\u578b\u6587\u6863\uff1a\\n\\n- \u9009\u62e9\u7f16\u5199\u5355\u4e2a\u5927\u578b\u6587\u6863\u6216\u4e00\u7ec4\u7b80\u77ed\u6587\u6863\u3002\\n- \u628a\u7b80\u77ed\u6587\u6863\u6574\u7406\u4e3a\u4e00\u4e2a\u5927\u578b\u6587\u6863\u3002\\n- \u7ed9\u5927\u578b\u6587\u6863\u6dfb\u52a0\u5bfc\u822a\u3002\\n- \u9010\u6b65\u66b4\u9732\u4fe1\u606f\u3002\\n\\n\u4ec0\u4e48\u65f6\u5019\u5199\u5927\u6587\u6863\uff1a\\n\\n- \u5f53\u4f60\u7684\u9605\u8bfb\u5bf9\u8c61\u662f\u521a\u5165\u95e8\u7684\u8bfb\u8005\u65f6\uff0c\u5199\u64cd\u4f5c\u6307\u5357\u3001\u5165\u95e8\u6982\u8ff0\u548c\u6982\u5ff5\u6027\u6307\u5357\u901a\u5e38\u80fd\u4ee5\u77ed\u6587\u7684\u5f62\u5f0f\u63d0\u4f9b\u66f4\u597d\u7684\u4f5c\u7528\u3002\\n- \u5f53\u5df2\u7ecf\u5bf9\u5de5\u5177\u548c\u4e3b\u9898\u6709\u4e00\u5b9a\u7ecf\u9a8c\u7684\u8bfb\u8005\uff0c\u5199\u6df1\u5165\u6559\u7a0b\uff0c\u6700\u4f73\u5b9e\u8df5\u6307\u5357\u548c\u547d\u4ee4\u884c\u53c2\u8003\u9875\u53ef\u4ee5\u4f5c\u4e3a\u66f4\u957f\u7684\u6587\u6863\u4f7f\u7528\u3002\\n- \u597d\u7684\u6559\u7a0b\u80fd\u53ef\u4ee5\u4f9d\u9760\u53d9\u8ff0\u6765\u5f15\u5bfc\u8bfb\u8005\u5b8c\u6210\u8f83\u957f\u6587\u6863\u4e2d\u7684\u4e00\u7cfb\u5217\u76f8\u5173\u4efb\u52a1\u3002\\n\\n\u5199\u8f83\u957f\u6587\u6863\u7684\u65b9\u6cd5\uff1a\\n\\n- \u521b\u5efa\u5927\u7eb2\u548c\u8d77\u8349\u5ba3\u8a00\u3002\\n- \u5b8c\u6210\u521d\u7a3f\u4e4b\u540e\uff0c\u53ef\u4ee5\u66f4\u5177\u6982\u8ff0\u548c\u7b80\u4ecb\u5bf9\u5176\u8fdb\u884c\u590d\u5ba1\u3002\\n\\n\u7f16\u5199\u5927\u7eb2\u7684\u5b9e\u7528\u6280\u5de7\uff1a\\n\\n- \u5728\u8981\u6c42\u8bfb\u8005\u6267\u884c\u4efb\u52a1\u524d\uff0c\u5148\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u6267\u884c\u6b64\u4efb\u52a1\u3002\\n- \u5c06\u5927\u7eb2\u7684\u6bcf\u4e2a\u6b65\u9aa4\u9650\u5236\u4e3a\u63cf\u8ff0\u6982\u5ff5\u6216\u5b8c\u6210\u7279\u5b9a\u4efb\u52a1\u3002\\n- \u6784\u9020\u8f6e\u5ed3\uff0c\u4ee5\u4fbf\u6587\u6863\u5728\u4e0e\u8bfb\u8005\u6700\u76f8\u5173\u65f6\u5f15\u5165\u4fe1\u606f\u3002\\n- \u5728\u8d77\u8349\u524d\uff0c\u5148\u4e0e\u8d21\u732e\u8005\u5171\u4eab\u5927\u7eb2\u5185\u5bb9\u3002\\n\\n\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u57fa\u672c\u4fe1\u606f\u6765\u4ecb\u7ecd\u6587\u6863\uff1a\\n\\n- \u8bf4\u660e\u6587\u6863\u6db5\u76d6\u7684\u5185\u5bb9\u3002\\n- \u5e0c\u671b\u8bfb\u8005\u5177\u5907\u54ea\u4e9b\u77e5\u8bc6\u50a8\u5907\u3002\\n- \u8bf4\u660e\u6587\u6863\u6ca1\u6709\u6db5\u76d6\u90a3\u4e9b\u5185\u5bb9\u3002\\n\\n\u4e3a\u6587\u6863\u6dfb\u52a0\u76ee\u5f55\uff0c\u53ef\u786e\u4fdd\u8bfb\u8005\u80fd\u5feb\u901f\u7684\u627e\u5230\u6240\u9700\u8981\u7684\u5185\u5bb9\uff0c\u6e05\u6670\u7684\u76ee\u5f55\u5305\u62ec\uff1a\\n\\n- \u7b80\u4ecb\u548c\u6458\u8981\\n- \u4e3b\u9898\u6e05\u6670\\n- \u6709\u52a9\u4e8e\u7528\u6237\u7406\u89e3\u7684\u6807\u9898\u548c\u5b50\u6807\u9898\\n- \u63d0\u793a\u7528\u6237\u5728\u76ee\u5f55\u4e2d\u7684\u4f4d\u7f6e\\n- \u53ef\u4ee5\u901a\u8fc7\u76ee\u5f55\u80fd\u8df3\u8f6c\u5230\u76f8\u5173\u4f4d\u7f6e\\n- \u6709\u4e0b\u4e00\u6b65\u5b66\u4e60\u7684\u94fe\u63a5\\n\\n\u5728\u6bcf\u4e2a\u6807\u9898\u4e0b\u90fd\u8fdb\u884c\u7b80\u77ed\u7684\u4ecb\u7ecd\uff0c\u907f\u514d\u5728\u6807\u9898\u540e\u9762\u9a6c\u4e0a\u653e\u5165\u4e0b\u4e00\u7ea7\u6807\u9898\u3002\\n\\n### \u56fe\u7247\\n\\n\u5728\u63d2\u5165\u56fe\u4e4b\u524d\u5199\u6807\u9898\u4f1a\u5f88\u6709\u5e2e\u52a9\uff0c\u7136\u540e\uff0c\u63d2\u5165\u80fd\u8bf4\u660e\u6807\u9898\u7684\u56fe\u7247\\n\\n\u56fe\u7247\u4e2d\u597d\u7684\u6807\u9898\u5e94\u8be5\u5177\u6709\u4e0b\u9762\u7684\u7279\u5f81\uff1a\\n\\n- \u4ed6\u4eec\u5f88\u7b80\u77ed\uff0c\u901a\u5e38\u53ea\u662f\u51e0\u53e5\u8bdd\u3002\\n- \u8bf4\u660e\u4e86\u91cd\u70b9\u3002\\n- \u80fd\u5438\u5f15\u8bfb\u8005\u7684\u6ce8\u610f\u529b\u3002\\n\\n\u8003\u8651\u4ee5\u4e0b\u4e09\u4e2a\u56fe\u5f62\uff0c\u6bcf\u4e2a\u56fe\u5f62\u4f7f\u7528\u76f8\u540c\u7684\u6807\u9898\u3002\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/20210521214527.png)\\n\\n**\u6807\u9898A\u3002\u5355\u94fe\u63a5\u5217\u8868\u5305\u542b\u5185\u5bb9\u548c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002**\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/20210521214546.png)\\n\\n**\u6807\u9898B\u3002\u5355\u94fe\u63a5\u5217\u8868\u5305\u542b\u5185\u5bb9\u548c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002**\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/20210521214602.png)\\n\\n**\u6807\u9898C\u3002\u5355\u94fe\u63a5\u5217\u8868\u5305\u542b\u5185\u5bb9\u548c\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002**\\n\\n\u4e0a\u8ff0\u4e09\u4e2a\u6807\u9898\u4e2d**\u6807\u9898C**\u662f\u6700\u5177\u542f\u53d1\u6027\u7684\uff0c\u6807\u9898\u6e05\u6670\u7684\u63cf\u8ff0\u4e86\u56fe\u7247\u7684\u529f\u80fd\u3002\\n\\n\\n\\n\u5982\u4e0b\u56fe\u7247\u4e2d\u7684\u4fe1\u606f\u91cf\u4e0d\u8981\u8fc7\u5927\u3002\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/20210521214727.png)\\n\\n\u5982\u4e0a\u56fe\u7684\u590d\u6742\u6027\u5c31\u4f1a\u8ba9\u5f88\u591a\u8bfb\u8005\u671b\u800c\u5374\u6b65\uff0c\u5c31\u50cf\u907f\u514d\u8fc7\u957f\u7684\u53e5\u5b50\u4e00\u6837\uff0c\u8bf7\u5c3d\u91cf\u907f\u514d\u8f83\u590d\u6742\u7684\u56fe\u7247\u3002\\n\\n\u5c06\u590d\u6742\u7684\u56fe\u7247\u53d8\u4e3a\u8fde\u8d2f\u4e14\u6709\u7528\u7684\u8bc0\u7a8d\u662f\u5c06\u590d\u6742\u7684\u7cfb\u7edf\u7ec4\u7ec7\u6210\u5b50\u7cfb\u7edf\u3002\\n\\n![](https://raw.githubusercontent.com/lengrongfu/images/master/img20210521215106.png)\\n\\n**\u56fe4.\u5206\u4e3a\u4e09\u4e2a\u5b50\u7cfb\u7edf\u7684\u590d\u6742\u7cfb\u7edf\u3002**\\n\\n\u663e\u793a\u5927\u56fe\u4e4b\u540e\u518d\u5206\u522b\u63d0\u4f9b\u6bcf\u4e2a\u5b50\u7cfb\u7edf\u7684\u56fe\u7247\u3002\\n\\n![](https://raw.githubusercontent.com/lengrongfu/images/master/img20210521215224.png)\\n\\n**\u56fe5.\u590d\u6742\u7cfb\u7edf\u7684\u4e00\u4e2a\u5b50\u7cfb\u7edf\u7684\u6269\u5c55\u7ec6\u8282\u3002**\\n\\n\\n\\n\u753b\u56fe\u5de5\u5177\\n\\n- [Google\u7ed8\u56fe](https://drawings.google.com/)\\n- [diagrams.net](https://diagrams.net/)\\n- [lucidchart](https://www.lucidchart.com/pages/)\\n\\n\\n\\n### \u521b\u5efa\u793a\u4f8b\u4ee3\u7801\\n\\n\u4ee3\u7801\u4ecd\u7136\u662f\u6280\u672f\u4eba\u6700\u559c\u6b22\u8bfb\u7684\uff0c\u597d\u7684\u4ee3\u7801\u901a\u5e38\u662f\u6700\u597d\u7684\u6587\u6863\u3002\\n\\n\u597d\u7684\u4ee3\u7801\u6837\u672c\u662f\u6b63\u786e\u3001\u7b80\u6d01\uff0c\u4f60\u7684\u8bfb\u8005\u53ef\u4ee5\u5feb\u901f\u7406\u89e3\u5b83\u4eec\uff0c\u5e76\u80fd\u4ee5\u6700\u5c0f\u7684\u4ee3\u4ef7\u91cd\u590d\u4f7f\u7528\u5b83\u4eec\u3002\\n\\n#### \u6b63\u786e\\n\\n\u793a\u4f8b\u4ee3\u7801\u5e94\u8be5\u6ee1\u8db3\u4e0b\u9762\u6761\u4ef6\uff1a\\n\\n- \u4ee3\u7801\u6784\u5efa\u6ca1\u6709\u9519\u8bef\u3002\\n- \u80fd\u6309\u8981\u6c42\u8fdb\u884c\u6267\u884c\u3002\\n- \u8981\u505a\u597d\u751f\u4ea7\u4f7f\u7528\u7684\u51c6\u5907\uff0c\u6bd4\u5982\uff0c\u4ee3\u7801\u4e0d\u80fd\u6709\u5b89\u5168\u6f0f\u6d1e\u3002\\n- \u9075\u5faa\u8bed\u8a00\u7684\u7ea6\u5b9a\u3002\\n\\n#### \u7b80\u6d01\\n\\n\u200b\\t    \u793a\u4f8b\u4ee3\u7801\u5e94\u8be5\u7b80\u77ed\uff0c\u4ec5\u5305\u62ec\u57fa\u672c\u7ec4\u4ef6\uff0c\u4e0d\u76f8\u5173\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u4f7f\u4f60\u7684\u8bfb\u8005\u5206\u6563\u6ce8\u610f\u529b\u3002\u4f46\u662f\uff0c\u4e5f\u4e0d\u8981\u7528\u9519\u8bef\u7684\u505a\u6cd5\u6765\u7f29\u77ed\u4f60\u7684\u4ee3\u7801\uff0c\u5728\u6b63\u786e\u548c\u7b80\u77ed\u4e4b\u95f4\uff0c\u6211\u4eec\u66f4\u770b\u91cd\u6b63\u786e\u6027\u3002"},{"id":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","metadata":{"permalink":"/blog/\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-05-24-\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224.md","source":"@site/blog/2021-05-24-\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224.md","title":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","description":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224\uff1f","date":"2021-05-24T00:00:00.000Z","tags":[{"inline":false,"label":"\u8bbe\u8ba1\u6a21\u5f0f","permalink":"/blog/tags/desgin-model","description":"\u8bbe\u8ba1\u6a21\u5f0f"}],"readingTime":3.77,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","title":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","authors":["rongfu"],"tags":["\u8bbe\u8ba1\u6a21\u5f0f"]},"unlisted":false,"prevItem":{"title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e8c\u8bfe","permalink":"/blog/\u6280\u672f\u5199\u4f5c"},"nextItem":{"title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e00\u8bfe","permalink":"/blog/\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8bfe"}},"content":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224\uff1f\\n\x3c!-- truncate --\x3e\\n\\n## \u4ee3\u7801\u8d28\u91cf\\"\u597d\\"\u548c\\"\u574f\\"\u6307\u4ec0\u4e48\uff1f\\n\\n\\"\u597d\\"\u53ef\u4ee5\u8868\u793a\u4ee3\u7801\u7684\u8d28\u91cf\u9ad8\uff0c\\"\u574f\\"\u8868\u793a\u4ee3\u7801\u7684\u8d28\u91cf\u4f4e\u3002\\n\\n## \u4ee3\u7801\u8d28\u91cf\\"\u9ad8\\"\u53c8\u662f\u6307\u4ec0\u4e48\uff1f\\n\\n\u4ee3\u7801\u8d28\u91cf\u9ad8\u6307\u4ee3\u7801\uff1a\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u8bfb\u6027\u3001\u53ef\u6269\u5c55\u6027\u3001\u7075\u6d3b\u6027\u3001\u7b80\u6d01\u6027\u3001\u53ef\u590d\u7528\u3001\u53ef\u6d4b\u8bd5\u6027\u3002\u5176\u4e2d**\u53ef\u7ef4\u62a4\u6027\u3001\u53ef\u8bfb\u6027\u3001\u53ef\u6269\u5c55\u6027**\u662f\u6700\u91cd\u8981\u7684\u4e09\u4e2a\u6307\u6807\u3002\\n\\n### \u53ef\u7ef4\u62a4\u6027\\n\\n\u53ef\u7ef4\u62a4\u6027\u662f\u4e00\u4e2a\u4e3b\u89c2\u6027\u5f88\u5f3a\u7684\u8bc4\u5224\u6807\u51c6\uff0c\u56e0\u4e3a\u719f\u6089\u7cfb\u7edf\u7684\u8d44\u6df1\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a\u4efb\u52a1\u6613\u7ef4\u62a4\uff0c\u4f46\u662f\u8d44\u5386\u6d45\u7684\u5de5\u7a0b\u5e08\u5c31\u4f1a\u8ba4\u4e3a\u96be\u7ef4\u62a4\u3002\\n\\n- \u6240\u8c13\u53ef\u7ef4\u62a4\u6027\u5c31\u662f\u6307\uff0c\u5728\u4e0d\u7834\u574f\u539f\u6709\u4ee3\u7801\u8bbe\u8ba1\u3001\u4e0d\u5f15\u5165\u65b0\u7684`BUG`\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u5feb\u901f\u5730\u4fee\u6539\u6216\u8005\u6dfb\u52a0\u4ee3\u7801\u3002\\n- \u6240\u8c13\u4ee3\u7801\u4e0d\u6613\u7ef4\u62a4\u5c31\u662f\u503c\uff0c\u4fee\u6539\u6216\u8005\u6dfb\u52a0\u4ee3\u7801\u9700\u8981\u5192\u7740\u6781\u5927\u7684\u5f15\u5165\u65b0`bug`\u7684\u98ce\u9669\uff0c\u5e76\u4e14\u9700\u8981\u82b1\u8d39\u5f88\u957f\u7684\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u3002\\n\\n### \u53ef\u8bfb\u6027\\n\\n\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u4ece\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u6765\u8fdb\u884c\u8bc4\u4ef7\u3002\\n\\n- \u662f\u5426\u7b26\u5408\u7f16\u7801\u89c4\u8303\u3001\u547d\u540d\u662f\u5426\u8fbe\u610f\u3001\u6ce8\u91ca\u662f\u5426\u8be6\u5c3d\u3001\u51fd\u6570\u662f\u5426\u957f\u77ed\u5408\u9002\u3001\u6a21\u5757\u5212\u5206\u662f\u5426\u6e05\u6670\u3001\u662f\u5426\u7b26\u5408\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7b49\u3002\\n\\n\u4f46\u662f\u6700\u7b80\u5355\u7684\u8bc4\u4ef7\u6807\u51c6\u5c31\u662f\u8ba9\u540c\u4e8b\u6765\u505a`Code Receive`,\u5982\u679c\u540c\u4e8b\u80fd\u591f\u8f7b\u677e\u7684\u8bfb\u61c2\u4f60\u7684\u4ee3\u7801\uff0c\u90a3\u5c31\u662f\u53ef\u8bfb\u6027\u5f88\u597d\uff0c\u53cd\u4e4b\u5c31\u662f\u9700\u8981\u6539\u5584\u4ee3\u7801\u4e86\u3002\\n\\n### \u53ef\u6269\u5c55\u6027\\n\\n- \u53ef\u6269\u5c55\u6027\u8868\u793a\uff0c\u6211\u4eec\u5728\u4e0d\u4fee\u6539\u6216\u5c11\u91cf\u4fee\u6539\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u6269\u5c55\u7684\u65b9\u5f0f\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u4ee3\u7801\u3002\\n\\n### \u7075\u6d3b\u6027\\n\\n\u4ee3\u7801\u7075\u6d3b\u6027\u4e3b\u8981\u63d0\u73b0\u5728\u6613\u6269\u5c55\u65b9\u9762\u3002\\n\\n### \u7b80\u6d01\u6027\\n\\n\u6211\u4eec\u8981\u9075\u4ece`KISS`\u539f\u5219\uff0c\u4ee3\u7801\u8981\u5c3d\u53ef\u80fd\u7684\u7b80\u5355\uff1b\u4f46\u662f**\u601d\u4ece\u6df1\u800c\u884c\u4ece\u7b80\uff0c\u771f\u6b63\u7684\u9ad8\u624b\u80fd\u4e91\u6de1\u98ce\u8f7b\u5730\u7528\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u89e3\u51b3\u6700\u590d\u6742\u7684\u95ee\u9898\u3002\u8fd9\u4e5f\u662f\u4e00\u4e2a\u7f16\u7a0b\u8001\u624b\u8ddf\u7f16\u7a0b\u65b0\u624b\u7684\u672c\u8d28\u533a\u522b\u4e4b\u4e00\u3002**\\n\\n### \u53ef\u590d\u7528\u6027\\n\\n- \u53ef\u590d\u7528\u6027\u662f\u5f88\u591a\u8bbe\u8ba1\u6a21\u5f0f\u3001\u601d\u60f3\u3001\u539f\u5219\u6240\u8981\u8fbe\u5230\u7684\u6700\u7ec8\u6548\u679c\u3002\\n\\n### \u53ef\u6d4b\u8bd5\u6027\\n\\n- \u53ef\u6d4b\u8bd5\u5c31\u80fd\u4ece\u4fa7\u9762\u4e0a\u975e\u5e38\u51c6\u786e\u5730\u53cd\u5e94\u4ee3\u7801\u8d28\u91cf\u7684\u597d\u574f\u3002\\n\\n\u8981\u5199\u51fa\u6ee1\u8db3\u4e0a\u8ff0\u8bc4\u4ef7\u6807\u51c6\u7684\u9ad8\u8d28\u91cf\u4ee3\u7801\uff0c\u6211\u4eec\u9700\u8981\u638c\u63e1\u4e00\u4e9b\u66f4\u52a0\u7ec6\u5316\u3001\u66f4\u52a0\u80fd\u843d\u5730\u7684\u7f16\u7a0b\u65b9\u6cd5\u8bba\uff0c\u5305\u62ec\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u601d\u60f3\u3001\u8bbe\u8ba1\u539f\u5219\u3001\u8bbe\u8ba1\u6a21\u5f0f\u3001\u7f16\u7801\u89c4\u8303\u3001\u91cd\u6784\u6280\u5de7\u7b49\u3002\\n\\n\u5982\uff1a\\n\\n- \u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u7ee7\u627f\u3001\u591a\u6001\u80fd\u8ba9\u6211\u4eec\u5199\u51fa\u53ef\u590d\u7528\u7684\u4ee3\u7801\uff1b\\n- \u7f16\u7801\u89c4\u8303\u80fd\u8ba9\u6211\u4eec\u5199\u51fa\u53ef\u8bfb\u6027\u597d\u7684\u4ee3\u7801\u3002\\n- \u8bbe\u8ba1\u539f\u5219\u4e2d\u7684\u5355\u4e00\u804c\u8d23\u3001DRY\u3001\u57fa\u4e8e\u63a5\u53e3\u800c\u975e\u5b9e\u73b0\u3001\u91cc\u6c0f\u66ff\u6362\u539f\u5219\u7b49\u53ef\u4ee5\u5199\u51fa\u6613\u590d\u7528\u3001\u7075\u6d3b\u3001\u53ef\u8bfb\u6027\u597d\u3001\u6613\u6269\u5c55\u3001\u6613\u7ef4\u62a4\u7684\u4ee3\u7801\uff1b\\n- \u8bbe\u8ba1\u6a21\u5f0f\u53ef\u4ee5\u5199\u51fa\u6613\u6269\u5c55\u7684\u4ee3\u7801\u3002\\n- \u6301\u7eed\u91cd\u6784\u53ef\u4ee5\u65f6\u523b\u4fdd\u6301\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002"},{"id":"\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8bfe","metadata":{"permalink":"/blog/\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8bfe","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-05-21-\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8282.md","source":"@site/blog/2021-05-21-\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8282.md","title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e00\u8bfe","description":"\u672c\u8bfe\u7a0b\u662f\u6280\u672f\u5199\u4f5c\u4e2d\u7684\u7b2c\u4e00\u8bfe\uff0c\u4e3b\u8981\u5b66\u4e60\u6280\u672f\u5199\u4f5c\u7684\u5173\u952e\u57fa\u7840\uff0c\u5728\u5b66\u6821\u4efb\u4f55\u5176\u4ed6\u8bfe\u7a0b\u4e4b\u524d\uff0c\u8bf7\u5148\u5b66\u4e60\u672c\u8bfe\u7a0b\u3002","date":"2021-05-21T00:00:00.000Z","tags":[{"inline":false,"label":"\u5199\u4f5c","permalink":"/blog/tags/write","description":"\u5199\u4f5c"},{"inline":false,"label":"\u8f6f\u6280\u80fd","permalink":"/blog/tags/soft-skills","description":"\u8f6f\u6280\u80fd"}],"readingTime":17.34,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8bfe","title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e00\u8bfe","authors":["rongfu"],"tags":["\u5199\u4f5c","\u8f6f\u6280\u80fd"]},"unlisted":false,"prevItem":{"title":"\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224","permalink":"/blog/\u4ee3\u7801\u8d28\u91cf\u597d\u574f\u5982\u4f55\u8bc4\u5224"},"nextItem":{"title":"2020\u5e74\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\uff1a\u5206\u5e03\u5f0f\u4e91","permalink":"/blog/\u5206\u5e03\u5f0f\u4e91"}},"content":"\u672c\u8bfe\u7a0b\u662f\u6280\u672f\u5199\u4f5c\u4e2d\u7684\u7b2c\u4e00\u8bfe\uff0c\u4e3b\u8981\u5b66\u4e60\u6280\u672f\u5199\u4f5c\u7684\u5173\u952e\u57fa\u7840\uff0c\u5728\u5b66\u6821\u4efb\u4f55\u5176\u4ed6\u8bfe\u7a0b\u4e4b\u524d\uff0c\u8bf7\u5148\u5b66\u4e60\u672c\u8bfe\u7a0b\u3002\\n\x3c!-- truncate --\x3e\\n\\n> \u672c\u6587\u662f\u5b66\u4e60[`Google`\u6280\u672f\u5199\u4f5c\u8bfe\u7a0b](https://developers.google.com/tech-writing)\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u5b83\u8fd9\u4e2a\u8bfe\u7a0b\u4e3b\u8981\u7528\u4e8e\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u505a\u597d\u6280\u672f\u5199\u4f5c\uff0c\u4e86\u89e3\u5982\u4f55\u8ba1\u5212\u548c\u7f16\u5199\u6280\u672f\u6587\u6863\uff1b\\n\\n\\n\\n\u672c\u8bfe\u7a0b\u662f\u6280\u672f\u5199\u4f5c\u4e2d\u7684\u7b2c\u4e00\u8bfe\uff0c\u4e3b\u8981\u5b66\u4e60\u6280\u672f\u5199\u4f5c\u7684\u5173\u952e\u57fa\u7840\uff0c\u5728\u5b66\u6821\u4efb\u4f55\u5176\u4ed6\u8bfe\u7a0b\u4e4b\u524d\uff0c\u8bf7\u5148\u5b66\u4e60\u672c\u8bfe\u7a0b\u3002\\n\\n\\n\\n### \u5b66\u4e60\u76ee\u6807\\n\\n\u200b\\t\\t\u9996\u5148\u6211\u4eec\u786e\u5b9a\u5b66\u4e60\u7684\u76ee\u6807\uff0c\u77e5\u9053\u5b66\u4e60\u5b8c\u672c\u8bfe\u7a0b\u4e4b\u540e\u53ef\u4ee5\u5f97\u5230\u4ec0\u4e48\uff1b\u672c\u8bfe\u7a0b\u6559\u6211\u4eec\u6280\u672f\u534f\u4f5c\u7684\u57fa\u7840\uff0c\u5b8c\u6210\u672c\u8bfe\u7a0b\u540e\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5982\u4f55\u6267\u884c\u5982\u4e0b\u7684\u64cd\u4f5c\u4e86\u3002\\n\\n- \u59cb\u7ec8\u4f7f\u7528\u4e13\u4e1a\u672f\u8bed\uff08\u5305\u62ec\u7f29\u5199\u8bcd\u548c\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\uff09\uff1b\u6bd4\u5982`K8s`\u4e2d\u7684\u6700\u5c0f\u8c03\u5ea6\u5355\u5143`Pod`\u3002\\n- \u8bc6\u522b\u5e76\u5c3d\u91cf\u51cf\u5c11\u4f7f\u7528\u4ee3\u8bcd\u7684\u53e5\u5b50\u3002\\n- \u533a\u5206\u4e3b\u52a8\u8bed\u53e5\u548c\u88ab\u52a8\u8bed\u53e5\u3002\\n- \u786e\u5b9a\u4e3b\u52a8\u8bed\u53e5\u4f18\u4e8e\u88ab\u52a8\u8bed\u53e5\u7684\u4e09\u79cd\u65b9\u5f0f\u3002\\n- \u5236\u5b9a\u81f3\u5c11\u4e09\u79cd\u5f62\u5f0f\uff0c\u4f7f\u53e5\u5b50\u66f4\u6e05\u6670\uff0c\u66f4\u52a0\u5f15\u4eba\u5165\u80dc\u3002\\n- \u5236\u5b9a\u81f3\u5c11\u56db\u79cd\u7f29\u77ed\u53e5\u5b50\u7684\u7b56\u7565\u3002\\n- \u4e86\u89e3\u9879\u76ee\u7b26\u53f7\u5217\u8868\u548c\u7f16\u53f7\u5217\u8868\u4e4b\u95f4\u7684\u533a\u522b\u3002\\n- \u521b\u5efa\u6709\u7528\u7684\u5217\u8868\u3002\\n- \u4e3a\u6bb5\u843d\u521b\u5efa\u6709\u6548\u7684\u4e3b\u8981\u53e5\u5b50\u3002\\n- \u5c06\u6bcf\u4e2a\u6bb5\u843d\u96c6\u4e2d\u5728\u4e00\u4e2a\u4e3b\u9898\u4e0a\u3002\\n- \u5728\u6bcf\u4e2a\u6587\u6863\u7684\u5f00\u5934\u8bf4\u660e\u8981\u70b9\u3002\\n- \u786e\u5b9a\u4f60\u7684\u76ee\u6807\u53d7\u4f17\u3002\\n- \u786e\u5b9a\u4f60\u7684\u76ee\u6807\u53d7\u4f17\u5df2\u77e5\u4ec0\u4e48\u4ee5\u53ca\u9700\u8981\u5b66\u4e60\u4ec0\u4e48\u3002\\n- \u4e86\u89e3\u77e5\u8bc6\u7684\u707e\u96be\u3002\\n- \u8bc6\u522b\u548c\u4fee\u8ba2\u6210\u8bed\u3002\\n- \u8bf4\u660e\u6587\u6863\u7684\u8303\u56f4\u76ee\u6807\u548c\u53d7\u4f17\u3002\\n- \u5c06\u8f83\u957f\u7684\u4e3b\u9898\u5206\u4e3a\u9002\u5f53\u7684\u90e8\u5206\u3002\\n- \u771f\u786e\u4f7f\u7528\u6807\u70b9\u7b26\u53f7\uff0c\u5305\u62ec\u62ec\u53f7\u3001\u5192\u53f7\u3001\u7834\u6298\u53f7\u548c\u5206\u53f7\u3002\\n- \u5728`Markdown`\u4e2d\u53d1\u5c55\u521d\u5b66\u8005\u7684\u80fd\u529b\u3002\\n\\n\\n\\n\u200b\\t\\t\u6210\u4e3a\u4e00\u540d\u4f18\u79c0\u7684\u5de5\u7a0b\u5e08\u548c\u4e00\u540d\u51fa\u8272\u7684\u6280\u672f\u4f5c\u5bb6\uff0c\u9700\u8981\u82b1\u8d39\u591a\u5e74\u7684\u4e13\u6ce8\u5b9e\u8df5\uff0c\u672c\u8bfe\u7a0b\u5c06\u63d0\u9ad8\u6211\u4eec\u7684\u6280\u672f\u5199\u4f5c\u6c34\u5e73\uff0c\u4f46\u4e0d\u4f1a\u4f7f\u6211\u4eec\u53d8\u6210\u4e00\u540d\u51fa\u8272\u7684\u6280\u672f\u4f5c\u5bb6\u3002\\n\\n\\n\\n### \u8db3\u591f\u7684\u8bed\u6cd5\\n\\n\u8fd9\u91cc\u4e3b\u8981\u662f\u4ecb\u7ecd\u4e0e\u672c\u8bfe\u7a0b\u76f8\u5173\u7684\u8bcd\u6027\u3002\\n\\n|  \u8bcd\u6027  | \u5b9a\u4e49                                   | \u4f8b\u5b50                                             |\\n| :----: | -------------------------------------- | :----------------------------------------------- |\\n|  \u540d\u8bcd  | \u4eba\uff0c\u5730\u65b9\uff0c\u6982\u5ff5\u6216\u4e8b\u7269                   | **\u5c71\u59c6**\u8dd1**\u6bd4\u8d5b**\u3002                             |\\n|  \u4ee3\u8bcd  | \u66ff\u6362\u53e6\u4e00\u4e2a\u540d\u8bcd\uff08\u6216\u66f4\u5927\u7ed3\u6784\uff09\u7684\u540d\u8bcd     | \u5c71\u59c6\u53c2\u52a0\u6bd4\u8d5b\u3002**\u4ed6**\u559c\u6b22\u7ade\u4e89\u3002                   |\\n| \u5f62\u5bb9\u8bcd | \u4fee\u9970\u540d\u8bcd\u7684\u5355\u8bcd\u6216\u77ed\u8bed                   | \u5c71\u59c6\u7a7f**\u84dd\u8272\u7684**\u978b\u5b50\u3002                           |\\n|  \u52a8\u8bcd  | \u4e00\u4e2a\u52a8\u4f5c\u8bcd\u6216\u77ed\u8bed                       | \u5c71\u59c6**\u8dd1**\u6bd4\u8d5b\u3002                                 |\\n|  \u526f\u8bcd  | \u4fee\u9970\u52a8\u8bcd\uff0c\u5f62\u5bb9\u8bcd\u6216\u5176\u4ed6\u526f\u8bcd\u7684\u5355\u8bcd\u6216\u77ed\u8bed | \u5c71\u59c6\u8fd0\u884c**\u7f13\u6162**\u3002                               |\\n|  \u4ecb\u8bcd  | \u6307\u5b9a\u4e24\u4e2a\u540d\u8bcd\u7684\u4f4d\u7f6e\u5173\u7cfb\u7684\u5355\u8bcd\u6216\u77ed\u8bed     | \u5c71\u59c6\u7684\u8fd0\u52a8\u978b\u5f88\u5c11**\u5728**\u4ed6\u7684\u67b6\u5b50\u4e0a\u3002               |\\n|  \u8fde\u8bcd  | \u8fde\u63a5\u4e24\u4e2a\u540d\u8bcd\u6216\u77ed\u8bed\u7684\u5355\u8bcd               | \u5c71\u59c6\u7684\u5956\u676f**\u548c**\u7f0e\u5e26\u53ea\u5b58\u5728\u4e8e\u4ed6\u7684\u60f3\u8c61\u4e2d\u3002         |\\n|  \u8fc7\u6e21  | \u8fde\u63a5\u4e24\u4e2a\u53e5\u5b50\u7684\u5355\u8bcd\u6216\u77ed\u8bed               | \u5c71\u59c6\u6bcf\u5468\u53c2\u52a0\u6bd4\u8d5b\u3002**\u4f46\u662f**\uff0c\u4ed6\u5f31\u52bf\u5730\u5b8c\u6210\u4e86\u6bd4\u8d5b\u3002 |\\n\\n#### \u540d\u8bcd\\n\\n\u540d\u6b21\u4ee3\u8868\u4eba\u3001\u5730\u65b9\u6216\u4e8b\u52a1\u3002\u6731\u8fea\u3001\u5357\u6781\u6d32\u548c\u9524\u5b50\u90fd\u662f\u540d\u8bcd\uff0c\u65e0\u5f62\u7684\u6982\u5ff5\uff08\u4f8b\u5982**\u5065\u58ee\u6027** \u548c**\u5b8c\u7f8e\u6027**\uff09\u4e5f\u662f\u540d\u8bcd\u3002\\n\\n> \u5728**\u6846\u67b6\u4e2d**\uff0c**\u5bf9\u8c61**\u5fc5\u987b\u590d\u5236\u8be5**\u5bf9\u8c61**\u8981\u66f4\u6539\u7684\u6240\u6709\u57fa\u7840**\u503c**\u3002\u8be5**PROTOS**\u7684**\u4ee3\u7801\u5e93**\u662f\u5de8\u5927\u7684\uff0c\u6240\u4ee5\u590d\u5236\u7684**PROTOS**\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u6602\u8d35\u3002\\n\\n\u5728\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u628a\u7c7b\u548c\u53d8\u91cf\u89c6\u4e3a\u540d\u8bcd\u3002\\n\\n**\u7ec3\u4e60**\\n\\n\u627e\u51fa\u4e0b\u9762\u6bb5\u843d\u4e2d\u8bc6\u522b\u516d\u4e2a\u540d\u8bcd\\n\\n> C\u4f7f\u7a0b\u5e8f\u5458\u80fd\u591f\u63a7\u5236\u6307\u9488\u548c\u5185\u5b58\u3002\u5f3a\u5927\u7684\u529f\u80fd\u5e26\u6765\u5de8\u5927\u7684\u8d23\u4efb\u3002\\n\\n**\u7b54\u6848**\\n\\n> C\u3001\u6307\u9488\u3001\u5185\u5b58\u3001\u7a0b\u5e8f\u5458\u3001\u529f\u80fd\u3001\u8d23\u4efb\u3002\\n\\n\\n\\n#### \u4ee3\u8bcd\\n\\n\u4ee3\u8bcd\u662f\u4e00\u4e2a\u95f4\u63a5\u5c42\uff0c\u5b83\u6307\u5411\u6216\u66ff\u4ee3\u4e86\u5176\u4ed6\u540d\u8bcd\u6216\u53e5\u5b50\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4ee5\u4e0b\u4e24\u4e2a\u53e5\u5b50\uff1a\\n\\n> \u73cd\u59ae\u7279\uff08Janet\uff09\u7f16\u5199\u4e86\u51fa\u8272\u7684\u4ee3\u7801\u3002**\u5979**\u662f\u9ad8\u7ea7\u5de5\u7a0b\u5e08\u3002\\n\\n\u5728\u524d\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u7b2c\u4e00\u53e5\u8bdd\u5c06**Janet**\u5efa\u7acb\u4e3a\u540d\u8bcd\u3002\u7b2c\u4e8c\u53e5\u8bdd\u7528\u4ee3\u8bcd**\u5979**\u4ee3\u66ff\u540d\u8bcd**\u73cd\u59ae\u7279**\u3002\\n\\n**\u7ec3\u4e60**\\n\\n\u5728\u4ee5\u4e0b\u6bb5\u843d\u4e2d\u786e\u5b9a\u4e09\u4e2a\u4ee3\u8bcd\uff1a\\n\\n> \u81ea\u52a9\u9910\u5385\u7684\u7279\u8272\u662f\u5728\u5410\u53f8\u4e0a\u6492\u4e0a\u8170\u679c\u3001\u9ec4\u6cb9\u548c\u679c\u9171\u3002\u5458\u5de5\u4eec\u53d1\u73b0\u5b83\u5f88\u68d2\uff0c\u5e0c\u671b\u4ed6\u4eec\u6bcf\u5929\u90fd\u80fd\u5403\u5b83\u3002\\n\\n**\u7b54\u6848**\\n\\n> \u5b83\u5f88\u68d2: \u5b83\u4ee3\u6307\u524d\u9762\u63cf\u8ff0\u7684\u5728\u5410\u53f8\u4e0a\u6492\u4e0a\u8170\u679c\u3001\u9ec4\u6cb9\u548c\u679c\u9171\u7684\u98df\u7269\u3002\\n>\\n> \u4ed6\u4eec\u6bcf\u5929\u5403\uff1a\u4ed6\u4eec\u6307\u4ee3\u524d\u9762\u7684\u5458\u5de5\u3002\\n>\\n> \u5403\u5b83\uff1a\u5b83\u4ee3\u6307\u524d\u9762\u63cf\u8ff0\u7684\u98df\u7269\\n\\n#### \u52a8\u8bcd\\n\\n\u52a8\u8bcd\u662f\u4e00\u4e2a\u52a8\u4f5c\u8bcd\u6216\u77ed\u8bed\u3002\u5f53\u60a8\u8981\u8868\u793a\u4e24\u4e2a\u540d\u8bcd\uff08\u4e00\u4e2a\u6f14\u5458\u548c\u4e00\u4e2a\u76ee\u6807\uff09\u4e4b\u95f4\u7684\u5173\u7cfb\u65f6\uff0c\u8be5\u52a8\u8bcd\u4f1a\u8d77\u4f5c\u7528\u3002\u52a8\u8bcd\u6807\u8bc6\u6f14\u5458\u5bf9\u76ee\u6807\u7684\u4f5c\u7528\u3002\\n\\n\u6bcf\u4e2a\u53e5\u5b50\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u52a8\u8bcd\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u6bcf\u4e2a\u53e5\u5b50\u5305\u542b\u4e00\u4e2a\u52a8\u8bcd\uff1a\\n\\n- \u9152\u4e95**\u66f4\u559c\u6b22**\u610f\u5927\u5229\u9762\u3002\\n- \u91cc\u514b**\u559c\u6b22**\u5927\u6d77\u3002\\n- \u84dd\u7cbe\u7075**\u662f**\u84dd\u8272\u7684\u3002\\n- \u6770\u897f**\u60a3\u6709**\u8fc7\u654f\u75c7\u3002\\n\\n**\u7ec3\u4e60**\\n\\n\u5728\u4e0b\u9762\u53e5\u5b50\u4e2d\u627e\u5230\u52a8\u8bcd\uff1a\\n\\n> \u8428\u66fc\u838e\uff08Samantha\uff09\u6b63\u5728\u7528C ++\u7f16\u5199\u201c\u6597\u725b\u884c\u52a8\u201d\u3002\u8be5\u9879\u76ee\u76ee\u524d\u6d88\u8017\u8d85\u8fc780,000\u884c\u4ee3\u7801\u3002\u5979\u4ee5\u524d\u4f7f\u7528\u8fc7Python\uff0c\u4f46\u6700\u8fd1\u5f00\u59cb\u4f7f\u7528C ++\u3002\u8428\u66fc\u838e\uff08Samantha\uff09\u9886\u5bfc\u7740\u4e00\u4e2a\u7531\u56db\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7ec4\u6210\u7684\u56e2\u961f\uff0c\u8be5\u56e2\u961f\u5c06\u5728\u4e0b\u4e2a\u5b63\u5ea6\u589e\u957f\u5230\u516d\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\\n\\n**\u7b54\u6848**\\n\\n> \u7f16\u5199\u3001\u6d88\u8017\u3001\u9886\u5bfc\u3001\u589e\u957f\\n\\n#### \u5f62\u5bb9\u8bcd\u548c\u526f\u8bcd\\n\\n\u5f62\u5bb9\u8bcd\u4fee\u9970\u540d\u8bcd\u3002\\n\\n- \u6c64\u59c6\u559c\u6b22**\u7ea2**\u6c14\u7403\u3002\u4ed6\u51c6\u5907**\u7f8e\u5473\u7684**\u98df\u7269\u3002\u4ed6\u4fee\u590d\u4e86 **\u516b\u4e2a**\u9519\u8bef\u3002\\n\\n\u526f\u8bcd\u4fee\u9970\u52a8\u8bcd\u3002\\n\\n- Jane\u53ef\u4ee5**\u6709\u6548\u5730**\u4fee\u590d\u9519\u8bef\u3002\\n\\n**\u7ec3\u4e60**\\n\\n\u5728\u4ee5\u4e0b\u6bb5\u843d\u4e2d\u786e\u5b9a\u56db\u4e2a\u5f62\u5bb9\u8bcd\u3002\\n\\n> \u5bf9\u4e8e\u6709\u624d\u534e\u7684\u4eba\u6765\u8bf4\uff0c\u5de5\u7a0b\u662f\u4e00\u4e2a\u4f1f\u5927\u7684\u4e8b\u4e1a\u3002\u6211\u8ba4\u8bc6\u4e00\u4f4d\u806a\u660e\u7684\u5de5\u7a0b\u5e08\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u77e5\u8bc6\u6027\u7684\u5de5\u4f5c\u4e2d\u8131\u9896\u800c\u51fa\u3002\\n\\n**\u7b54\u6848**\\n\\n> \u624d\u534e\u3001\u806a\u660e\u3001\u77e5\u8bc6\u6027\u3001\u4f1f\u5927\\n\\n#### \u8fde\u8bcd\u548c\u8fc7\u6e21\\n\\n\u8fde\u8bcd\u8fde\u63a5\u77ed\u8bed\u6216\u540d\u8bcd\u4e2d\u7684\u53e5\u5b50\uff0c\u8fc7\u6e21\u5c06\u53e5\u5b50\u672c\u8eab\u8fde\u8d77\u6765\u3002\\n\\n\u6700\u91cd\u8981\u7684\u8fde\u63a5\u8bcd\u5982\u4e0b\uff1a\\n\\n- \u548c\\n- \u4f46\\n- \u6216\u8005\\n\\n\u6280\u672f\u5199\u4f5c\u4e2d\u6700\u91cd\u8981\u7684\u8fc7\u6e21\u8bcd\u5982\u4e0b\uff1a\\n\\n- \u7136\u800c\\n- \u6240\u4ee5\\n- \u4f8b\u5982\\n\\n**\u7ec3\u4e60**\\n\\n> \u901a\u5e38\uff0cBarbara\u5728\u7f16\u5199\u7b2c\u4e00\u884c\u4ee3\u7801\u4e4b\u524d\u4f1a\u7814\u7a76\u95ee\u9898\u5f88\u957f\u65f6\u95f4\u3002_____________\uff0c\u524d\u51e0\u5929\u5979\u7a81\u7136\u53d7\u5230\u542f\u53d1\u65f6\uff0c\u81ea\u53d1\u5730\u7f16\u7801\u4e86\u4e00\u79cd\u65b9\u6cd5\u3002\\n\\n**\u7b54\u6848**\\n\\n> \u7136\u800c\\n\\n### \u5355\u8bcd\\n\\n#### \u5b9a\u4e49\u65b0\u672f\u8bed\\n\\n\u5728\u7f16\u5199\u65f6\uff0c\u8bc6\u522b\u76ee\u6807\u53d7\u4f17\u53ef\u80fd\u4e0d\u719f\u6089\u7684\u672f\u8bed\uff0c\u5f53\u8bc6\u522b\u51fa\u6765\u4e4b\u540e\uff0c\u9700\u8981\u91c7\u53d6\u4e0b\u9762\u4e24\u79cd\u63aa\u65bd\uff1a\\n\\n- \u5982\u679c\u8be5\u672f\u8bed\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf7\u94fe\u63a5\u5230\u73b0\u6709\u7684\u826f\u597d\u8bf4\u660e\u3002\uff08\u4e0d\u8981\u91cd\u65b0\u53d1\u660e\u8f6e\u5b50\u3002\uff09\\n- \u5982\u679c\u662f\u65b0\u5f15\u5165\u7684\u672f\u8bed\uff0c\u9700\u8981\u5b9a\u4e49\u5b83\uff0c\u5982\u679c\u5f15\u5165\u591a\u4e2a\u672f\u8bed\uff0c\u8bf7\u5b9a\u4e49\u6536\u96c6\u5230\u8bcd\u6c47\u8868\u4e2d\u3002\\n\\n#### \u59cb\u7ec8\u4f7f\u7528\u672f\u8bed\\n\\n\u5728\u540c\u4e00\u4e2a\u6587\u6863\u4e2d\u4f7f\u7528\u76f8\u540c\u7684\u672f\u8bed\uff0c\u5426\u5219\u4f1a\u8ba9\u770b\u7684\u4eba\u7591\u60d1\u3002\\n\\n#### \u6b63\u786e\u4f7f\u7528\u9996\u5b57\u6bcd\u7f29\u5199\\n\\n\u5728\u6b63\u6587\u4e2d\u9996\u6b21\u4f7f\u7528\u9996\u5b57\u6bcd\u7f29\u5199\u65f6\uff0c\u8bf7\u62fc\u5199\u5b8c\u6574\u7684\u672f\u8bed\uff0c\u7136\u540e\u5c06\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\u653e\u5728\u62ec\u53f7\u4e2d\uff0c\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\u7528\u9ed1\u4f53\u5b57\u4f53\u6807\u51fa\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u540e\u7eed\u4f7f\u7528\u540c\u540d\u7684\u9996\u5b57\u6bcd\u7f29\u5199\u8bcd\u4e86\u3002\\n\\n### \u6b67\u4e49\u4ee3\u8bcd\\n\\n\u200b\\t\\t\u8bb8\u591a\u4ee3\u8bcd\u90fd\u662f\u6307\u4ee3\u524d\u6587\u4e2d\u7684\u540d\u8bcd\uff0c\u8fd9\u79cd\u4ee3\u8bcd\u50cf\u7f16\u7a0b\u4e2d\u7684\u6307\u9488\uff0c\u5f80\u5f80\u5bb9\u6613\u5f15\u5165\u9519\u8bef\uff1b\u5728\u6587\u4e2d\uff0c\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u4ee3\u8bcd\uff0c\u53ea\u9700\u8981\u91cd\u7528\u540d\u8bcd\u5373\u53ef\u3002\u53ef\u4ee5\u5728\u5982\u4e0b\u7684\u51e0\u79cd\u60c5\u51b5\u4e2d\u4f7f\u7528\u4ee3\u8bcd\u3002\\n\\n- \u5f15\u5165\u540d\u8bcd\u540e\u4f7f\u7528\u4ee3\u8bcd\uff1b\u5728\u4ecb\u7ecd\u540d\u8bcd\u4e4b\u524d\uff0c\u8bf7\u52ff\u4f7f\u7528\u4ee3\u8bcd\u3002\\n- \u4ee3\u8bcd\u5e94\u5c3d\u53ef\u80fd\u9760\u8fd1\u6307\u4ee3\u540d\u8bcd\uff0c\u901a\u5e38\uff0c\u5982\u679c\u540d\u8bcd\u548c\u4ee3\u8bcd\u7684\u8ddd\u79bb\u8d85\u8fc7\u4e94\u4e2a\u5355\u8bcd\uff0c\u5c31\u8bf7\u8003\u8651\u91cd\u7528\u540d\u8bcd\u3002\\n- \u5982\u679c\u5728\u540d\u8bcd\u548c\u4ee3\u8bcd\u4e4b\u95f4\u5f15\u5165\u7b2c\u4e8c\u540d\u8bcd\uff0c\u8bf7\u91cd\u7528\u540d\u8bcd\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u4ee3\u8bcd\u3002\\n\\n#### \u5b83\u548c\u4ed6\u4eec\\n\\n\u8fd9\u4e24\u4e2a\u4ee3\u8bcd\u5728\u6280\u672f\u6587\u6863\u4e2d\u5f15\u8d77\u6700\u5927\u7684\u6df7\u4e71\uff1a\\n\\n- \u5b83`It`\\n- \u4ed6\u4eec`they\u3001them\u3001their`\\n\\n\u4e0b\u9762\u53e5\u5b50\u4e2d\u7684**\u5b83**\u5c31\u662f\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u4ee3\u8bcd\u3002\\n\\n>Python\u662f\u89e3\u91ca\u5f62\u8bed\u8a00\uff0c\u800cC ++\u662f\u7f16\u8bd1\u5f62\u8bed\u8a00\uff0c\u3002**\u5b83**\u5177\u6709\u5f88\u591a\u8ffd\u968f\u8005\u3002\\n\\n#### \u8fd9\u4e2a\u548c\u90a3\u4e2a\\n\\n- \u8fd9`This`\\n- \u90a3`That`\\n\\n\u4e0b\u9762\u53e5\u5b50\u4e2d\u7684**\u8fd9**\u5c31\u4e0d\u6e05\u695a\u4ee3\u4e4b`Frambus`\u8fd8\u662f`Foo`\u3002\\n\\n> \u60a8\u53ef\u4ee5\u4f7f\u7528`Frambus`\u6216`Foo`\u6765\u8ba1\u7b97\u5bfc\u6570\u3002**\u8fd9**\u4e0d\u662f\u6700\u4f73\u7684\u3002\\n\\n### \u4e3b\u52a8\u8bed\u6001\\n\\n\u4f18\u5148\u4f7f\u7528\u4e3b\u52a8\u8bed\u6001\u800c\u4e0d\u662f\u88ab\u52a8\u8bed\u6001\uff1a\\n\\n### \u6e05\u6670\u7684\u53e5\u5b50\\n\\n\u5728\u6280\u672f\u5199\u4f5c\u4e2d\uff0c\u6587\u7ae0\u5199\u7684\u6e05\u6670\u660e\u4e86\u8981\u4f18\u4e8e\u5176\u5b83\u89c4\u5219\uff1b\u4e0b\u9762\u63d0\u4f9b\u4e86\u51e0\u79cd\u53ef\u4ee5\u4f7f\u6587\u7ae0\u6e05\u6670\u660e\u4e86\u7684\u65b9\u6cd5\u3002\\n\\n#### \u9009\u62e9\u6709\u6548\u7684\u52a8\u8bcd\\n\\n\u200b\\t\\t\u5927\u591a\u6570\u6280\u672f\u4f5c\u5bb6\u90fd\u8ba4\u4e3a\u52a8\u8bcd\u662f\u53e5\u5b50\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\uff0c\u9009\u62e9\u6b63\u786e\u7684\u4f7f\u7528\u52a8\u8bcd\u66f4\u4f1a\u4ea7\u751f\u4ee4\u4eba\u6ee1\u610f\u7684\u7ed3\u679c\u3002\\n\\n\u8981\u5438\u5f15\u548c\u8ba9\u8bfb\u8005\u5b66\u4e60\uff0c\u8bf7\u9009\u62e9\u7cbe\u786e\u3001\u6709\u529b\uff0c\u7279\u5b9a\u7684\u52a8\u8bcd\u3002\u51cf\u5c11\u4f7f\u7528\u4e0d\u7cbe\u786e\u3001\u901a\u7528\u7684\u52a8\u8bcd\uff0c\u5982\uff1a\\n\\n- `be`\u52a8\u8bcd\uff1ais\uff0care\uff0cam\uff0cwas\uff0care\u7b49\u3002\\n- \u53d1\u751f\\n\\n### \u7b80\u77ed\u7684\u53e5\u5b50\\n\\n\u51fa\u4e8e\u4e00\u5927\u539f\u56e0\uff0c\u6211\u4eec\u4f1a\u5728\u5199\u6280\u672f\u6587\u6863\u65f6\u628a\u53e5\u5b50\u5199\u7684\u8db3\u591f\u95f4\u65ad\uff1a\\n\\n- \u7b80\u77ed\u7684\u53e5\u5b50\u9605\u8bfb\u8d77\u6765\u66f4\u5feb\u3002\\n- \u7b80\u77ed\u7684\u53e5\u5b50\u901a\u5e38\u66f4\u5bb9\u6613\u7ef4\u62a4\u3002\\n- \u8f83\u957f\u7684\u53e5\u5b50\u4f1a\u8ba9\u81ea\u5df1\u66f4\u96be\u7406\u89e3\u3002\\n\\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u51e0\u70b9\u6765\u628a\u957f\u53e5\u5b50\u53d8\u4e3a\u77ed\u53e5\uff1a\\n\\n- \u6bcf\u4e2a\u53e5\u5b50\u90fd\u53ea\u8868\u8fbe\u4e00\u4e2a\u60f3\u6cd5\u3002\\n- \u5c06\u4e00\u4e9b\u957f\u53e5\u5b50\u8f6c\u6362\u4e3a\u5217\u8868\u3002\\n\\n> **\u539f\u53e5**\\n>\\n> \u5982\uff1a\u8981\u66f4\u6539\u5faa\u73af\u7684\u5e38\u89c4\u6d41\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528**break**\u8bed\u53e5\uff08\u4f7f\u60a8\u8df3\u51fa\u5f53\u524d\u5faa\u73af\uff09\u6216**continue**\u8bed\u53e5\uff08\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5f53\u524d\u8fed\u4ee3\u7684\u5176\u4f59\u90e8\u5206\uff09\u3002\\n>\\n> **\u4fee\u6539\u5982\u4e0b**\\n>\\n> \u8981\u66f4\u6539\u5faa\u73af\u7684\u901a\u5e38\u6d41\u7a0b\uff0c\u8bf7\u8c03\u7528\u4ee5\u4e0b\u8bed\u53e5\u4e4b\u4e00\uff1a\\n>\\n> - `break`\uff0c\u4f7f\u60a8\u8df3\u51fa\u5f53\u524d\u5faa\u73af\u3002\\n> - `continue`\uff0c\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5f53\u524d\u8fed\u4ee3\u7684\u5176\u4f59\u90e8\u5206\u3002\\n\\n- \u51cf\u5c11\u4f7f\u7528\u91cd\u590d\u7684\u5355\u8bcd\\n\\n- \u51cf\u5c11\u4ece\u5c5e\u5b50\u53e5\u3002\\n\\n### \u5217\u8868\u548c\u8868\u683c\\n\\n\u597d\u7684\u5217\u8868\u53ef\u4ee5\u628a\u6df7\u4e71\u7684\u6280\u672f\u5185\u5bb9\u8f6c\u53d8\u4e3a\u6709\u5e8f\u7684\u4e8b\u7269\uff0c\u6280\u672f\u8bfb\u8005\u901a\u5e38\u559c\u6b22\u5217\u8868\u3002\\n\\n#### \u9009\u62e9\u6b63\u786e\u7684\u5217\u8868\u7c7b\u578b\\n\\n\u4e0b\u9762\u7684\u5217\u8868\u5728\u6280\u672f\u5199\u4f5c\u4e2d\u7ecf\u5e38\u88ab\u4f7f\u7528\uff1a\\n\\n- \u9879\u76ee\u5217\u8868\u3002\\n\\n> \u5982\uff1aBash\u63d0\u4f9b\u4ee5\u4e0b\u5b57\u7b26\u4e32\u64cd\u4f5c\u673a\u5236\uff1a\\n>\\n> - \u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5220\u9664\u5b50\u5b57\u7b26\u4e32\\n> - \u5c06\u6574\u4e2a\u6587\u4ef6\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\\n\\n- \u6570\u5b57\u7f16\u53f7\u5217\u8868\u3002\\n\\n> \u5982\uff1a\u8bf7\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\u6765\u91cd\u65b0\u914d\u7f6e\u670d\u52a1\u5668\uff1a\\n>\\n> 1. \u505c\u6b62\u670d\u52a1\u5668\u3002\\n> 2. \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u3002\\n> 3. \u91cd\u65b0\u542f\u52a8\u670d\u52a1\u5668\u3002\\n\\n- \u6f5c\u5165\u7f16\u53f7\u6e05\u5355\u3002\\n\\n\u200b\\t\\t\u9879\u76ee\u5217\u8868\u548c\u7f16\u53f7\u5217\u8868\u7684\u533a\u522b\uff0c\u4f7f\u7528\u9879\u76ee\u5217\u8868\u7684\u65f6\u5019\uff0c\u91cd\u65b0\u6392\u5217\u9879\u76ee\u5217\u8868\u4e2d\u7684\u5185\u5bb9\uff0c\u5219\u5217\u8868\u7684\u542b\u4e49**\u4e0d\u4f1a\u6539\u53d8**\uff1b\u4f7f\u7528\u7f16\u53f7\u5217\u8868\u662f\uff0c\u91cd\u65b0\u6392\u5217\u7f16\u53f7\u5217\u8868\u4e2d\u7684\u5185\u5bb9\uff0c\u5219\u5217\u8868\u7684\u542b\u4e49\u4f1a**\u6539\u53d8**\u3002\\n\\n#### \u4fdd\u6301\u5217\u8868\u9879\u4e00\u81f4\\n\\n\u5217\u8868\u9879\u4e00\u81f4\u662f\u6307\u5217\u8868\u4e2d\u63cf\u8ff0\u6bcf\u4e00\u9879\u90fd\u4f7f\u7528\u4e00\u6837\u7684\u8bcd\u6027\u3001\u6807\u70b9\u3001\u53e5\u5b50\u7ed3\u6784\uff08\u5982\u90fd\u662f\u4e3b\u52a8\u53e5\uff09\u3002\\n\\n\u5982\u4e0b\u9762\u53e5\u5b50\u5c31\u662f\u5217\u8868\u9879\u4e00\u81f4\u7684\uff1a\\n\\n- \u841d\u535c\\n- \u571f\u8c46\\n- \u5377\u5fc3\u83dc\\n\\n\u4e0b\u9762\u7684\u53e5\u5b50\u5c31\u662f\u5217\u8868\u9879\u4e0d\u4e00\u81f4\u7684\uff1a\\n\\n- \u841d\u535c\\n- \u571f\u8c46\\n- \u590f\u65e5\u7684\u9633\u5149\u906e\u63a9\u4e86\u51ac\u5929\u7684\u6240\u6709\u56de\u5fc6\u3002\\n\\n#### \u521b\u5efa\u6709\u7528\u7684\u8868\\n\\n\u5927\u5bb6\u5bf9\u4e8e\u8868\u7684\u5c55\u793a\u4fe1\u606f\u4f1a\u66f4\u52a0\u7684\u5173\u6ce8\u3002\\n\\n\u4f7f\u7528\u8868\u65f6\uff0c\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a\\n\\n- \u6bcf\u4e00\u5217\u7684\u6807\u9898\u90fd\u8981\u53d6\u7684\u6709\u610f\u4e49\uff0c\u4e0d\u8981\u8ba9\u8bfb\u8005\u53bb\u731c\u6d4b\u3002\\n- \u6bcf\u4e2a\u5355\u5143\u683c\u4e2d\u4e0d\u8981\u653e\u5165\u8fc7\u591a\u7684\u5185\u5bb9\uff0c\u5982\u679c\u8d85\u8fc7\u4e24\u884c\uff0c\u5c31\u9700\u8981\u4ed4\u7ec6\u60f3\u4e00\u662f\u5426\u9700\u8981\u3002\\n- \u4e89\u53d6\u6bcf\u4e2a\u5217\u4e4b\u95f4\u662f\u76f8\u5173\u6027\u7684\u3002\\n\\n#### \u4f7f\u7528\u8868\u548c\u5217\u8868\u524d\\n\\n\u200b\\t\u5728\u4f7f\u7528\u8868\u548c\u5217\u8868\u524d\u52a0\u4e0a\u4e00\u53e5\u8bdd\uff0c\u544a\u8bc9\u8bfb\u8005\u8868\u683c\u6216\u8005\u5217\u8868\u662f\u8981\u8bf4\u660e\u4ec0\u4e48\uff0c\u7136\u540e\u7528**\u5192\u53f7**\u6765\u7ec8\u6b62\u4ecb\u7ecd\u8bed\u53e5\u3002\\n\\n### \u6bb5\u843d\\n\\n> \u5199\u4f5c\u7684\u5de5\u4f5c\uff1a\u5f04\u6e05\u4e3b\u9898\u5404\u90e8\u5206\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u6309\u903b\u8f91\u7684\u987a\u5e8f\u5448\u73b0\u51fa\u6765\uff0c\u4f7f\u8bfb\u8005\u80fd\u591f\u7406\u89e3\u3002\\n\\n#### \u5199\u4e00\u4e2a\u597d\u7684\u5f00\u5934\\n\\n\u200b\\t\\t\u5f00\u5934\u53e5\u5b50\u662f\u6bb5\u843d\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206\uff0c\u597d\u7684\u5f00\u5934\u786e\u5b9a\u4e86\u6bb5\u843d\u7684\u4e2d\u5fc3\u601d\u60f3\u3002\\n\\n#### \u6bcf\u4e00\u6bb5\u90fd\u53ea\u5199\u4e00\u4e2a\u4e3b\u9898\\n\\n\u200b\\t\\t\u4e00\u6bb5\u5e94\u53ea\u5199\u4e00\u4e2a\u4e3b\u9898\uff0c\u5c06\u6bcf\u4e2a\u6bb5\u843d\u90fd\u53ea\u5199\u4e00\u4e2a\u4e3b\u9898\uff0c\u4e0d\u8981\u63cf\u8ff0\u4e4b\u524d\u7684\u8bdd\u9898\u6216\u8005\u662f\u4e4b\u540e\u7684\u8bdd\u9898\u3002\\n\\n#### \u6bb5\u843d\u4e0d\u8981\u592a\u957f\u4e5f\u4e0d\u8981\u592a\u77ed\\n\\n\u200b\\t\\t\u6bb5\u843d\u592a\u957f\u8ba9\u770b\u7684\u4eba\u7b2c\u4e00\u6620\u50cf\u662f\u6050\u60e7\uff0c\u8bfb\u8005\u66f4\u559c\u6b22\u5305\u542b\u4e09\u5230\u4e94\u4e2a\u53e5\u5b50\u7684\u6bb5\u843d\uff0c\u4f46\u4f1a\u907f\u514d\u5305\u542b\u8d85\u8fc7\u4e03\u4e2a\u53e5\u5b50\u7684\u6bb5\u843d\u3002\\n\\n#### \u4e00\u4e2a\u6bb5\u843d\u8981\u63d0\u4f9b\u4ec0\u4e48\\n\\n\u200b\\t\\t\u597d\u7684\u6bb5\u843d\u53ef\u4ee5\u56de\u7b54\u4e09\u4e2a\u95ee\u9898\uff1a\\n\\n- \u4f60\u60f3\u544a\u8bc9\u8bfb\u8005\u4ec0\u4e48\u4e1c\u897f\uff1f\\n- \u8bfb\u8005\u4e3a\u4ec0\u4e48\u77e5\u9053\u8fd9\u70b9\u5f88\u91cd\u8981\uff1f\\n- \u8bfb\u8005\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u77e5\u8bc6\u3002\\n\\n### \u53d7\u4f17\\n\\n#### \u5982\u4f55\u5b9a\u4e49\u53d7\u4f17\\n\\n\u6211\u4eec\u901a\u8fc7\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u786e\u5b9a\u53d7\u4f17\uff1b\u9996\u5148\u786e\u5b9a\u53d7\u4f17\u7684\u89d2\u8272\uff0c\u793a\u4f8b\u89d2\u8272\u5305\u62ec\uff1a\\n\\n- \u8f6f\u4ef6\u5de5\u7a0b\u5e08\\n- \u6280\u672f\u975e\u5de5\u7a0b\u5e08\u89d2\u8272\\n- \u79d1\u5b66\u5bb6\u4eec\\n- \u79d1\u5b66\u9886\u57df\u7684\u4e13\u4e1a\u4eba\u624d\\n- \u672c\u79d1\u751f\\n- \u7814\u7a76\u751f\\n- \u975e\u6280\u672f\u804c\u4f4d\\n\\n#### \u786e\u5b9a\u53d7\u4f17\u9700\u8981\u5b66\u4e60\u5185\u5bb9\\n\\n\u200b\\t\\t\u5728\u5199\u6587\u7ae0\u4e4b\u524d\u6700\u597d\u80fd\u786e\u5b9a\u53d7\u4f17\u9700\u8981\u638c\u63e1\u4ec0\u4e48\u77e5\u8bc6\u624d\u80fd\u66f4\u597d\u7684\u8bfb\u61c2\u672c\u6587\uff0c\u53ef\u4ee5\u628a\u53d7\u4f17\u9700\u8981\u638c\u63e1\u7684\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u5217\u51fa\u6765\u3002\\n\\n### \u6587\u6863\\n\\n\u200b\\t\\t\u9700\u8981\u628a\u6240\u6709\u7684\u6bb5\u843d\u7ec4\u7ec7\u6210\u4e00\u4e2a\u8fde\u8d2f\u7684\u6587\u6863\u3002\\n\\n#### \u58f0\u660e\u6587\u6863\u8303\u56f4\\n\\n\u200b\\t\\t\u4e00\u4e2a\u597d\u7684\u6587\u6863\u5e94\u8be5\u8981\u8bf4\u660e\u5b83\u8981\u8bf4\u660e\u7684\u4e3b\u9898\uff0c\u4ee5\u53ca\u4e0d\u4f1a\u8bf4\u660e\u4ec0\u4e48\uff1b\u5982\u4e0b\uff1a\\n\\n> \u672c\u6587\u6863\u63cf\u8ff0\u4e86Project Frambus\u7684\u603b\u4f53\u8bbe\u8ba1\uff1b\u672c\u6587\u6863\u672a\u4ecb\u7ecd\u76f8\u5173\u6280\u672fFroobus\u9879\u76ee\u7684\u8bbe\u8ba1\u3002\\n\\n\u200b\\t\\t\u8bf4\u660e\u6587\u6863\u7684\u8303\u56f4\u4e0d\u4ec5\u80fd\u4f7f\u8bfb\u8005\u53d7\u76ca\uff0c\u4e5f\u80fd\u8ba9\u4f5c\u8005\u53d7\u76ca\u3002\u5728\u7f16\u5199\u65f6\uff0c\u53ef\u4ee5\u65f6\u523b\u53c2\u8003\u81ea\u5df1\u5b9a\u4e49\u7684\u6587\u6863\u8303\u56f4\u5e76\u4fee\u6b63\u3002\\n\\n### Markdown\\n\\n\u200b\\t\\t`Markdown`\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6807\u8bb0\u8bed\u8a00\uff0c\u8bb8\u591a\u6280\u672f\u4e13\u4e1a\u4eba\u5458\u90fd\u662f\u7528\u5b83\u6765\u521b\u5efa\u548c\u7f16\u8f91\u6280\u672f\u6587\u6863\uff0c\u4f7f\u7528`Markdown`\uff0c\u901a\u8fc7\u63d2\u5165\u7279\u6b8a\u7b26\u53f7\u7528\u6765\u6807\u793a\u6807\u9898\u3001\u7c97\u4f53\u3001\u5217\u8868\u7b49\u3002"},{"id":"\u5206\u5e03\u5f0f\u4e91","metadata":{"permalink":"/blog/\u5206\u5e03\u5f0f\u4e91","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-05-19-\u5206\u5e03\u5f0f\u4e91.md","source":"@site/blog/2021-05-19-\u5206\u5e03\u5f0f\u4e91.md","title":"2020\u5e74\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\uff1a\u5206\u5e03\u5f0f\u4e91","description":"\u5206\u5e03\u5f0f\u4e91\u662f\u7b2c\u4e00\u4e2a\u5c06\u4e91\u63d0\u4f9b\u7684\u670d\u52a1\u7684\u7269\u7406\u4f4d\u7f6e\u4f5c\u4e3a\u5176\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u7684\u4e91\u6a21\u578b\u3002","date":"2021-05-19T00:00:00.000Z","tags":[{"inline":false,"label":"Kubernetes","permalink":"/blog/tags/kubernetes","description":"kubernetes"},{"inline":false,"label":"Kubernetes Network","permalink":"/blog/tags/kubernetes-network","description":"Kubernetes Network"}],"readingTime":26.08,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"\u5206\u5e03\u5f0f\u4e91","title":"2020\u5e74\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\uff1a\u5206\u5e03\u5f0f\u4e91","authors":["rongfu"],"tags":["Kubernetes","Kubernetes Network"]},"unlisted":false,"prevItem":{"title":"\u6280\u672f\u5199\u4f5c \u7b2c\u4e00\u8bfe","permalink":"/blog/\u6280\u672f\u5199\u4f5c-\u7b2c\u4e00\u8bfe"},"nextItem":{"title":"Kubernetes Network","permalink":"/blog/Kubernetes-Network"}},"content":"\u5206\u5e03\u5f0f\u4e91\u662f\u7b2c\u4e00\u4e2a\u5c06\u4e91\u63d0\u4f9b\u7684\u670d\u52a1\u7684\u7269\u7406\u4f4d\u7f6e\u4f5c\u4e3a\u5176\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u7684\u4e91\u6a21\u578b\u3002\\n\x3c!-- truncate --\x3e\\n\\n### \u6982\u8ff0\\n\\n### \u5173\u952e\u53d1\u73b0\\n\\n- \u5206\u5e03\u5f0f\u4e91\u662f\u7b2c\u4e00\u4e2a\u5c06\u4e91\u63d0\u4f9b\u7684\u670d\u52a1\u7684\u7269\u7406\u4f4d\u7f6e\u4f5c\u4e3a\u5176\u5b9a\u4e49\u7684\u4e00\u90e8\u5206\u7684\u4e91\u6a21\u578b\u3002\\n- \u5206\u5e03\u5f0f\u4e91\u4fee\u590d\u4e86\u6df7\u5408\u4e91\u6a21\u578b\u4e2d\u901a\u5e38\u5b58\u5728\u7684\u4e91\u4ef7\u503c\u94fe\u4e2d\u7684\u4e0d\u8fde\u7eed\u6027\u3002\u4e91\u63d0\u4f9b\u5546\u6b63\u5728\u91c7\u7528\u4e0d\u540c\u7684\u65b9\u6cd5\u548c\u6a21\u578b\u6765\u89e3\u51b3\u6b64\u7c7b\u95ee\u9898\u3002\\n- \u5206\u5e03\u5f0f\u4e91\u5c06\u5206\u9636\u6bb5\u51fa\u73b0\u3002\u5728\u7b2c\u4e00\u9636\u6bb5\uff0c\u4f01\u4e1a\u5c06\u5176\u4f5c\u4e3a\u6253\u5305\u7684\uff0c\u53d7\u4f4d\u7f6e\u9650\u5236\u7684\u5206\u5e03\u5f0f\u4e91\u4ea7\u54c1\u8fdb\u884c\u90e8\u7f72\u548c\u4f7f\u7528\u3002\u5728\u7b2c\u4e8c\u9636\u6bb5\u4e2d\uff0c\u7535\u4fe1\u516c\u53f8\u548c\u5e02\u653f\u5e9c\u7b49\u7b2c\u4e09\u65b9\u5c06\u53c2\u4e0e\u5176\u4e2d\u3002\\n- \u65b0\u7684\u9ad8\u7ea7\u7528\u4f8b\u548c\u5bf9\u4e91\u8ba1\u7b97\u7684\u66f4\u590d\u6742\u7684\u4f7f\u7528\u6b63\u5728\u589e\u52a0\u53ef\u4f9bIT\u4e13\u4e1a\u4eba\u5458\u4f7f\u7528\u7684\u4e91\u670d\u52a1\u7684\u8303\u56f4\u3002\u8fd9\u4e9b\u5206\u5e03\u5f0f\u4e91\u4f53\u7cfb\u7ed3\u6784\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u901a\u5e38\u57fa\u4e8e\u90bb\u8fd1\u6027\uff0c\u63a7\u5236\uff0c\u53ef\u4f38\u7f29\u6027\u548c\u53ef\u7528\u670d\u52a1\u7684\u5e7f\u5ea6\u63d0\u4f9b\u4e00\u7ec4\u4e0d\u540c\u7684\u6743\u8861\u3002\\n\\n### \u63a8\u8350\u5efa\u8bae\\n\\n\u8bc4\u4f30\u6218\u7565\u6280\u672f\u8d8b\u52bf\u7684\u5f71\u54cd\u548c\u7ade\u4e89\u4f18\u52bf\u6f5c\u529b\u7684\u4f01\u4e1a\u4f53\u7cfb\u7ed3\u6784\u548c\u6280\u672f\u521b\u65b0\u9886\u5bfc\u8005\u5fc5\u987b\uff1a\\n\\n- \u901a\u8fc7\u5b9a\u4f4d\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u7528\u4f8b\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u4e91\u6a21\u578b\u4f5c\u4e3a\u4e3a\u4e0b\u4e00\u4ee3\u4e91\u8ba1\u7b97\u505a\u51c6\u5907\u7684\u673a\u4f1a\u3002\\n- \u901a\u8fc7\u4f7f\u7528\u5206\u5e03\u5f0f\u4e91\u7684\u6309\u9700\u6df7\u5408\u7279\u6027\uff0c\u514b\u670d\u79c1\u6709\u4e91\u548c\u6df7\u5408\u4e91\u5b9e\u73b0\u4e2d\u7684\u4e0d\u8db3\u3002\\n- \u786e\u5b9a\u5206\u5e03\u5f0f\u4e91\u7684\u672a\u6765\u9636\u6bb5\u7684\u7528\u4f8b\uff08\u4f8b\u5982\u4f4e\u5ef6\u8fdf\uff0c\u53d7\u9650\u7684\u89c4\u6a21\u548c\u6570\u636e\u9a7b\u7559\uff09\uff0c\u8fd9\u4e9b\u7528\u4f8b\u53ef\u901a\u8fc7\u4f7f\u7528\u5206\u5e03\u5f0f\u4e91\u201c\u53d8\u7535\u7ad9\u201d\u5f97\u5230\u589e\u5f3a\u3002\\n- \u8c03\u67e5\u4f7f\u4e91\u63d0\u4f9b\u5546\u8d1f\u8d23\u751a\u81f3\u5185\u90e8\u90e8\u7f72\u7684\u4e91\u64cd\u4f5c\uff0c\u4ee5\u514b\u670d\u5f53\u4eca\u7684\u79c1\u6709\u4e91\u548c\u6df7\u5408\u4e91\u8ba1\u7b97\u7684\u5931\u8d25\u548c\u4e0d\u8db3\u3002\\n\\n### \u6218\u7565\u89c4\u5212\u5047\u8bbe\\n\\n\u5230`2024`\u5e74\uff0c\u5927\u591a\u6570\u4e91\u670d\u52a1\u5e73\u53f0\u5c06\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e9b\u5728\u9700\u8981\u65f6\u6267\u884c\u7684\u5206\u5e03\u5f0f\u4e91\u670d\u52a1\u3002\\n\\n### \u5206\u6790\\n\\n#### \u4e3a\u4ec0\u4e48\u5206\u5e03\u5f0f\u4e91\u662f\u5341\u5927\u8d8b\u52bf\\n\\n\u200b\\t\\t\u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u4f7f\u7528\u4e91\u8ba1\u7b97\uff0c\u4ed6\u4eec\u5c06\u4f7f\u7528\u66f4\u9ad8\u7ea7\u7684\u529f\u80fd\u3002\u800c\u4e14\u4f9b\u5e94\u5546\u6b63\u5728\u4ee5\u66f4\u52a0\u7ec6\u81f4\u548c\u667a\u80fd\u7684\u65b9\u5f0f\u63d0\u4f9b\u4e91\u529f\u80fd\uff0c\u4ece\u800c\u5728\u65b0\u7684\u4e1a\u52a1\u6848\u4f8b\u4e2d\u8ba4\u8bc6\u5230\u65b0\u7684\u5ba2\u6237\u4ef7\u503c\u3002\\"\u4e91\u8ba1\u7b97\u7684\u672a\u6765\u662f\u4ec0\u4e48\uff1f\\"\u8fd9\u4e00\u95ee\u9898\u7684\u7b54\u6848\u5c31\u662f**\u5206\u5e03\u5f0f\u4e91**\u3002\u5b83\u662f\u6307\u5c06\u516c\u5171\u4e91\u670d\u52a1\u5206\u53d1\u5230\u4e0d\u540c\u7684\u7269\u7406\u4f4d\u7f6e\uff0c\u800c\u670d\u52a1\u7684\u8fd0\u8425\uff0c\u6cbb\u7406\u548c\u6f14\u8fdb\u4ecd\u7136\u662f\u516c\u5171\u4e91\u63d0\u4f9b\u5546\u7684\u8d23\u4efb\u3002\u4e0e\u63cf\u8ff0\u672a\u6765\u7684\u4efb\u4f55\u4e8b\u7269\u4e00\u6837\uff0c\u5206\u5e03\u5f0f\u4e91\u57fa\u4e8e\u4eca\u5929\u53ef\u89c1\u7684\u8d77\u6e90\u3002\u5206\u5e03\u5f0f\u4e91\u5c06\u5168\u7403\u516c\u5171\u4e91\u533a\u57df\uff0c\u6df7\u5408\u4e91\u548c\u8fb9\u7f18\u8ba1\u7b97\u7684\u5404\u4e2a\u65b9\u9762\u5e26\u5165\u4e86\u4e91\u8ba1\u7b97\u7684\u539f\u59cb\u4e16\u754c\uff08\u89c1\u56fe1\uff09\u3002\u56fe1.\u5206\u5e03\u5f0f\u4e91\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/20210519113745.png)\\n\\n\u200b\\t\\t\u7531\u4e8e\u4e91\u8ba1\u7b97\u672c\u8eab\u7684\u91cd\u8981\u6027\uff0c\u6211\u4eec\u5df2\u5c06\u5206\u5e03\u5f0f\u4e91\u786e\u5b9a\u4e3a`2020`\u5e74\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\u3002\u4e91\u8ba1\u7b97\u5b9e\u9645\u4e0a\u662f\u4e0b\u4e00\u4ef6\u5927\u4e8b\u7684\u57fa\u7840\uff0c\u5305\u62ec\u5176\u4ed6\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\u3002\\n\\n#### \u5206\u5e03\u5f0f\u4e91\u6700\u9002\u5408\u7684\u5730\u65b9\u524d\u5341\u540d\\n\\n\u200b\\t\\t\u8fd9\u79cd\u8d8b\u52bf\u662f\u667a\u80fd\u7a7a\u95f4\u7c7b\u522b\u7684\u4e00\u90e8\u5206\uff08\u53c2\u89c1\u56fe2\uff09\uff0c\u540c\u65f6\u8fd8\u5305\u62ec\u6388\u6743\u7684\u8fb9\u7f18\uff0c\u81ea\u6cbb\u7684\u4e8b\u7269\uff0c\u5b9e\u7528\u7684\u533a\u5757\u94fe\u548c`AI`\u5b89\u5168\u6027\u3002\u56fe2.\u5206\u5e03\u5f0f\u4e91\u5728\u6218\u7565\u6280\u672f\u8d8b\u52bf\u7684\u524d\u5341\u5927\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/20210519114008.png)\\n\\n\u5206\u5e03\u5f0f\u4e91\u4e0e\u5176\u4ed6\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\u4e2d\u7684\u4e09\u4e2a\u5177\u6709\u5f88\u5927\u7684\u534f\u540c\u4f5c\u7528\u3002\u8fd9\u4ee5\u4e0b\u7684\u4e09\u4e2a\u8d8b\u52bf\u7684\u5b9e\u73b0\u57fa\u7840\u662f\u5206\u5e03\u5f0f\u4e91\uff1a\\n\\n- **\u8d4b\u6743\u7684\u8fb9\u7f18\u3002** \u8fb9\u7f18\u8bbe\u5907\u5c06\u5229\u7528\u4ece\u90bb\u8fd1\u5230\u7aef\u70b9\uff08\u4f8b\u5982\uff0c\u5728\u7f51\u5173\u548c\u672c\u5730\u5fae\u6570\u636e\u4e2d\u5fc3\u4e0a\uff09\u5230\u8fdc\u7a0b\u4e91\u533a\u57df\u65e0\u5904\u4e0d\u5728\u7684\u5206\u5e03\u5f0f\u4e91\u7cfb\u7edf\u3002\\n- **\u5b9e\u7528\u7684\u533a\u5757\u94fe** \u968f\u7740\u533a\u5757\u94fe\u7684\u6210\u719f\uff0c\u66f4\u591a\u7684\u5904\u7406\u5c06\u5728\u8fb9\u7f18\u548c\u5176\u4ed6\u5730\u65b9\u8fdb\u884c\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u73af\u5883\u4e2d\u7684\u8bb8\u591a\u73af\u5883\u90fd\u9650\u5236\u4e86\u8ba1\u7b97\u80fd\u529b\uff0c\u7f13\u6162\u7684\u8054\u7f51\u548c\u6709\u9650\u7684\u6570\u636e\u5b58\u50a8\u529f\u80fd\u3002\u4ed6\u4eec\u5c06\u8d8a\u6765\u8d8a\u4f9d\u8d56\u7531\u5206\u5e03\u5f0f\u4e91\u63d0\u4f9b\u652f\u6301\u7684\u529f\u80fd\u3002\\n- **AI\u5b89\u5168\u3002** \u624b\u52a8\u76d1\u89c6\u548c\u7ba1\u7406\u5927\u91cf\u7684\u672a\u6765\u8fb9\u7f18\u8bbe\u5907\u5c06\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u57fa\u4e8eAI\u7684\u5b89\u5168\u7cfb\u7edf\u5bf9\u4e8e\u901a\u8fc7\u5206\u5e03\u5f0f\u529f\u80fd\u8bc6\u522b\u5f02\u5e38\u884c\u4e3a\u81f3\u5173\u91cd\u8981\u3002\\n\\n\u8fd9\u4e09\u5927\u5341\u5927\u6280\u672f\u6210\u529f\u90e8\u7f72\u548c\u4f7f\u7528\u7684\u5173\u952e\u56e0\u7d20\u662f**\u4f4d\u7f6e**\u3002\u5206\u5e03\u5f0f\u4e91\u5c06\u6210\u4e3a\u5728\u6240\u9700\u4f4d\u7f6e\u4ea4\u4ed8\u4e91\u529f\u80fd\u4ee5\u652f\u6301\u5176\u4ed6\u5341\u5927\u6280\u672f\u7684\u57fa\u7840\u3002\\n\\n### \u5206\u5e03\u5f0f\u4e91\u4ecb\u7ecd\\n\\n\u200b\\t\\t\u5206\u5e03\u5f0f\u4e91\u5c06\u516c\u5171\u4e91\u670d\u52a1\u5206\u5e03\u5230\u4e0d\u540c\u7684\u7269\u7406\u4f4d\u7f6e\uff0c\u4ee3\u8868\u7740\u4e0e\u5927\u591a\u6570\u516c\u5171\u4e91\u670d\u52a1\u7684\u865a\u62df\u5316\u96c6\u4e2d\u5f0f\u6a21\u578b\u4ee5\u53ca\u4e0e\u901a\u7528\u4e91\u6982\u5ff5\u76f8\u5173\u7684\u6a21\u578b\u7684\u91cd\u5927\u8f6c\u53d8\u3002\u8fd9\u5c06\u5f15\u9886\u4e91\u8ba1\u7b97\u7684\u65b0\u7eaa\u5143\u3002 `Gartner`\u5c06\u4e91\u8ba1\u7b97\u5b9a\u4e49\u4e3a\u4e00\u79cd\u8ba1\u7b97\u6837\u5f0f\uff0c\u5176\u4e2d\u4f7f\u7528`Internet`\u6280\u672f\u5c06\u4f5c\u4e3a\u670d\u52a1\u7684\u5f39\u6027\u53ef\u4f38\u7f29`IT`\u529f\u80fd\u4ea4\u4ed8\u4e3a\u670d\u52a1\u3002\u6b64\u5b9a\u4e49\u6ca1\u6709\u63d0\u53ca\u4f4d\u7f6e\u3002\u957f\u671f\u4ee5\u6765\uff0c\u4e91\u8ba1\u7b97\u4e00\u76f4\u88ab\u89c6\u4e3a\u63d0\u4f9b\u5546\u6570\u636e\u4e2d\u5fc3\u4e2d\u8fd0\u884c\u7684\u201c\u96c6\u4e2d\u5f0f\u201d\u670d\u52a1\u7684\u4ee3\u540d\u8bcd\u3002\u4f46\u662f\uff0c\u6700\u597d\u5c06\u5176\u89c6\u4e3a\u903b\u8f91\u4e0a\u96c6\u4e2d\u6216\u7edf\u4e00\u7684\u670d\u52a1\u3002\u79c1\u6709\u4e91\u548c\u6df7\u5408\u4e91\u9009\u9879\u8865\u5145\u4e86\u6b64\u516c\u5171\u4e91\u6a21\u578b\u3002 *\u79c1\u6709\u4e91* \u6307\u7684\u662f\u4e13\u95e8\u9488\u5bf9\u901a\u5e38\u5728\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\u4e2d\u8fd0\u884c\u7684\u5404\u4e2a\u516c\u53f8\u521b\u5efa\u4e91\u670d\u52a1\u3002 *\u6df7\u5408\u4e91* \u6307\u79c1\u6709\u4e91\u548c\u516c\u5171\u4e91\u670d\u52a1\u7684\u96c6\u6210\u4ee5\u652f\u6301\u5e76\u884c\uff0c\u96c6\u6210\u6216\u4e92\u8865\u7684\u4efb\u52a1\u3002\u4f4d\u7f6e\u662f\u5206\u5e03\u5f0f\u4e91\u6982\u5ff5\u7684\u5173\u952e\u90e8\u5206\u3002\u5206\u5e03\u5f0f\u4e91\u5c06\u529f\u80fd\u5206\u5e03\u5230\u4e0d\u540c\u7684\u4f4d\u7f6e\u3002\u4ee5\u5206\u5e03\u5f0f\u65b9\u5f0f\u90e8\u7f72\u4e91\u670d\u52a1\u4e3a\u4ece\u4e2d\u592e\u516c\u5171\u4e91\u5230\u8fb9\u7f18\u8bbe\u5907\u548c\u573a\u666f\u7684\u8fde\u7eed\u4e91\u670d\u52a1\u63d0\u4f9b\u4e86\u66f4\u5f3a\u5927\u7684\u652f\u6301\u3002\u8bbf\u95ee\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u4e91\u670d\u52a1\u7684\u80fd\u529b\u53ef\u4ee5\u5c06\u4e91\u8d44\u6e90\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u7528\u4f8b\u3002\u5b83\u4f7f\u5355\u4e2a\u8bbe\u5907\u53ef\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u8fde\u63a5\u8981\u6c42\uff1b\u9644\u8fd1\u7684\u666f\u70b9\uff1b\u4ee5\u53ca\u793e\u533a\uff0c\u57ce\u5e02\uff0c\u56fd\u5bb6\u6216\u6574\u4e2a\u5730\u533a\u3002\u5206\u5e03\u5f0f\u4e91\u8fd8\u53ef\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u7269\u7406\u5b89\u5168\u6027\u548c\u8010\u7528\u6027\u8981\u6c42\u3002\u8fd9\u4e2a\u7edf\u4e00\u4f53\u7edf\u4e00\u4e86\u4e91\u3002\\n\\n### \u5206\u5e03\u5f0f\u4e91\u5177\u6709\u4e09\u4e2a\u8d77\u6e90\uff1a\u516c\u5171\u4e91\u533a\u57df\uff0c\u6df7\u5408\u4e91\u548c\u8fb9\u7f18\u8ba1\u7b97\\n\\n#### \u516c\u5171\u4e91\\n\\n\u200b\\t\\t\u5728\u8d85\u5927\u89c4\u6a21\u516c\u5171\u4e91\u5b9e\u65bd\u4e2d\uff0c\u516c\u5171\u4e91\u662f\u201c\u5b87\u5b99\u7684\u4e2d\u5fc3\u201d\u3002\u4f46\u662f\uff0c\u51e0\u4e4e\u81ea\u4e91\u8ba1\u7b97\u670d\u52a1\u8bde\u751f\u4ee5\u6765\uff0c\u5b83\u5c31\u5df2\u7ecf\u5728\u5168\u7403\u8303\u56f4\u5185\u5206\u5e03\u5728\u516c\u5171\u4e91\u4e2d\u3002\u63d0\u4f9b\u5546\u5728\u4e16\u754c\u5404\u5730\u5177\u6709\u4e0d\u540c\u7684\u533a\u57df\uff0c\u6240\u6709\u533a\u57df\u5747\u7531\u4e00\u4e2a\u516c\u5171\u4e91\u63d0\u4f9b\u5546\u8fdb\u884c\u96c6\u4e2d\u63a7\u5236\uff0c\u7ba1\u7406\u548c\u63d0\u4f9b\u3002\u4e91\u670d\u52a1\u7684\u4f4d\u7f6e\u662f\u5206\u5e03\u5f0f\u4e91\u8ba1\u7b97\u6a21\u578b\u7684\u5173\u952e\u7ec4\u6210\u90e8\u5206\u3002\u4ece\u5386\u53f2\u4e0a\u770b\uff0c\u4f4d\u7f6e\u4e0e\u4e91\u5b9a\u4e49\u65e0\u5173\uff0c\u4f46\u662f\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u4e0e\u4e4b\u76f8\u5173\u7684\u95ee\u9898\u5f88\u91cd\u8981\u3002\u51fa\u4e8e\u591a\u79cd\u539f\u56e0\uff08\u5305\u62ec\u6570\u636e\u4e3b\u6743\uff09\u4ee5\u53ca\u5bf9\u5ef6\u8fdf\u654f\u611f\u7684\u7528\u4f8b\uff0c\u4f4d\u7f6e\u53ef\u80fd\u5f88\u91cd\u8981\u3002\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5206\u5e03\u5f0f\u4e91\u670d\u52a1\u4e3a\u7ec4\u7ec7\u63d0\u4f9b\u4e86\u5728\u6ee1\u8db3\u5176\u8981\u6c42\u7684\u4f4d\u7f6e\u63d0\u4f9b\u7684\u516c\u5171\u4e91\u670d\u52a1\u7684\u529f\u80fd\u3002\\n\\n#### \u6df7\u5408\u4e91\\n\\n\u200b\\t\\t\u6df7\u5408\u4e91\u6982\u5ff5\u7684\u76ee\u6807\u662f\u4ee5\u4f18\u5316\uff0c\u9ad8\u6548\u548c\u7ecf\u6d4e\u9ad8\u6548\u7684\u65b9\u5f0f\u5c06\u63d0\u4f9b\u5546\u7684\u5916\u90e8\u670d\u52a1\u4e0e\u5185\u90e8\u8fd0\u884c\u7684\u5185\u90e8\u670d\u52a1\u6df7\u5408\u5728\u4e00\u8d77\u3002\u4f46\u662f\uff0c\u5b9e\u65bd\u79c1\u6709\u4e91\u975e\u5e38\u56f0\u96be\u3002\u6df7\u5408\u4e91\u8ba1\u7b97\u9700\u8981\u516c\u5171\u4e91\u548c\u79c1\u6709\u4e91\u3002\u5927\u591a\u6570\u79c1\u6709\u4e91\u9879\u76ee\u65e0\u6cd5\u63d0\u4f9b\u7ec4\u7ec7\u6240\u5bfb\u6c42\u7684\u4e91\u6210\u679c\u548c\u6536\u76ca\u3002\u6b64\u5916\uff0cGartner\u4e0e\u5ba2\u6237\u8fdb\u884c\u7684\u6709\u5173\u6df7\u5408\u4e91\u7684\u5927\u591a\u6570\u5bf9\u8bdd\u90fd\u4e0d\u662f\u771f\u6b63\u7684\u6df7\u5408\u4e91\u65b9\u6848\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u662f\u5173\u4e8e\u6df7\u5408IT\u573a\u666f\u7684\uff0c\u5728\u8be5\u573a\u666f\u4e2d\uff0c\u975e\u4e91\u6280\u672f\u4e0e\u4e00\u7cfb\u5217\u7c7b\u4f3c\u4e91\u7684\u6a21\u578b\u4e00\u8d77\u7528\u4e8e\u516c\u5171\u4e91\u670d\u52a1\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u4e91\u542f\u53d1\u5f0f\uff08\u8bf7\u53c2\u9605 \u201c\u56db\u79cd\u7c7b\u578b\u7684\u4e91\u8ba1\u7b97\u63cf\u8ff0\u4e86\u4e91\u8ba1\u7b97\u7684\u4ef7\u503c\u8303\u56f4\u201d\uff09\uff09\u3002\u6df7\u5408IT\u548c\u771f\u6b63\u7684\u6df7\u5408\u4e91\u9009\u9879\u662f\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u67d0\u4e9b\u7528\u4f8b\u4e2d\u4f7f\u7528\u5b83\u4eec\u3002\u4f46\u662f\u5927\u591a\u6570\u6df7\u5408\u4e91\u6837\u5f0f\u7834\u574f\u4e86\u8bb8\u591a\u4e91\u8ba1\u7b97\u7684\u4ef7\u503c\u4e3b\u5f20\uff0c\u5e76\u4e14\u672a\u80fd\uff1a\\n\\n- \u5c06\u8fd0\u884c\u786c\u4ef6\u548c\u8f6f\u4ef6\u57fa\u7840\u67b6\u6784\u7684\u8d23\u4efb\u548c\u5de5\u4f5c\u8f6c\u79fb\u5230\u4e91\u63d0\u4f9b\u5546\\n- \u4ece\u5927\u91cf\u5171\u4eab\u8d44\u6e90\u4e2d\u5229\u7528\u4e91\u5f39\u6027\u7684\u7ecf\u6d4e\u6027\uff08\u4e0a\u4e0b\u6269\u5c55\uff09\\n- \u4e0e\u516c\u5171\u4e91\u63d0\u4f9b\u5546\u540c\u6b65\u4ece\u521b\u65b0\u7684\u6b65\u4f10\u4e2d\u53d7\u76ca\\n- \u4f7f\u7528\u5168\u7403\u8d85\u5927\u89c4\u6a21\u670d\u52a1\u7684\u6210\u672c\u7ecf\u6d4e\u5b66\\n- \u5229\u7528\u5927\u578b\u4e91\u63d0\u4f9b\u5546\u7684\u6280\u80fd\u6765\u4fdd\u62a4\u548c\u8fd0\u8425\u4e16\u754c\u4e00\u6d41\u7684\u670d\u52a1\\n\\n##### \u5305\u88c5\u7684\u6df7\u5408\u4e91\\n\\n\u200b\\t\\t\u4e0b\u4e00\u4ee3\u6df7\u5408\uff08\u548c\u79c1\u6709\uff09\u4e91\u88ab\u6253\u5305\u5728\u4e00\u8d77\u89e3\u51b3\u4e86\u6df7\u5408\u4e91\u7684\u8bb8\u591a\u95ee\u9898\u3002\u6253\u5305\u7684\u6df7\u5408\u4e91\u662f\u6307\u7531\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u79c1\u6709\u4e91\u4ea7\u54c1\uff0c\u8be5\u4ea7\u54c1\u4ee5\u6346\u7ed1\u65b9\u5f0f\u6253\u5305\u5e76\u8fde\u63a5\u5230\u516c\u5171\u4e91\u3002\u6253\u5305\u7684\u6df7\u5408\u4e91\u6709\u4e24\u79cd\u4e3b\u8981\u65b9\u6cd5\uff1a\u201c\u6309\u9700\u6bd4\u8f83\u201d\u6df7\u5408\u548c\u201c\u5206\u5c42\u6280\u672f\u201d\u6df7\u5408\uff08\u8de8\u8d8a\u4e0d\u540c\u7684\u6280\u672f\u57fa\u7840\uff09\u3002\\n\\n1.  `Microsoft Azure`\u548c`Azure Stack`\u4ee3\u8868\u4e86\u201c\u6309\u9700**\u6df7\u5408\u201d\u65b9\u6cd5**\u3002`Azure Stack`\u4e0e\u516c\u5171\u4e91\u4e2d\u7684`Azure`\u4e0d\u540c\u3002\u5b83\u662f\u4e00\u4e2a\u5b50\u96c6\uff0c\u4f46\u63d0\u4f9b\u4e86\u4e00\u7ec4\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u53cd\u6620`Azure`\u516c\u5171\u4e91\u4e2d\u7684\u670d\u52a1\u3002\u53e6\u4e00\u4e2a\u793a\u4f8b\u662f\uff0c`AWS Outposts`\u53ef\u4ee5\u5728\u6258\u7ba1\u7684\u79c1\u6709\u4e91\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff08\u6ca1\u6709\u5176\u4ed6\u516c\u53f8\u53ef\u4ee5\u8bbf\u95ee\u6b64\u6a21\u5f0f\uff09\u3002\u5b83\u4ee3\u8868\u4e86\u201c\u6309\u9700\u4f7f\u7528\u201d\u65b9\u6cd5\u7684\u793a\u4f8b\u3002\u4f46\u662f\uff0c\u4ee5`AWS Outposts`\u4ee3\u8868\u7684\u66f4\u5e7f\u6cdb\u7684\u7b56\u7565\u5c06\u9f13\u52b1\u91c7\u7528\u66f4\u52a0\u5206\u6563\u7684\u6a21\u578b\uff0c\u5176\u4e2d\u6bcf\u4e2a`Outposts`\u90e8\u7f72\u90fd\u5411\u9644\u8fd1\u7684\u90bb\u5c45\u5f00\u653e\u3002\u540c\u7c7b\u89e3\u51b3\u65b9\u6848\u63d0\u4f9b\u4e86\u201c\u5b8c\u6574\u5806\u6808\u201d\uff0c\u4f46\u4e0d\u4e00\u5b9a\u63d0\u4f9b\u786c\u4ef6\uff0c\u6240\u6709\u89e3\u51b3\u65b9\u6848\u5747\u7531\u5355\u4e2a\u4f9b\u5e94\u5546\u7ba1\u7406\u3002\\n\\n- \u5728`Azure Stack`\u65b9\u6cd5\u4e2d\uff0c \u5ba2\u6237\u8d2d\u4e70\u5e76\u62e5\u6709\u4e00\u4e2a\u786c\u4ef6\u5e73\u53f0\u3002\u4e91\u8f6f\u4ef6\u5c42\u968f\u63d0\u4f9b\u5546\u7684\u516c\u5171\u4e91\u670d\u52a1\u7684\u5b50\u96c6\u4e00\u8d77\u4ea4\u4ed8\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e91\u63d0\u4f9b\u5546\u901a\u5e38\u4e0d\u5bf9\u5e95\u5c42\u786c\u4ef6\u5e73\u53f0\u7684\u6b63\u5728\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u7ef4\u62a4\u6216\u66f4\u65b0\u627f\u62c5\u5168\u90e8\u8d23\u4efb\u3002\u4e91\u63d0\u4f9b\u5546\u53ef\u80fd\u4ec5\u5bf9\u8be5\u8f6f\u4ef6\u627f\u62c5\u90e8\u5206\u8d23\u4efb\u3002\u7528\u6237\u81ea\u884c\u8d1f\u8d23\u6216\u4f7f\u7528\u6258\u7ba1\u670d\u52a1\u63d0\u4f9b\u5546\u8d1f\u8d23\u3002\\n- \u5728`AWS Outposts`\u6a21\u578b\u4e2d\uff0c \u5c06\u65e2\u5305\u542b\u786c\u4ef6\u53c8\u5305\u542b\u8f6f\u4ef6\u7684\u5b8c\u6574\u8bbe\u5907\u4ea4\u4ed8\u7ed9\u5ba2\u6237\u3002\u4e91\u63d0\u4f9b\u5546\u8d1f\u8d23\u652f\u6301\u548c\u7ef4\u62a4\u786c\u4ef6\u548c\u8f6f\u4ef6\u3002\u5ba2\u6237\u63d0\u4f9b\u4e86\u6258\u7ba1\u7cfb\u7edf\u7684\u7269\u7406\u8bbe\u65bd\uff0c\u4f46\u5426\u5219\u4e91\u63d0\u4f9b\u5546\u5c06\u8bbe\u5907\u4f5c\u4e3a\u5176\u4e2d\u592e\u4e91\u670d\u52a1\u7684\u6269\u5c55\u6709\u6548\u8fd0\u884c\u3002\\n- \u5c3d\u7ba1\u8f6f\u4ef6\u65b9\u6cd5\u5728\u516c\u5171\u670d\u52a1\u548c\u672c\u5730\u5b9e\u65bd\u4e4b\u95f4\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u7684\u6a21\u578b\uff0c\u4f46\u662f\u6df7\u5408\u4e91\u7684\u5176\u4ed6\u6311\u6218\u4ecd\u7136\u5b58\u5728\u3002\u4e00\u4e9b\u5ba2\u6237\u8ba4\u4e3a\u63a7\u5236\u670d\u52a1\u66f4\u65b0\u662f\u4e00\u79cd\u4f18\u52bf\u3002\\n\\n2. **\u5206\u5c42\u6280\u672f\u6df7\u5408\u65b9\u6cd5** \u57fa\u4e8e\u4e0d\u540c\u57fa\u7840\u6280\u672f\uff0c\u5e73\u53f0\u548c\u529f\u80fd\u7684\u96c6\u6210-\u521b\u5efa\u5404\u79cd\u53ef\u79fb\u690d\u6027\u5c42\u3002\u8fd9\u5c31\u662f`Google`\u548c`IBM`\uff08\u53ca\u5176\u4ed6\u516c\u53f8\uff09\u5173\u6ce8\u7684\u91cd\u70b9-\u5e26\u6709`Anthos`\uff08\u4ee5\u524d\u79f0\u4e3a\u5176\u4e91\u670d\u52a1\u5e73\u53f0\uff09\u7684`Google`\u548c\u5e26\u6709`Red Hat`\u548c`OpenShift`\u7684`IBM`\u3002\\n\\n- \u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u63d0\u4f9b\u5546\u53ef\u4ee5\u63d0\u4f9b\u901a\u5e38\u57fa\u4e8e`Kubernetes`\u6784\u5efa\u7684\u53ef\u79fb\u690d\u5c42\uff0c\u4f5c\u4e3a\u8de8\u5206\u5e03\u5f0f\u73af\u5883\u7684\u670d\u52a1\u7684\u57fa\u7840\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u79fb\u690d\u6027\u5c42\u4ec5\u4f7f\u7528\u5bb9\u5668\u6765\u652f\u6301\u5bb9\u5668\u5316\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\u3002\u5728\u5176\u4ed6\u60c5\u51b5\u4e0b\uff0c\u63d0\u4f9b\u5546\u5c06\u5176\u67d0\u4e9b\u4e91\u670d\u52a1\u4f5c\u4e3a\u53ef\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u8fd0\u884c\u7684\u5bb9\u5668\u5316\u670d\u52a1\u6765\u63d0\u4f9b\u3002\u53ef\u79fb\u690d\u6027\u65b9\u6cd5\u5ffd\u7565\u4e86\u5e95\u5c42\u786c\u4ef6\u5e73\u53f0\u7684\u6240\u6709\u6743\u548c\u7ba1\u7406\uff0c\u8fd9\u4ecd\u7136\u662f\u5ba2\u6237\u7684\u8d23\u4efb\u3002\\n\\n\u200b\\t\\t\u5b58\u5728\u7ec4\u5408\u65b9\u6cd5\u548c\u5176\u4ed6\u65b9\u6cd5\u3002\u5728\u8fd9\u4e9b\u670d\u52a1\u4e2d\uff0c\u63d0\u4f9b\u5546\u4ee5\u786c\u4ef6/\u8f6f\u4ef6\u7ec4\u5408\u7684\u5f62\u5f0f\u63d0\u4f9b\u5176\u67d0\u4e9b\u4e91\u670d\u52a1\u7684\u540c\u7c7b\u7248\u672c\uff0c\u5e76\u4e14\u63d0\u4f9b\u5546\u81f4\u529b\u4e8e\u7ba1\u7406\u548c\u66f4\u65b0\u670d\u52a1\u3002\u8fd9\u51cf\u8f7b\u4e86\u670d\u52a1\u4f7f\u7528\u8005\u7684\u8d1f\u62c5\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5c06\u670d\u52a1\u89c6\u4e3a\u201c\u9ed1\u5323\u5b50\u201d\u3002\u4f46\u662f\uff0c\u6709\u4e9b\u5ba2\u6237\u4f1a\u4e0d\u6ee1\u610f\u653e\u5f03\u5bf9\u5e95\u5c42\u786c\u4ef6\u548c\u8f6f\u4ef6\u66f4\u65b0\u5468\u671f\u7684\u6240\u6709\u63a7\u5236\u6743\u3002\\n\\n##### \u6df7\u5408\u4e91Promise\u4e0a\u7684\u5206\u5e03\u5f0f\u4e91\u4ea4\u4ed8\\n\\n\u200b\\t\\t\u5206\u5e03\u5f0f\u4e91\u8d85\u51fa\u4e86\u4e91\u63d0\u4f9b\u5546\u62e5\u6709\u7684\u6570\u636e\u4e2d\u5fc3\u7684\u8303\u56f4\uff08\u4f8b\u5982\uff0c\u4e91\u63d0\u4f9b\u5546\u5177\u6709\u4e0d\u540c\u533a\u57df\u7684\u6a21\u578b\uff09\u3002\u5728\u5206\u5e03\u5f0f\u4e91\u4e2d\uff0c\u539f\u59cb\u516c\u5171\u4e91\u63d0\u4f9b\u5546\u8d1f\u8d23\u4e91\u670d\u52a1\u4f53\u7cfb\u7ed3\u6784\uff0c\u4ea4\u4ed8\uff0c\u8fd0\u8425\uff0c\u6cbb\u7406\u548c\u66f4\u65b0\u7684\u6240\u6709\u65b9\u9762\u3002\u8fd9\u5c06\u6062\u590d\u5728\u5ba2\u6237\u8d1f\u8d23\u4ea4\u4ed8\u7684\u4e00\u90e8\u5206\u65f6\u88ab\u6253\u7834\u7684\u4e91\u4ef7\u503c\u4e3b\u5f20\uff0c\u8fd9\u5728\u6df7\u5408\u4e91\u573a\u666f\u4e2d\u901a\u5e38\u662f\u8fd9\u79cd\u60c5\u51b5\u3002\u4e91\u63d0\u4f9b\u5546\u4e0d\u9700\u8981\u62e5\u6709\u5b89\u88c5\u5206\u5e03\u5f0f\u4e91\u670d\u52a1\u7684\u786c\u4ef6\u3002\u4f46\u662f\uff0c\u5728\u5b8c\u5168\u5b9e\u65bd\u5206\u5e03\u5f0f\u4e91\u6a21\u578b\u65f6\uff0c\u4e91\u63d0\u4f9b\u5546\u5fc5\u987b\u5bf9\u5982\u4f55\u7ba1\u7406\u548c\u7ef4\u62a4\u8be5\u786c\u4ef6\u627f\u62c5\u5168\u90e8\u8d23\u4efb\u3002\\n\\n#### \u8fb9\u7f18\u4e91\\n\\n\u200b\\t\\t\u5206\u5e03\u5f0f\u4e91\u7684\u57fa\u672c\u6982\u5ff5\u662f\uff0c\u516c\u6709\u4e91\u63d0\u4f9b\u5546\u8d1f\u8d23\u8bbe\u8ba1\uff0c\u67b6\u6784\uff0c\u4ea4\u4ed8\uff0c\u64cd\u4f5c\uff0c\u7ef4\u62a4\uff0c\u66f4\u65b0\u548c\u6240\u6709\u6743\uff0c\u901a\u5e38\u5305\u62ec\u5e95\u5c42\u786c\u4ef6\u3002\u4f46\u662f\uff0c\u968f\u7740\u89e3\u51b3\u65b9\u6848\u8d8a\u6765\u8d8a\u9760\u8fd1\u8fb9\u7f18\uff0c\u4e91\u63d0\u4f9b\u5546\u901a\u5e38\u4e0d\u5e0c\u671b\u62e5\u6709\u6574\u4e2a\u6280\u672f\u6808\uff0c\u8fd9\u662f\u4e0d\u5e0c\u671b\u7684\u6216\u4e0d\u53ef\u884c\u7684\u3002\u7531\u4e8e\u8fd9\u4e9b\u670d\u52a1\u88ab\u5206\u53d1\u5230\u64cd\u4f5c\u7cfb\u7edf\uff08\u4f8b\u5982\uff0c\u53d1\u7535\u5382\u6216\u98ce\u7535\u573a\uff09\u4e0a\uff0c\u56e0\u6b64\u6d88\u8d39\u7ec4\u7ec7\u53ef\u80fd\u4e0d\u5e0c\u671b\u5c06\u7269\u7406\u5de5\u5382\u7684\u6240\u6709\u6743\u548c\u7ba1\u7406\u6743\u4ea4\u7ed9\u5916\u90e8\u4f9b\u5e94\u5546\u3002\u4f46\u662f\uff0c\u6d88\u8d39\u7ec4\u7ec7\u53ef\u80fd\u4f1a\u5bf9\u63d0\u4f9b\u5546\u5728\u6b64\u7c7b\u8bbe\u5907\u4e0a\u4ea4\u4ed8\uff0c\u7ba1\u7406\u548c\u66f4\u65b0\u7684\u670d\u52a1\u611f\u5174\u8da3\u3002\u79fb\u52a8\u8bbe\u5907\uff0c\u667a\u80fd\u624b\u673a\u548c\u5176\u4ed6\u5ba2\u6237\u7aef\u8bbe\u5907\u4e5f\u662f\u5982\u6b64\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9884\u8ba1\uff0c\u968f\u7740\u63d0\u4f9b\u5546\u63a5\u53d7\u4e0d\u540c\u7ea7\u522b\u7684\u6240\u6709\u6743\u548c\u8d23\u4efb\uff0c\u5c06\u4f1a\u51fa\u73b0\u4e00\u7cfb\u5217\u4ea4\u4ed8\u6a21\u578b\u3002\u53e6\u4e00\u4e2a\u4f1a\u5f71\u54cd\u516c\u5171\u4e91\u670d\u52a1\u5206\u5e03\u7684\u8fb9\u7f18\u56e0\u7d20\u5c06\u662f\u8fb9\u7f18\uff0c\u8fd1\u8fb9\u7f18\u548c\u8fdc\u8fb9\u7f18\u5e73\u53f0\u7684\u529f\u80fd\u3002\u53ef\u80fd\u4e0d\u9700\u8981\u6216\u65e0\u6cd5\u8fd0\u884c\u5728\u96c6\u4e2d\u5f0f\u4e91\u4e2d\u8fdb\u884c\u955c\u50cf\u7684\u540c\u7c7b\u670d\u52a1\u3002\u4f4e\u76ee\u6807\u7269\u8054\u7f51`\uff08IoT\uff09`\u6216\u5b58\u50a8\u8bbe\u5907\u7b49\u9488\u5bf9\u76ee\u6807\u73af\u5883\u91cf\u8eab\u5b9a\u5236\u7684\u8865\u5145\u670d\u52a1\u5c06\u6210\u4e3a\u5206\u5e03\u5f0f\u4e91\u9891\u8c31\u7684\u4e00\u90e8\u5206\uff08\u4f8b\u5982\uff0c`AWS IoT Greengrass`\uff0c`AWS Snowball`\u548c`Azure Stack Edge`\uff09\u3002\u4f46\u662f\uff0c\u5982\u679c\u8981\u5c06\u8fd9\u4e9b\u670d\u52a1\u89c6\u4e3a\u5206\u5e03\u5f0f\u4e91\u9891\u8c31\u7684\u4e00\u90e8\u5206\uff0c\u5219\u4e91\u63d0\u4f9b\u5546\u81f3\u5c11\u5fc5\u987b\u8bbe\u8ba1\uff0c\u67b6\u6784\uff0c\u5206\u53d1\uff0c\u7ba1\u7406\u548c\u66f4\u65b0\u8fd9\u4e9b\u670d\u52a1\u3002\u5206\u5e03\u5f0f\u4e91\u652f\u6301\u4ece\u5206\u5e03\u5230\u7279\u5b9a\u548c\u4e0d\u540c\u4f4d\u7f6e\u7684\u516c\u5171\u4e91\u4e2d\u7684\u4e91\u670d\u52a1\u7684\u8fde\u7eed\u8fde\u63a5\u548c\u65ad\u7eed\u8fde\u63a5\u64cd\u4f5c\u3002\u8fd9\u5b9e\u73b0\u4e86\u4f4e\u5ef6\u8fdf\u670d\u52a1\u6267\u884c\uff0c\u5176\u4e2d\u4e91\u670d\u52a1\u66f4\u63a5\u8fd1\u8fdc\u7a0b\u6570\u636e\u4e2d\u5fc3\u7684\u9700\u6c42\u70b9\uff0c\u6216\u8005\u4e00\u76f4\u4f20\u9012\u5230\u8fb9\u7f18\u8bbe\u5907\u672c\u8eab\u3002\u8fd9\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6027\u80fd\uff0c\u964d\u4f4e\u4e0e\u5168\u7403\u7f51\u7edc\u76f8\u5173\u7684\u4e2d\u65ad\u7684\u98ce\u9669\uff0c\u5e76\u652f\u6301\u5076\u5c14\u8fde\u63a5\u7684\u573a\u666f\u3002\u5230`2024`\u5e74\uff0c\u5927\u591a\u6570\u4e91\u670d\u52a1\u5e73\u53f0\u5c06\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e9b\u5728\u9700\u8981\u65f6\u6267\u884c\u7684\u670d\u52a1\u3002\u8fd9\u5b9e\u73b0\u4e86\u4f4e\u5ef6\u8fdf\u670d\u52a1\u6267\u884c\uff0c\u5176\u4e2d\u4e91\u670d\u52a1\u66f4\u63a5\u8fd1\u8fdc\u7a0b\u6570\u636e\u4e2d\u5fc3\u7684\u9700\u6c42\u70b9\uff0c\u6216\u8005\u4e00\u76f4\u4f20\u9012\u5230\u8fb9\u7f18\u8bbe\u5907\u672c\u8eab\u3002\u8fd9\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6027\u80fd\uff0c\u964d\u4f4e\u4e0e\u5168\u7403\u7f51\u7edc\u76f8\u5173\u7684\u4e2d\u65ad\u7684\u98ce\u9669\uff0c\u5e76\u652f\u6301\u5076\u5c14\u8fde\u63a5\u7684\u573a\u666f\u3002\u5230`2024`\u5e74\uff0c\u5927\u591a\u6570\u4e91\u670d\u52a1\u5e73\u53f0\u5c06\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e9b\u5728\u9700\u8981\u65f6\u6267\u884c\u7684\u670d\u52a1\u3002\u8fd9\u5b9e\u73b0\u4e86\u4f4e\u5ef6\u8fdf\u670d\u52a1\u6267\u884c\uff0c\u5176\u4e2d\u4e91\u670d\u52a1\u66f4\u63a5\u8fd1\u8fdc\u7a0b\u6570\u636e\u4e2d\u5fc3\u7684\u9700\u6c42\u70b9\uff0c\u6216\u8005\u4e00\u76f4\u4f20\u9012\u5230\u8fb9\u7f18\u8bbe\u5907\u672c\u8eab\u3002\u8fd9\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6027\u80fd\uff0c\u964d\u4f4e\u4e0e\u5168\u7403\u7f51\u7edc\u76f8\u5173\u7684\u4e2d\u65ad\u7684\u98ce\u9669\uff0c\u5e76\u652f\u6301\u5076\u5c14\u8fde\u63a5\u7684\u573a\u666f\u3002\u5230`2024`\u5e74\uff0c\u5927\u591a\u6570\u4e91\u670d\u52a1\u5e73\u53f0\u5c06\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e9b\u5728\u9700\u8981\u65f6\u6267\u884c\u7684\u670d\u52a1\u3002\\n\\n\\n\\n### \u5206\u5e03\u5f0f\u4e91\u7684\u6f14\u53d8\\n\\n#### \u5206\u5e03\u5f0f\u4e91\u6709\u90a3\u51e0\u4e2a\u9636\u6bb5\\n\\n\u6211\u4eec\u9884\u8ba1\u5206\u5e03\u5f0f\u4e91\u8ba1\u7b97\u5c06\u5206\u56db\u4e2a\u9636\u6bb5\u8fdb\u884c\uff1a\\n\\n- **\u9636\u6bb51.** \u76f8\u4f3c\u7684\u6df7\u5408\u6a21\u5f0f\uff0c\u5176\u4e2d\u4e91\u63d0\u4f9b\u5546\u4ee5\u5206\u5e03\u5f0f\u65b9\u5f0f\u4ea4\u4ed8\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u955c\u50cf\u5176\u96c6\u4e2d\u5f0f\u4e91\u4e2d\u7684\u670d\u52a1\u5b50\u96c6\u4ee5\u5728\u4f01\u4e1a\u4e2d\u4ea4\u4ed8\u3002\\n- **\u9636\u6bb52\u3002** \u6309\u9700\u6a21\u578b\u7684\u6269\u5c55\uff0c\u5176\u4e2d\u4e91\u63d0\u4f9b\u5546\u4e0e\u7b2c\u4e09\u65b9\u5408\u4f5c\uff0c\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9\u63d0\u4f9b\u5546\u5411\u76ee\u6807\u793e\u533a\u4ea4\u4ed8\u5176\u96c6\u4e2d\u5f0f\u4e91\u670d\u52a1\u7684\u5b50\u96c6\u3002\u4e00\u4e2a\u4f8b\u5b50\u662f\u901a\u8fc7\u7535\u4fe1\u63d0\u4f9b\u5546\u6216\u6258\u7ba1\u63d0\u4f9b\u5546\u63d0\u4f9b\u670d\u52a1\uff0c\u4ee5\u652f\u6301\u63d0\u4f9b\u5546\u6ca1\u6709\u6570\u636e\u4e2d\u5fc3\u7684\u8f83\u5c0f\u56fd\u5bb6/\u5730\u533a\u5bf9\u6570\u636e\u4e3b\u6743\u7684\u8981\u6c42\u3002\\n- **\u9636\u6bb53\u3002** \u7ec4\u7ec7\u793e\u533a\u5171\u4eab\u5206\u5e03\u5f0f\u4e91\u53d8\u7535\u7ad9\u3002\u6211\u4eec\u4f7f\u7528\u201c\u53d8\u7535\u7ad9\u201d\u4e00\u8bcd\u6765\u5524\u8d77\u4eba\u4eec\u805a\u96c6\u4f7f\u7528\u670d\u52a1\u7684\u5b50\u7ad9\uff08\u4f8b\u5982\u5206\u652f\u90ae\u5c40\uff09\u7684\u5f62\u8c61\u3002\u5982\u679c\u4e91\u5ba2\u6237\u5f00\u653e\u7ed9\u793e\u533a\u6216\u516c\u5171\u4f7f\u7528\uff0c\u5219\u4e91\u5ba2\u6237\u53ef\u4ee5\u51fa\u4e8e\u5e38\u89c1\u6216\u591a\u79cd\u539f\u56e0\u805a\u96c6\u5728\u5206\u5e03\u5f0f\u4e91\u53d8\u7535\u7ad9\u4e2d\uff0c\u4ee5\u4f7f\u7528\u4e91\u670d\u52a1\u3002\u8fd9\u63d0\u9ad8\u4e86\u4e0e\u652f\u4ed8\u5206\u5e03\u5f0f\u4e91\u53d8\u7535\u7ad9\u7684\u5b89\u88c5\u548c\u8fd0\u8425\u76f8\u5173\u7684\u7ecf\u6d4e\u6027\u3002\u5f53\u5176\u4ed6\u516c\u53f8\u4f7f\u7528\u53d8\u7535\u7ad9\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5206\u62c5\u5b89\u88c5\u6210\u672c\u3002\u6211\u4eec\u9884\u8ba1\uff0c\u8bf8\u5982\u7535\u4fe1\u670d\u52a1\u63d0\u4f9b\u5546\u4e4b\u7c7b\u7684\u7b2c\u4e09\u65b9\u5c06\u8003\u8651\u5728\u516c\u5171\u4e91\u63d0\u4f9b\u5546\u7f3a\u5c11\u4f4d\u7f6e\u7684\u4f4d\u7f6e\u521b\u5efa\u53d8\u7535\u7ad9\u3002\u5982\u679c\u53d8\u7535\u7ad9\u5728\u4e3a\u5176\u5b89\u88c5\u4ed8\u8d39\u7684\u7ec4\u7ec7\u5916\u90e8\u4e0d\u5f00\u653e\u4f7f\u7528\uff0c\\n- **\u9636\u6bb54.** \u4f7f\u7528\u5d4c\u5165\u5f0f\u548c\u4e2a\u4eba\u8d44\u6e90\u3002\u793a\u4f8b\u5305\u62ec\u5728\u4e2a\u4eba\u8bbe\u5907\u4e0a\u4f7f\u7528\u672c\u5730\u5904\u7406\uff0c\u5728\u667a\u80fd\u5efa\u7b51\u4e2d\u5d4c\u5165\u529f\u80fd\u4ee5\u53ca\u5728\u8f6f\u4ef6\u5305\u6216\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5d4c\u5165\u7684\u7ec4\u4ef6\u3002\\n\\n\u200b\\t\\t\u5177\u6709\u8bbd\u523a\u610f\u5473\u7684\u662f\uff0c\u5206\u5e03\u5f0f\u4e91\u91c7\u7528\u4e86\u4e0e\u4f4d\u7f6e\u65e0\u5173\u7684\u4e1c\u897f\uff08\u4e91\u8ba1\u7b97\uff09\uff0c\u5f15\u5165\u4e86\u4f4d\u7f6e\u91cd\u8981\u6027\uff0c\u5e76\u6700\u7ec8\u6d88\u9664\u4e86\u5bf9\u4f4d\u7f6e\u7684\u62c5\u5fe7\u3002\u4ee5\u6700\u5b8c\u6574\u7684\u5f62\u5f0f\uff0c\u5206\u5e03\u5f0f\u4e91\u65b9\u6cd5\u5c06\u4f7f\u7ec4\u7ec7\u80fd\u591f\u5411\u4e91\u63d0\u4f9b\u5546\u6307\u5b9a\u5176\u8981\u6c42\uff08\u4f8b\u5982\uff0c\u5408\u89c4\u6027\u548c\u5b89\u5168\u6027\uff0c\u9884\u7b97\u548c\u5bb9\u91cf\uff09\u3002\u4e91\u63d0\u4f9b\u5546\u5c06\u8d8a\u6765\u8d8a\u4ee5\u81ea\u52a8\u5316\u7684\u65b9\u5f0f\u751f\u6210\u6700\u4f73\u914d\u7f6e\uff0c\u800c\u65e0\u9700\u8be6\u7ec6\u7684\u4f4d\u7f6e\u77e5\u8bc6\u3002\u9664\u4e86\u89e3\u51b3\u533a\u57df\uff0c\u6df7\u5408\u548c\u8fb9\u7f18\u95ee\u9898\u4e4b\u5916\uff0c\u5206\u5e03\u5f0f\u4e91\u65b9\u6cd5\u8fd8\u5c06\u652f\u6301\u5176\u4ed6\u65b9\u6848\u3002\u8fd9\u4e9b\u5305\u62ec\u9488\u5bf9\u653f\u5e9c\u548c\u7279\u5b9a\u884c\u4e1a\u793e\u533a\u4e91\u7684\u4e13\u7528\u8fde\u63a5\u5b9e\u65bd\uff0c\u4ee5\u53ca\u53ef\u80fd\u6ee1\u8db3\u5730\u7f18\u653f\u6cbb\u9700\u6c42\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6b64\u7c7b\u5730\u7f18\u653f\u6cbb\u95ee\u9898\u5bfc\u81f4\u8d8a\u6765\u8d8a\u591a\u7684\u56fd\u5bb6\u5173\u6ce8\u4e0e\u4e3b\u8981\u4e92\u8054\u7f51\u7684\u8fde\u63a5\u3002\u5176\u4e2d\u5305\u62ec\u5ba1\u67e5\u5236\u5ea6\uff0c\u5b89\u5168\u6027\uff0c\u9690\u79c1\u6743\u548c\u6570\u636e\u4e3b\u6743\u3002\u4e92\u8054\u7f51\u548c\u4e91\u65b9\u6848\u7684\u8fd9\u79cd\u201c\u788e\u7247\u5316\u201d\u65e0\u89c6\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848-\u5206\u5e03\u5f0f\u4e91\u529f\u80fd\u53ef\u4ee5\u63d0\u4f9b\u5e2e\u52a9\u3002\\n\\n#### \u5206\u5e03\u5f0f\u4e91\u7684\u8def\u5f84\\n\\n\u200b\\t\\t\u5206\u5e03\u5f0f\u4e91\u5904\u4e8e\u5f00\u53d1\u7684\u65e9\u671f\u9636\u6bb5\u3002\u8bb8\u591a\u63d0\u4f9b\u5546\u7684\u76ee\u6807\u662f\u957f\u671f\u63d0\u4f9b\u5206\u5e03\u5f0f\u7684\u5927\u591a\u6570\u516c\u5171\u670d\u52a1\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u76ee\u524d\u4ec5\u4ee5\u5206\u5e03\u5f0f\u65b9\u5f0f\u63d0\u4f9b\u6709\u9650\u7684\u6d88\u8d39\u6a21\u578b\uff08\u5f62\u72b6\u56e0\u6570\uff09\uff0c\u4ec5\u63d0\u4f9b\u5176\u670d\u52a1\u7684\u4e00\u4e2a\u5b50\u96c6\uff08\u901a\u5e38\u662f\u4e00\u5c0f\u90e8\u5206\uff09\u3002\u4e00\u4e9b\u63d0\u4f9b\u5546\u4e0d\u652f\u6301\u5b8c\u6574\u5206\u5e03\u5f0f\u4e91\u7684\u5b8c\u6574\u4ea4\u4ed8\uff0c\u64cd\u4f5c\u548c\u66f4\u65b0\u5143\u7d20\u3002\u63d0\u4f9b\u5546\u6b63\u5728\u5c06\u670d\u52a1\u6269\u5c55\u5230\u672c\u5730\u6570\u636e\u4e2d\u5fc3\uff0c\u7b2c\u4e09\u65b9\u6570\u636e\u4e2d\u5fc3\u548c\u8fb9\u7f18\u3002\u4ed6\u4eec\u901a\u8fc7`Microsoft Azure Stack`\uff0c\u5ba2\u6237\u7684`Oracle Cloud`\uff0c`Google Anthos`\uff0c`IBM Red Hat`\u548c`AWS Outposts`\uff08\u4ee5\u53ca`AWS Local Zones`\u548c`AWS Wavelength`\uff09\u7b49\u4ea7\u54c1\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u5206\u5c42\u6280\u672f\u5305\u88c5\u65b9\u6cd5\u3002\u5728\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e91\u7684\u613f\u666f\u65b9\u9762\uff0c\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6d89\u53ca\u6311\u6218\u3002\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5f80\u5f80\u4f1a\u5bfc\u81f4\u56f4\u5899\u82b1\u56ed\u3002\u5206\u5c42\u65b9\u6cd5\u53ef\u80fd\u4f1a\u9762\u4e34\u4ea4\u4ed8\u4fbf\u643a\u5f0f\u5f00\u653e\u8f6f\u4ef6\u7684\u6311\u6218\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u53ef\u4ee5\u5e26\u6765\u4e00\u4e2a\u5f00\u653e\u7684\uff0c\u5b8c\u5168\u6258\u7ba1\u7684\u591a\u4e91\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u8981\u901a\u8fc7\u4e0d\u540c\u7684\u9014\u5f84\u5e76\u9762\u4e34\u622a\u7136\u4e0d\u540c\u7684\u6311\u6218\u3002\\n\\n### \u884c\u52a8\\n\\n\u4f01\u4e1a\u67b6\u6784\u548c\u6280\u672f\u521b\u65b0\u9886\u5bfc\u8005\u5fc5\u987b\uff1a\\n\\n- \u901a\u8fc7\u5b9a\u4f4d\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u7528\u4f8b\uff0c\u4f7f\u7528\u5206\u5e03\u5f0f\u4e91\u6a21\u578b\u4e3a\u4e0b\u4e00\u4ee3\u4e91\u8ba1\u7b97\u505a\u51c6\u5907\u7684\u673a\u4f1a\u3002\\n- \u901a\u8fc7\u4f7f\u7528\u5206\u5e03\u5f0f\u4e91\u7684\u6309\u9700\u6df7\u5408\u7279\u6027\uff0c\u514b\u670d\u79c1\u6709\u4e91\u548c\u6df7\u5408\u4e91\u5b9e\u73b0\u4e2d\u7684\u4e0d\u8db3\u3002\\n- \u786e\u5b9a\u5206\u5e03\u5f0f\u4e91\u7684\u672a\u6765\u9636\u6bb5\uff08\u4f8b\u5982\uff0c\u4f4e\u5ef6\u8fdf\uff0c\u9650\u5236\u89c4\u6a21\u548c\u6570\u636e\u9a7b\u7559\uff09\u7684\u4f7f\u7528\u6848\u4f8b\uff0c\u8fd9\u4e9b\u4f7f\u7528\u6848\u4f8b\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u5206\u5e03\u5f0f\u4e91\u53d8\u7535\u7ad9\u6765\u589e\u5f3a\u3002\\n- \u786e\u5b9a\u573a\u666f\uff0c\u5728\u8fd9\u4e9b\u573a\u666f\u4e2d\uff0c\u5206\u5e03\u5f0f\u4e91\u6a21\u578b\u5c06\u6d88\u9664\u5bf9\u201c\u4f20\u7edf\u201d\u6df7\u5408\u4e91\u6a21\u578b\u7684\u9700\u6c42\uff0c\u5e76\u4e14\u5c06\u6301\u7eed\u9700\u8981\u591a\u5e74\u7684\u6df7\u5408\u4e91\u6a21\u578b\u3002\\n- \u8c03\u67e5\u4f7f\u4e91\u63d0\u4f9b\u5546\u8d1f\u8d23\u751a\u81f3\u5185\u90e8\u90e8\u7f72\u7684\u4e91\u64cd\u4f5c\uff0c\u4ee5\u514b\u670d\u5f53\u4eca\u7684\u79c1\u6709\u4e91\u548c\u6df7\u5408\u4e91\u8ba1\u7b97\u7684\u5931\u8d25\u548c\u4e0d\u8db3\u3002\\n\\n\u5229\u7528\u589e\u52a0\u7684\u4e91\u8ba1\u7b97\u90e8\u7f72\u9009\u9879\u63d0\u4f9b\u7684\u7075\u6d3b\u6027\u3002"},{"id":"Kubernetes-Network","metadata":{"permalink":"/blog/Kubernetes-Network","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2021-05-13-Kubernetes-Network.md","source":"@site/blog/2021-05-13-Kubernetes-Network.md","title":"Kubernetes Network","description":"Kubernetes Network \u57fa\u672c\u6982\u5ff5\u548c\u539f\u7406","date":"2021-05-13T00:00:00.000Z","tags":[{"inline":false,"label":"Kubernetes","permalink":"/blog/tags/kubernetes","description":"kubernetes"},{"inline":false,"label":"Kubernetes Network","permalink":"/blog/tags/kubernetes-network","description":"Kubernetes Network"}],"readingTime":20.085,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"Kubernetes-Network","title":"Kubernetes Network","authors":["rongfu"],"tags":["Kubernetes","Kubernetes Network"]},"unlisted":false,"prevItem":{"title":"2020\u5e74\u5341\u5927\u6218\u7565\u6280\u672f\u8d8b\u52bf\uff1a\u5206\u5e03\u5f0f\u4e91","permalink":"/blog/\u5206\u5e03\u5f0f\u4e91"},"nextItem":{"title":"go channel \u5b9e\u73b0","permalink":"/blog/go-channel\u6e90\u7801"}},"content":"Kubernetes Network \u57fa\u672c\u6982\u5ff5\u548c\u539f\u7406\\n\x3c!-- truncate --\x3e\\n\\n## \u4e00\u3001\u5355\u673a\u5bb9\u5668\u7f51\u7edc\\n\\n### \u540d\u8bcd\\n\\n* \u7f51\u7edc\u6808\uff1a\u7f51\u7edc\u6808\u5305\u62ec\u4e86\u7f51\u5361\\\\(`Network Interface`\\\\)\u3001\u56de\u73af\u8bbe\u5907\\\\(`Loopback Device`\\\\)\u3001\u8def\u7531\u8868\\\\(`Routing Table`\\\\)\u548c`Iptables`\u89c4\u5219\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\u6765\u8bf4\uff0c\u8fd9\u4e9b\u8981\u7d20\uff0c\u5c31\u6784\u6210\u4e86\u5b83\u53d1\u8d77\u8bf7\u6c42\u548c\u54cd\u5e94\u7f51\u7edc\u8bf7\u6c42\u7684\u57fa\u672c\u73af\u5883\u3002\\n* \u7f51\u6865\\\\(`Bridge`\\\\)\uff1a`bridge`\u662f\u4e00\u4e2a\u865a\u62df\u7f51\u7edc\u8bbe\u5907\uff0c\u6240\u4ee5\u5177\u6709\u7f51\u7edc\u8bbe\u5907\u7684\u7279\u5f81\uff0c\u53ef\u4ee5\u914d\u7f6e`IP`\u3001`MAC`\u5730\u5740\uff1b`Bridger`\u662f\u4e00\u4e2a\u865a\u62df\u4ea4\u6362\u673a\uff0c\u5177\u6709\u548c\u7269\u7406\u4ea4\u6362\u673a\u7c7b\u4f3c\u7684\u529f\u80fd\u3002\u5b83\u662f\u5de5\u4f5c\u5728\u6570\u636e\u94fe\u8def\u5c42\u7684\u8bbe\u5907\u3002\\n* `Veth Pair`: \u865a\u62df\u7f51\u7ebf\uff0c\u7528\u6765\u8fde\u63a5\u5bb9\u5668\u5230\u7f51\u6865\u4e0a\u7684\uff1b\u5b83\u88ab\u521b\u5efa\u51fa\u6765\u4ee5\u540e\uff0c\u603b\u662f\u4ee5\u4e24\u5f20\u865a\u62df\u7f51\u5361\\\\(`Veth Peer`\\\\)\u7684\u5f62\u5f0f\u6210\u5bf9\u51fa\u73b0\uff0c\u5e76\u4e14\uff0c\u4ece\u5176\u4e2d\u4e00\u4e2a\u7f51\u5361\u53d1\u51fa\u7684\u6570\u636e\u5305\u4f1a\u81ea\u52a8\u51fa\u73b0\u5728\u4e0e\u4e4b\u5bf9\u5e94\u7684\u7f51\u5361\u4e0a\uff0c\u54ea\u6015\u662f\u8fd9\u4e24\u5f20_\\\\*\u7f51\u5361_\u5728\u4e0d\u540c\u7684`Network Namespace`\u4e2d\u3002\\n* `ARP`: \u662f\u4e00\u4e2a\u901a\u8fc7\u4e09\u5c42\u7684`IP`\u5730\u5740\u627e\u5230\u5bf9\u5e94\u4e8c\u5c42`MAC`\u5730\u5740\u7684\u534f\u8bae\u3002\\n* `CAM\u8868`\uff1a\u865a\u62df\u4ea4\u6362\u673a\\\\(\u8fd9\u91cc\u662f\u7f51\u6865\\\\)\u901a\u8fc7`MAC`\u5730\u5740\u5b66\u4e60\u7ef4\u62a4\u7684\u7aef\u53e3\u548c`MAC`\u5730\u5740\u7684\u5bf9\u5e94\u8868\u3002\\n\\n### Host\u7f51\u7edc\\n\\n \u4f5c\u4e3a\u4e00\u4e2a\u5bb9\u5668\uff0c\u5728\u542f\u52a8\u65f6\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a`-net=host`\uff0c\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684`Network Namespace`\u3002\\n\\n```text\\n$ docker run -d -net=host --name nginx-1 nginx\\n```\\n\\n \u4f7f\u7528`Host`\u7f51\u7edc\u7684\u4f18\u70b9\u662f\u7f51\u7edc\u6027\u80fd\u8f83\u597d\uff0c\u76f4\u63a5\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u7f51\u7edc\u6808\uff0c\u7f3a\u70b9\u662f\u4f1a\u5f15\u5165\u5171\u4eab\u7f51\u7edc\u8d44\u6e90\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u7aef\u53e3\u51b2\u7a81\u3002**\u6240\u4ee5\uff0c\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u80fd\u4f7f\u7528\u81ea\u5df1Network Namespace\u91cc\u7684\u7f51\u7edc\u6808\uff0c\u62e5\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684IP\u548c\u7aef\u53e3\u3002**\\n\\n### \u5982\u4f55\u901a\u4fe1\\n\\n![&#x5355;&#x8282;&#x70B9;&#x5BB9;&#x5668;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;](https://gitee.com/lengrongfu/blog-static-file/raw/master/single_node_container_network.png)\\n\\n \u5982\u4e0a\u56fe\uff0c\u63cf\u8ff0\u4e86\u5355\u8282\u70b9\u5bb9\u5668\u7f51\u7edc\u7684\u901a\u4fe1\u6d41\u7a0b\uff0c\u4e0b\u9762\u4e3b\u8981\u6309`C1->C2`\u7684\u8bbf\u95ee\u6d41\u7a0b\u6765\u8be6\u7ec6\u63cf\u8ff0\u4ea4\u4e92\u6d41\u7a0b:\\n\\n```text\\n# \u5148\u521b\u5efa\u4e24\u4e2a\u5bb9\u5668\uff0c\u7528\u4e8e\u6a21\u62df\u53d1\u8d77\u8bf7\u6c42,\u542f\u52a8\u4e24\u4e2acentos\u5bb9\u5668\uff0c\u5e76\u5728\u91cc\u9762\u5b89\u88c5net-tools\u5de5\u5177\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528ifconfig\u547d\u4ee4\\n# \u521b\u5efaC1\uff0c\u5e76\u5b89\u88c5net-tools\\n$ docker run -d -it --name c1 centos /bin/bash\\n$ docker exec -it c1 bash\\n$ [root@60671509044e /]# yum install -y net-tools\\n# \u521b\u5efaC2\uff0c\u5e76\u5b89\u88c5net-tools\\n$ docker run -d -it --name c2 centos /bin/bash\\n$ docker exec -it c2 bash\\n$ [root@94a6c877b01a /]# yum install -y net-tools\\n```\\n\\n* \u5bb9\u5668`C1`\u548c`C2`\u542f\u52a8\u4e4b\u540e\uff0c\u5728\u5bb9\u5668\u4e2d\u90fd\u6709\u4e00\u6761\u9ed8\u8ba4\u7684\u8def\u7531\u89c4\u5219\uff0c\u5f53\u524d\u5bb9\u5668\u7f51\u6bb5\u7684\u6240\u6709\u8bf7\u6c42\u90fd\u4f1a\u8d70`eth0`\u7f51\u5361\u8bbe\u5907\u3002\\n  * C1\\n\\n```text\\n# \u8fdb\u5165c1\u5bb9\u5668\uff0c\u67e5\u770bip\u4ee5\u53ca\u8def\u7531\u8868\\n$ docker exec -it c1 bash\\n# \u67e5\u770bIP\\n$ ifconfig\\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\\n        inet 172.17.0.7  netmask 255.255.0.0  broadcast 172.17.255.255\\n        ether 02:42:ac:11:00:07  txqueuelen 0  (Ethernet)\\n        RX packets 6698  bytes 9678058 (9.2 MiB)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 3518  bytes 195061 (190.4 KiB)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n\\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\\n        inet 127.0.0.1  netmask 255.0.0.0\\n        loop  txqueuelen 1000  (Local Loopback)\\n        RX packets 0  bytes 0 (0.0 B)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 0  bytes 0 (0.0 B)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n# \u67e5\u770b\u8def\u7531       \\n$ route\\nKernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\ndefault         _gateway        0.0.0.0         UG    0      0        0 eth0\\n172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 eth0\\n```\\n\\n* `C2`\\n\\n```text\\n# \u8fdb\u5165C2\u5bb9\u5668\u67e5\u770bIP\u548c\u8def\u7531\u8868\\n$ docker exec -it c2 bash\\n$ ifconfig\\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\\n        inet 172.17.0.8  netmask 255.255.0.0  broadcast 172.17.255.255\\n        ether 02:42:ac:11:00:08  txqueuelen 0  (Ethernet)\\n        RX packets 6771  bytes 9681937 (9.2 MiB)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 3227  bytes 179347 (175.1 KiB)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n\\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\\n        inet 127.0.0.1  netmask 255.0.0.0\\n        loop  txqueuelen 1000  (Local Loopback)\\n        RX packets 0  bytes 0 (0.0 B)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 0  bytes 0 (0.0 B)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n# \u67e5\u770b\u8def\u7531\\n$ route\\nKernel IP routing table\\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\\ndefault         _gateway        0.0.0.0         UG    0      0        0 eth0\\n172.17.0.0      0.0.0.0         255.255.0.0     U     0      0        0 eth0\\n```\\n\\n\u4e0a\u8ff0\u5bb9\u5668\u73b0\u5b9e\u6709\u81ea\u5df1\u7684`IP`\u4ee5\u53ca`MAC`\u5730\u5740\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5bb9\u5668\u4e2d\u90fd\u6709\u9ed8\u8ba4\u8def\u7531`_gateway`\u6307\u5411`eth0`\u7f51\u5361\uff1b\u5e76\u4e14`_gateway`\u6709\u5bf9\u5e94\u7684`MAC`\u5730\u5740\u5df2\u7ecf\u5b58\u5728\u4e8e\u672c\u5730`ARP`\u7f13\u5b58\u4e2d\u3002\\n\\n* \u4e3b\u673a\u4e4b\u95f4\u7f51\u7edc\u901a\u4fe1\u9700\u8981\u7528\u5230`MAC`\u5730\u5740\uff0c\u8fd9\u662f\u6570\u636e\u94fe\u8def\u5c42\u8bc6\u522b\u4e3b\u673a\u7684\u65b9\u5f0f\uff0c`C1`\u8bbf\u95ee`C2`\u7684\u65f6\u5019\u4f1a\u5148\u4ece\u672c\u5730`ARP`\u7f13\u5b58\u4e2d\u67e5\u627e\u662f\u5426\u6709`C2`\u5bb9\u5668\u5bf9\u5e94\u7684`IP:172.17.0.3`\u7684`MAC`\u5730\u5740\u3002\u5982\u679c\u6ca1\u6709\u5c31\u4f1a\u53d1\u8d77`ARP`\u534f\u8bae\u67e5\u627e`MAC`\u5730\u5740\u3002\\n\\n```text\\n# c1 -> c2 ,\u5148\u53d1\u8d77ARP\u8bf7\u6c42\u67e5\u627eMAC\u5730\u5740\uff0c\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u67e5\u770bARP\u7f13\u5b58\u5bf9\u5e94IP\u7684MAC\\n$ docker exec -it c1 bash\\n# \u5148\u67e5\u770b\u672c\u5730\u7684ARP\u7f13\u5b58\\n$ [root@94a6c877b01a /]# arp\\nAddress                  HWtype  HWaddress           Flags Mask            Iface\\n_gateway                 ether   02:42:2e:8d:21:d6   C                     eth0\\n# \u6267\u884cping\u547d\u4ee4\u5c31\u4f1a\u53d1\u8d77ARP\u5bfb\u5740\u8bf7\u6c42\\n$ ping 172.17.0.8\\n# \u518d\u67e5\u8be2\u672c\u5730arp\u7f13\u5b58\uff0c\u53d1\u73b0\u5df2\u7ecf\u6709MAC\u5730\u5740\u5b58\u5728\u4e86\\n$ [root@60671509044e /]# arp\\nAddress                  HWtype  HWaddress           Flags Mask            Iface\\n172.17.0.8               ether   02:42:ac:11:00:08   C                     eth0\\n_gateway                 ether   02:42:2e:8d:21:d6   C                     eth0\\n```\\n\\n`ARP`\u5bfb\u5740\u6d41\u7a0b\uff1a`C1`\u5bb9\u5668\u53d1\u8d77`ARP`\u8bf7\u6c42\uff0c\u8fdb\u8fc7\u672c\u5730\u8def\u7531\u534f\u8bae\u4e4b\u540e\u4f1a\u628a\u8bf7\u6c42\u8def\u7531\u5230\u7f51\u6865\u4e0a\uff0c\u6b64\u65f6\u7f51\u6865\\\\(`Bridge`\\\\)\u5145\u5f53\u4e00\u4e2a\u865a\u62df\u4ea4\u6362\u673a\uff0c\u865a\u62df\u4ea4\u6362\u673a\u4f1a\u628a`ARP`\u5e7f\u64ad\u5230\u5176\u5b83\u63d2\u5165\u5230\u7f51\u6865\u7684\u6240\u6709\u5bb9\u5668\uff0c`C2`\u6536\u5230`ARP`\u534f\u8bae\u4e4b\u540e\u4f1a\u56de\u590d`MAC`\u5730\u5740\u3002\\n\\n* \u67e5\u627e\u5230`C2`\u7684`MAC`\u5730\u5740\u4e4b\u540e\u5c31\u53ef\u4ee5\u53d1\u8d77\u901a\u4fe1\u3002\\n\\n## \u4e8c\u3001\u8de8\u4e3b\u673a\u5bb9\u5668\u901a\u4fe1\\n\\n> \u8de8\u4e3b\u673a\u4e4b\u95f4\u5bb9\u5668\u901a\u4fe1\u6309\u662f\u5426\u4f9d\u8d56\u5e95\u5c42\u7f51\u7edc\u73af\u5883\u6765\u5212\u5206\u4e3b\u8981\u5206\u4e3a`Overlay`\u548c`Underlay`\u4e24\u79cd\u7f51\u7edc\u7ed3\u6784\uff0c`Overlay`\u7f51\u7edc\u8981\u6c42\u53ea\u662f\u4e3b\u673a\u4e4b\u95f4\u7f51\u7edc\u53ef\u8fbe\u5373\u53ef\uff0c\u4e0d\u8981\u6c42\u4e3b\u673a\u4e4b\u95f4\u540c\u5904\u4e8c\u5c42\u57df\uff1b`Underlay`\u5bf9\u5e95\u5c42\u7684\u57fa\u7840\u8bbe\u65bd\u6709\u8981\u6c42\uff0c\u6309\u7167\u5b9e\u73b0\u7684\u65b9\u5f0f\u5bf9\u5e95\u5c42\u7684\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u6709\u4e0d\u540c\u7684\u8981\u6c42\uff0c\u6bd4\u5982`Flanan host-gw`\u7ec4\u4ef6\u8981\u6c42\u4e3b\u673a\u4e4b\u95f4\u540c\u5904\u4e8c\u5c42\u57df\uff0c\u4e5f\u5c31\u662f\u4e3b\u673a\u4e4b\u95f4\u8981\u8fde\u63a5\u5230\u4e00\u4e2a\u4ea4\u6362\u673a\u4e0a\u3002\\n\\n#### \u540d\u8bcd\\n\\n- `Overlay Network`(\u8986\u76d6\u7f51\u7edc): \u5728\u5df2\u6709\u7684\u5bbf\u4e3b\u673a\u7f51\u7edc\u4e4b\u4e0a\uff0c\u901a\u8fc7\u8f6f\u4ef6\u6784\u5efa\u4e00\u4e2a\u8986\u76d6\u5728\u5bbf\u4e3b\u673a\u7f51\u7edc\u4e4b\u4e0a\u7684\u3001\u53ef\u4ee5\u628a\u6240\u6709\u5bb9\u5668\u8fde\u901a\u5728\u4e00\u8d77\u7684\u865a\u62df\u7f51\u7edc\u3002\\n- `Tun\u8bbe\u5907(Tunnel\u8bbe\u5907)`\uff1a\u5728`Linux`\u4e2d\uff0c`TUN`\u8bbe\u5907\u662f\u4e00\u79cd\u5de5\u4f5c\u5728\u4e09\u5c42\uff08`Network Layer`\uff09\u7684\u865a\u62df\u7f51\u7edc\u8bbe\u5907;`Tun`\u8bbe\u5907\u7684\u529f\u80fd\u5c31\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u548c\u7528\u6237\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u4f20\u9012`IP`\u5305\uff0c\\n- `VXLAN`: \u865a\u62df\u53ef\u6269\u5c55\u5c40\u57df\u7f51(`Virtual Extensible LAN`),\u662f`LINUX`\u5185\u6838\u652f\u6301\u7684\u4e00\u79cd\u7f51\u7edc\u865a\u62df\u5316\u6280\u672f\uff0c`VXLAN`\u5b8c\u5168\u5728\u5185\u6838\u6001\u5b9e\u73b0\u7f51\u7edc\u6570\u636e\u5305\u7684\u5c01\u88c5\u548c\u89e3\u5c01\u88c5\u3002\\n- `VTEP`\uff1a\u865a\u62df\u96a7\u9053\u7aef\u70b9\u8bbe\u5907\uff0c\u5b83\u65e2\u6709`IP`\uff0c\u4e5f\u6709`MAC`\u5730\u5740\u3002\\n- `BGP`: \u8fb9\u754c\u7f51\u5173\u534f\u8bae\uff08`Border Gateway Protocol`\uff09,\u5b83\u662f\u4e00\u4e2a`Linux`\u5185\u6838\u539f\u751f\u5c31\u652f\u6301\u7684\u3001\u4e13\u95e8\u7528\u5728\u5927\u89c4\u6a21\u6570\u636e\u4e2d\u5fc3\u91cc\u7ef4\u62a4\u4e0d\u540c\u7684\u81ea\u6cbb\u7cfb\u7edf\u4e4b\u95f4\u8def\u7531\u4fe1\u606f\u7684\u3001\u65e0\u4e2d\u5fc3\u7684\u8def\u7531\u534f\u8bae\u3002\\n\\n### \u8de8\u4e3b\u673a\u901a\u4fe1\\n\\n \u8de8\u4e3b\u673a\u4e4b\u95f4\u7684\u5bb9\u5668\u901a\u4fe1\uff0c\u901a\u8fc7\u91c7\u7528`Overlay Network`\u6765\u5b9e\u73b0\u8de8\u4e3b\u673a\u4e4b\u95f4\u7684\u5bb9\u5668\u901a\u4fe1\uff0c`Overlay Network`\u7684\u5b9e\u73b0\u6709\u591a\u79cd\u65b9\u5f0f\u3002\\n\\n![Overlay Network](https://gitee.com/lengrongfu/blog-static-file/raw/master/overlay_network.png)\\n\\n### Overlay \u6a21\u5f0f\\n\\n##### 1\u3001\u4e09\u5c42Flannel UDP\\n\\n> `Flannel UDP`\u6a21\u5f0f\u662f`Flannel`\u6700\u5f00\u59cb\u63d0\u4f9b\u7684\u4e00\u79cd\u6700\u7b80\u5355\u4e14\u6700\u6613\u5b9e\u73b0\u7684\u5bb9\u5668\u8de8\u4e3b\u7f51\u7edc\u65b9\u6848\uff0c\u4f46\u662f\u56e0\u4e3a\u6027\u80fd\u6700\u5dee\uff0c\u6240\u4ee5\u540e\u6765\u88ab\u5f03\u7528\u3002\u4f46\u662f\u5bf9\u4e8e\u7406\u89e3`Overlay`\u7684\u5b9e\u73b0\u65b9\u5f0f\u8fd8\u662f\u5f88\u6709\u53c2\u8003\u610f\u4e49\u7684\u3002\\n\\n\u6211\u4eec\u4ee5\u4e00\u4e2a\u4f8b\u5b50\u6765\u8bb2\u8ff0\u8fd9\u4e2a\u7f51\u7edc\u8bbf\u95ee\u7684\u6d41\u7a0b\uff0c\u5728\u8fd9\u4e2a\u6d41\u7a0b\u4e2d\uff0c\u6709\u4e24\u53f0\u5bbf\u4e3b\u673a\uff0c\u56db\u4e2a\u5bb9\u5668\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7`Container-1`\u5bb9\u5668\u8bf7\u6c42`Container-4`\u3002\\n\\n![](https://gitee.com/lengrongfu/blog-static-file/raw/master/flannel_udp_network.png)\\n\\n`Container-1`\u5bb9\u5668\u5411`Container-4`\u5bb9\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c`Docker0`\u662f\u4f4d\u4e8e`Root Network Namespace`\u7684\uff0c\u901a\u8fc7`veth peer`\u4e00\u5934\u8fde\u7740\u5bb9\u5668\u7684`Network Namespace`\u4e00\u5934\u8fde\u7740\u4f4d\u4e8e`Root Netwrok Namespace`\u7684`Docker0`\u865a\u62df\u7f51\u7edc\u8bbe\u5907\u3002\\n\\n- \u5bb9\u5668`100.96.1.2`\u8bbf\u95ee`100.96.2.2`\uff0c\u7531\u4e8e\u76ee\u7684\u5730\u5740\u4e0d\u5728`Docker0`\u7f51\u6865\u7684\u7f51\u6bb5\u5185(\u901a\u8fc7`ARP`\u8bf7\u6c42\u4e00\u6b21\u5c31\u77e5\u9053\u76ee\u6807\u5bb9\u5668\u4e0d\u5728\u6b64\u7f51\u6865\u4e0a)\uff0c\u6240\u4ee5\u8fd9\u4e2a`IP`\u4f1a\u6267\u884c`Container-1`\u7684\u9ed8\u8ba4\u8def\u7531\u89c4\u5219\u4e2d\uff0c\u5bb9\u5668\u4e2d\u7684\u9ed8\u8ba4\u8def\u7531\u89c4\u5219\u5c31\u662f\u5982\u4e0b\u7684`default via 172.17.0.1 dev eth0 `\u3002\u5bf9\u5e94\u5230\u4e0a\u56fe\u7684\u6b65\u9aa41\u3002\\n\\n```shell\\n# \u5bb9\u5668\u4e2d\u9ed8\u8ba4\u8bbe\u7f6e\u7684\u7684\u8def\u7531\u89c4\u5219\uff0c\\n[root@94a6c877b01a /]# ip route\\ndefault via 172.17.0.1 dev eth0 \\n172.17.0.0/16 dev eth0 proto kernel scope link src 172.17.0.2 \\n# \u4e0b\u4e00\u8df3\u662f172.17.0.1\u4e14\u4eceeth0\u8bbe\u5907\u4e0a\u51fa\u53bb\uff0c\u901a\u8fc7\u67e5\u770bdocker\u7684\u7f51\u7edc\uff0c172.17.0.1\u5c31\u662fbridge\u8bbe\u5907\u7684\u7f51\u5173IP\\nlengrongfu@MacintoshdeMacBook-Pro ~ % docker network ls        \\nNETWORK ID     NAME                               DRIVER    SCOPE\\ne522990979b3   bridge                             bridge    local\\n# \u67e5\u770b\u7f51\u7edc\\nlengrongfu@MacintoshdeMacBook-Pro ~ % docker inspect network e522990979b3\\n[\\n    {\\n        \\"Name\\": \\"bridge\\",\\n        \\"Id\\": \\"e522990979b365e9df4d967c3600483e598e530361deb28513b6e75b8b66bedf\\",\\n        \\"Created\\": \\"2021-04-12T12:11:57.321486866Z\\",\\n        \\"Scope\\": \\"local\\",\\n        \\"Driver\\": \\"bridge\\",\\n        \\"EnableIPv6\\": false,\\n        \\"IPAM\\": {\\n            \\"Driver\\": \\"default\\",\\n            \\"Options\\": null,\\n            \\"Config\\": [\\n                {\\n                    \\"Subnet\\": \\"172.17.0.0/16\\",\\n                    \\"Gateway\\": \\"172.17.0.1\\"\\n                }\\n            ]\\n        },\\n        \\"Internal\\": false,\\n        \\"Attachable\\": false,\\n        \\"Ingress\\": false,\\n        \\"ConfigFrom\\": {\\n            \\"Network\\": \\"\\"\\n        },\\n        \\"ConfigOnly\\": false,\\n        \\"Containers\\": {\\n            \\"94a6c877b01ac3a1638f1c5cde87e7c58be9ce0aafd4a78efcb96528ab00ed94\\": {\\n                \\"Name\\": \\"c2\\",\\n                \\"EndpointID\\": \\"a5c12fb3800991228f8dc3a2a8de1d6f4865439701a83558e4430c2aebf783a8\\",\\n                \\"MacAddress\\": \\"02:42:ac:11:00:02\\",\\n                \\"IPv4Address\\": \\"172.17.0.2/16\\",\\n                \\"IPv6Address\\": \\"\\"\\n            }\\n        },\\n        \\"Options\\": {\\n            \\"com.docker.network.bridge.default_bridge\\": \\"true\\",\\n            \\"com.docker.network.bridge.enable_icc\\": \\"true\\",\\n            \\"com.docker.network.bridge.enable_ip_masquerade\\": \\"true\\",\\n            \\"com.docker.network.bridge.host_binding_ipv4\\": \\"0.0.0.0\\",\\n            \\"com.docker.network.bridge.name\\": \\"docker0\\",\\n            \\"com.docker.network.driver.mtu\\": \\"1500\\"\\n        },\\n        \\"Labels\\": {}\\n    }\\n]\\n```\\n\\n- \u8fdb\u5165\u5230`Docker0`\u7f51\u6865\u4e4b\u540e\u5c31\u6309\u7167\u4e3b\u673a\u4e0a\u7684\u8def\u7531\u53d6\u51b3\u4e8e\u540e\u7eed\u5982\u4f55\u8d70\u3002\u5982\u4e0b\u5c31\u662f\u4e3b\u673a\u7684\u8def\u7531\u8868\uff0c\u8bbf\u95ee\u76ee\u6807`IP`\u4e3a`100.96.2.2`\u7684\u8bbe\u5907\u4f1a\u547d\u4e2d\u7b2c\u4e8c\u6761\u5339\u914d\u89c4\u5219\uff0c\u610f\u601d\u662f\u8bbf\u95ee`100.96.0.0/16`\u7f51\u6bb5\u7684\u6570\u636e\u53bb`flannel0`\u8bbe\u5907\uff0c\u5e76\u4e14\u613f`IP`\u4e3a`100.96.1.0`\u3002\u5bf9\u5e94\u5230\u4e0a\u56fe\u7684\u6b65\u9aa42\u3002\\n\\n```shell\\n# Node1\u8def\u7531\u8868\\n$ ip route\\n1 Default via 10.168.0.1 dev eth0\\n2 100.96.0.0/16 dev flannel0 proto kernel scope link src 100.96.1.0\\n3 100.96.1.0/24 dev docker0 proto kernel scope link src 100.96.1.1\\n4 10.168.0.0/24 dev eth0 proto kernel scope link src 10.168.0.2\\n```\\n\\n###### Flannel0\u8bbe\u5907\\n\\n- \u4e0a\u8ff0\u8bf4\u4e86`Flannel0`\u662f\u4e00\u4e2a`TUN`\u865a\u62df\u4e09\u5c42\u7f51\u7edc\u8bbe\u5907\uff0c\u4e3b\u8981\u662f\u5728\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u4e4b\u95f4\u4f20\u9012`IP`\u5305\uff1b\u7ee7\u7eed\u6309\u4e0a\u8ff0\u7684\u6d41\u7a0b\u5206\u6790\uff0c\u6570\u636e\u62a5\u6587\u4ece\u5185\u6838\u6001\u5230\u8fbe`Flannel0`\u8bbe\u5907\u4e4b\u540e\uff0c\u4f1a\u88ab\u4f20\u9012\u7ed9\u521b\u5efa`Flannel0`\u8bbe\u5907\u7684\u8fdb\u7a0b\u4e5f\u5c31\u662f`FlannelD`\u8fdb\u7a0b\uff0c\u7136\u540e`flanneld`\u8fdb\u7a0b\u770b\u5230\u76ee\u7684\u5730\u5740\u662f`100.96.2.2`,\u5c31\u628a\u6570\u636e\u62a5\u6587\u53d1\u9001\u5230`Node2`\u8282\u70b9\u4e0a\u7684`flanneld`\u8fdb\u7a0b\u76d1\u542c\u7684`UDP`\u7aef\u53e3\u4e0a\u3002`flanneld`\u4f1a\u628a\u8981\u53d1\u9001\u7684\u6570\u636e\u5c01\u88c5\u4e3a\u4e00\u4e2a`UDP`\u6570\u636e\u5305\u53d1\u51fa\u53bb\u3002\u5bf9\u5e94\u5230\u4e0a\u56fe\u7684\u6b65\u9aa43\u30014\u30015\u30016\u3002\\n  - `flanneld`\u8fdb\u7a0b\u662f\u600e\u4e48\u77e5\u9053`100.96.2.2`\u8fd9\u4e2a`ip`\u5728`Node2`\u4e0a\u5462\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u5229\u7528\u4e86\u5b50\u7f51\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u542f\u52a8\u7684\u65f6\u5019\u90fd\u4f1a\u88ab\u6307\u5b9a\u4e00\u4e2a\u5b57\u7f51\u6bb5\uff0c\u901a\u8fc7\u5b57\u7f51\u5c31\u80fd\u786e\u5b9a\u8fd9\u4e2a`ip`\u662f\u5c5e\u4e8e\u90a3\u4e2a\u8282\u70b9\u7684\uff0c\u5b50\u7f51\u88ab\u5b58\u5728`etcd`\u91cc\u9762\u3002\\n- `Node2`\u4e0a\u7684`flanneld`\u8fdb\u7a0b\u6536\u5230\u6570\u636e\u5305\u4e4b\u540e\uff0c\u4f1a\u53d1\u9001\u5230`flannel0`\u8bbe\u5907\u4e0a\uff0c\u8fd9\u662f\u4e00\u4e2a\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u8fc7\u7a0b\uff0c\u6240\u4ee5`Linux`\u5185\u6838\u7f51\u7edc\u534f\u8bae\u6808\u5c31\u4f1a\u8d1f\u8d23\u5904\u7406\u8fd9\u4e2a`IP`\u5305\uff0c\u5177\u4f53\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u5c31\u662f\u901a\u8fc7\u672c\u673a\u7684\u8def\u7531\u8868\u6765\u5bfb\u627e\u8fd9\u4e2a`IP`\u5305\u7684\u4e0b\u4e00\u6b65\u6d41\u5411\u3002\u5bf9\u5e94\u5230\u4e0a\u56fe\u7684\u6b65\u9aa47\u30018\u3002\\n\\n```shell\\n# node2\u4e0a\u7684\u8def\u7531\u8868\\n$ ip route\\n1 default via 10.168.0.1 dev eth0\\n2 100.96.0.0/16 dev flannel0 proto kernel scope link src 100.96.2.0\\n3 100.96.2.0/24 dev docker0 proto kernel scope link src 100.96.2.1\\n4 10.168.0.0/24 dev eth0 proto kernel scope link src 10.168.0.3\\n```\\n\\n- \u901a\u8fc7\u89e3\u6790\u51fa\u76ee\u6807`ip`\u4e3a`100.96.2.2`\uff0c\u4ed6\u548c\u7b2c\u4e09\u6761\u7684\u8def\u7531\u89c4\u5219\u5339\u914d\u66f4\u52a0\u7cbe\u786e\uff0c\u8fd9\u6761\u8def\u7531\u89c4\u5219\u7684\u610f\u601d\u662f\u628a\u53d1\u5f80`100.96.2.0/24`\u7f51\u6bb5\u7684\u7684\u6570\u636e\u5305\u53d1\u9001\u5230`docker0`\u8bbe\u5907\u4e0a\u53bb\uff0c\u5e76\u4e14\u8bbe\u7f6e\u6e90`IP`\u4e3a`100.96.2.1`\u3002\u5bf9\u5e94\u5230\u4e0a\u56fe\u7684\u6b65\u9aa49\u3002\\n- \u6570\u636e\u5305\u8fdb\u5165\u5230`docker0`\u8bbe\u5907\u4e4b\u540e\uff0c`docker0`\u7f51\u6865\u4f1a\u626e\u6f14\u4e8c\u5c42\u4ea4\u6362\u673a\u7684\u89d2\u8272\uff0c\u5c06\u6570\u636e\u5305\u53d1\u9001\u7ed9\u6b63\u786e\u7684`veth pair`\u5bf9\uff0c\u8fdb\u8fc7\u6b64\u8bbe\u5907\u4e4b\u540e\u5c31\u8fdb\u5165\u5230`Contaniner-2`\u7684\u7f51\u7edc\u534f\u8bae\u6808\u4e2d\u3002\u5bf9\u5e94\u5230\u4e0a\u56fe\u7684\u6b65\u9aa410\u3002\\n\\n\\n\\n`Flannel UDP`\u6a21\u5f0f\u63d0\u4f9b\u7684\u662f\u4e00\u4e2a\u4e09\u5c42\u7684`Overlay`\u7f51\u7edc\uff0c\u5b83\u9996\u9009\u5bf9\u53d1\u51fa\u7aef\u7684`IP`\u5305\u8fdb\u884c`UDP`\u5c01\u88c5\uff0c\u7136\u540e\u5728\u63a5\u6536\u7aef\u8fdb\u884c\u89e3\u5c01\u88c5\u62ff\u5230\u539f\u59cb`IP`\u5305\uff0c\u8fdb\u800c\u628a\u8fd9\u4e2a`IP`\u5305\u8f6c\u53d1\u7ed9\u76ee\u6807\u5bb9\u5668\u3002\\n\\n`Flannel UDP`\u6a21\u5f0f\u6709\u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898\uff0c\u4e3b\u8981\u95ee\u9898\u662f\uff0c\u7531\u4e8e\u4f7f\u7528\u4e86`TUN`\u8bbe\u5907\uff0c\u4ec5\u5728\u53d1\u51fa`IP`\u5305\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u9700\u8981\u7ecf\u8fc7\u4e09\u6b21\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u4e4b\u95f4\u7684\u6570\u636e\u62f7\u8d1d\u3002\\n\\n![tun](https://gitee.com/lengrongfu/blog-static-file/raw/master/flannel_tun.png)\\n\\n\\n\\n##### 2\u3001\u4e09\u5c42Calico ipip\\n\\n\\n\\n##### 3\u3001\u4e8c\u5c42+\u4e09\u5c42VXLAN\\n\\n> `VXLAN`\u7f51\u7edc\u7684\u8bbe\u8ba1\u601d\u60f3\u662f\uff0c\u5728\u73b0\u6709\u7684\u4e09\u5c42\u7f51\u7edc\u4e4b\u4e0a\uff0c\u8986\u76d6\u4e00\u5c42\u865a\u62df\u7684\u3001\u7531\u5185\u6838`VXLAN`\u6a21\u5757\u8d1f\u8d23\u7ef4\u62a4\u7684\u4e8c\u5c42\u7f51\u7edc\uff0c\u4f7f\u5f97\u8fde\u63a5\u5728\u8fd9\u4e2a`VXLAN`\u4e8c\u5c42\u7f51\u7edc\u4e0a\u7684\u4e3b\u673a\u4e4b\u95f4\uff0c\u53ef\u4ee5\u50cf\u5728\u540c\u4e00\u4e2a\u5c40\u57df\u7f51\u90a3\u6837\u81ea\u7531\u901a\u4fe1\u3002\\n\\n>\u4e3a\u4e86\u80fd\u5728\u4e8c\u5c42\u7f51\u7edc\u4e0a\u6253\u901a\u96a7\u9053\uff0c`VXLAN`\u4f1a\u5728\u5bbf\u4e3b\u673a\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u7279\u6b8a\u7684\u7f51\u7edc\u8bbe\u5907\u4f5c\u4e3a\u96a7\u9053\u7684\u4e24\u7aef\uff0c\u8fd9\u4e2a\u8bbe\u5907\u5c31\u53eb\u4f5c`VTEP`\uff0c\u5168\u79f0\u662f\uff1a(`VXLAN Tun End Poin`)\u865a\u62df\u96a7\u9053\u7aef\u70b9\u3002\\n\\n> `VTEP`\u8bbe\u5907\u7684\u4f5c\u7528\u548c`flanneld`\u8fdb\u7a0b\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\uff0c\u5c31\u662f\u505a\u6570\u636e\u5305\u7684\u5c01\u88c5\u548c\u89e3\u5c01\u88c5\uff0c\u53ea\u4e0d\u8fc7\uff0c\u5b83\u8fdb\u884c\u5c01\u88c5\u548c\u89e3\u5c01\u88c5\u7684\u662f\u4e8c\u5c42\u6570\u636e\u5e27\uff0c\u800c\u4e14\u8fd9\u4e2a\u5de5\u4f5c\u6d41\u7a0b\uff0c\u5168\u90fd\u662f\u5728\u5185\u6838\u91cc\u5b8c\u6210\u7684\u3002\\n\\n\\n\\n### Underlay \u6a21\u5f0f\\n\\n##### 1\u3001\u4e09\u5c42\u6a21\u5f0fBGP\\n\\n![BGP](https://gitee.com/lengrongfu/blog-static-file/raw/master/bgp.png)\\n\\n\u5982\u4e0a\u56fe\u662f\u4e00\u4e2a\u5178\u578b\u7684`BGP`\u7f51\u7edc\u62d3\u6251\u56fe\uff0c\u901a\u8fc7`Route1`\u548c`Route2`\u4f5c\u4e3a\u8fb9\u754c\u8def\u7531\u7f51\u5173\uff0c\u628a\u5176\u5b83`LAN`\u7684\u8def\u7531\u4fe1\u606f\u5199\u5165\u5230\u5f53\u524d\u7684\u8def\u7531\u4e2d\uff0c\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540c`LAN`\u4e0b\u7684\u8def\u7531\u4fe1\u606f\u540c\u6b65\uff0c\u8fbe\u5230\u4e09\u5c42\u7f51\u7edc\u5168\u901a\u3002\\n\\n\\n\\n###### Calico BGP \u4f7f\u7528\\n\\n\u200b\\t\\t\u5728\u4e86\u89e3\u4e86`BGP`\u4e4b\u540e\uff0c`Calico`\u9879\u76ee\u7684\u67b6\u6784\u5c31\u975e\u5e38\u5bb9\u6613\u7406\u89e3\u4e86\uff0c\u5b83\u628a\u6bcf\u4e2a\u4e3b\u673a\u8282\u70b9\u5f53\u505a\u4e00\u4e2a\u8fb9\u754c\u8def\u7531\u6765\u770b\u5f85\uff0c\u6240\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u4fdd\u5b58\u4e86\u6240\u6709\u5176\u4ed6\u8282\u70b9\u7684\u8def\u7531\u4fe1\u606f\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u5b83\u7684\u5b9e\u73b0\uff0c\u5b83\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\\n\\n- `Calico`\u7684`CNI`\u63d2\u4ef6\uff0c\u8fd9\u662f`Caclico`\u548c`Kubernetes`\u5bf9\u63a5\u7684\u90e8\u5206\u3002\\n- `BIRD`\u662f`BGP`\u7684\u5ba2\u6237\u7aef\uff0c\u4e13\u95e8\u8d1f\u8d23\u5728\u96c6\u7fa4\u91cc\u9762\u5206\u53d1\u8def\u7531\u4fe1\u606f\u3002\\n- `Felix`,\u5b83\u662f\u4e00\u4e2a`Demoset`\uff0c\u8d1f\u8d23\u5728\u5bbf\u4e3b\u673a\u4e0a\u63d2\u5165\u8def\u7531\u89c4\u5219\uff08\u5199\u5165`Linux`\u5185\u6838\u7684`FIB`\u8f6c\u53d1\u4fe1\u606f\u8868\uff09\uff0c\u4ee5\u53ca\u7ef4\u62a4`Calico`\u6240\u9700\u7684\u7f51\u7edc\u8bbe\u5907\u7b49\u5de5\u4f5c\u3002\\n\\n\\n\\n\u200b\\t`Calico BGP`\u6a21\u5f0f\u548c`Flannel host-gw`\u6a21\u5f0f\u4e0d\u540c\uff0c`Calico`\u6ca1\u6709\u521b\u5efa\u4efb\u4f55\u7684\u865a\u62df\u7f51\u6865\u8bbe\u5907\uff0c`Calico`\u7684\u5de5\u4f5c\u65b9\u5f0f\u91c7\u7528\u5982\u4e0b\u56fe\u6765\u8bf4\u660e\u3002\\n\\n![calico_bgp](https://gitee.com/lengrongfu/blog-static-file/raw/master/calico_bgp.png)\\n\\n\\n\\n\u200b\\t\\t`Calico BGP`\u6a21\u5f0f\u7684\u7f51\u7edc\u4ea4\u4e92\u56fe\u5982\u4e0a\u6240\u793a\uff0c\u5982`container1`\u9700\u8981\u8bbf\u95ee`Container3`\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e0b\u7f51\u7edc\u5982\u4f55\u5230\u8fbe\u3002\u56e0\u4e3a\u6ca1\u6709\u91c7\u7528`cni0`\u865a\u62df\u7f51\u6865\u8bbe\u5907\uff0c\u56e0\u6b64`veth`\u8bbe\u5907\u5bf9\u7684\u4e00\u7aef\u662f\u5728\u5bb9\u5668\u7684`Network Namespace`\u4e2d\u7684\uff0c\u4e00\u7aef\u662f\u5728\u5bbf\u4e3b\u673a\u7684\u5bb9\u5668\u7f51\u7edc\u7a7a\u95f4\u7684\uff0c\\n\\n- \u9996\u5148`Calico CNI`\u63d2\u4ef6\u8fd8\u9700\u8981\u5728\u6bcf\u4e2a\u5bbf\u4e3b\u673a\u4e0a\u4e3a\u6bcf\u4e2a\u5bb9\u5668\u7684`Veth Pair`\u8bbe\u5907\u914d\u7f6e\u4e00\u6761\u8def\u7531\u89c4\u5219\uff0c\u7531\u4e8e\u63a5\u53d7\u4f20\u5165\u7684`IP`\u5305\uff0c\u6bd4\u5982\uff1a\\n\\n```shell\\n# 192.168.0.2\u8282\u70b9\u4e0a\u7684\u8def\u7531\u4fe1\u606f\u6709\\n$ ip route\\n10.20.0.2 dev cali1 scope link\\n10.20.0.3 dev cali2 scope link\\n\\n# 192.168.0.3\u8282\u70b9\u4e0a\u7684\u8def\u7531\u4fe1\u606f\u6709\\n$ ip route\\n10.20.1.2 dev cali3 scope link\\n10.20.1.3 dev cali4 scope link\\n```\\n\\n- \u6bcf\u4e2a\u8282\u70b9\u4e0a\u8fd8\u6709`BGP`\u5e7f\u64ad\u7684\u5176\u5b83\u8282\u70b9\u8def\u7531\u534f\u8bae\uff0c\u6bd4\u5982\uff1a\\n\\n```shell\\n# 192.168.0.2\u4e0a\u6709\u4e00\u6761\u6307\u5411192.169.0.3\u7684\u8def\u7531\\n$ ip route\\n10.20.1.0/24 via 192.168.0.3 dev eth0\\n# 192.168.0.3\u4e0a\u6709\u4e00\u6761\u6307\u5411192.168.0.2\u7684\u8def\u7531\\n$ ip route\\n10.20.0.0/24 via 192.168.0.2 dev eth0\\n```\\n\\n- \u9ed8\u8ba4\u7684`Calico BGP`\u4f7f\u7528\u7684\u662f`Node to Node`\u7684\u6a21\u5f0f\uff0c\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u8fde\u63a5\u4ee5`N^2`\u7684\u6570\u72ec\u589e\u957f\uff0c\u4e00\u822c\u63a8\u8350\u5c11\u4e8e\u4f7f\u7528`100`\u4e2a\u8282\u70b9\u7684\u96c6\u7fa4\u4e2d\u3002\u5728\u5927\u89c4\u6a21\u96c6\u7fa4\u4e2d\uff0c\u9700\u8981\u7528\u5230\u4e00\u4e2a\u53eb`Route Reflector`\u7684\u6a21\u5f0f\uff0c\u6240\u6709\u7684\u8def\u7531\u4f1a\u7edf\u4e00\u4e0a\u62a5\u5230\u4e00\u4e2a\u4e2d\u5fc3\u8282\u70b9\uff0c\u5176\u5b83\u8282\u70b9\u90fd\u4ece\u4e2d\u5fc3\u8282\u70b9\u8fdb\u884c\u540c\u6b65\u3002\\n\\n`Calico BGP`\u6a21\u5f0f\u548c`Flannel host-gw`\u6a21\u5f0f\u4e00\u6837\uff0c\u90fd\u6709\u4e00\u4e2a\u5bf9\u57fa\u7840\u7f51\u7edc\u8bbe\u65bd\u7684\u4f9d\u8d56\uff0c\u8981\u6c42\u96c6\u7fa4\u5bbf\u4e3b\u673a\u4e4b\u95f4\u662f\u4e8c\u5c42\u53ef\u8fbe\u7684\u3002\u5047\u5982\u5bbf\u4e3b\u673a\u4e4b\u95f4\u5904\u5728\u4e0d\u540c\u7684`LAN`\u4e0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528`Calico ipip`\u7684`Overlay`\u6a21\u5f0f\u4e86\u3002\\n\\n##### 2\u3001\u4e8c\u5c42VLAN\\n\\n##### 3\u3001Flannel host-gw\\n\\n> `Flannel host-gw`\u6a21\u5f0f\u4e00\u5f20\u56fe\u5c31\u53ef\u4ee5\u8bb2\u6e05\u695a\u4ed6\u4eec\u4e4b\u95f4\u7684\u5b9e\u73b0\u539f\u7406\u3002\\n\\n![host-gw](https://gitee.com/lengrongfu/blog-static-file/raw/master/flannel_hostgw.png)\\n\\n- `CNI0`\u8bbe\u5907\u662f\u4e00\u4e2a\u4e09\u5c42\u4ea4\u6362\u673a\uff0c\u5177\u6709\u4e8c\u5c42\u4ea4\u6362\u673a\u7684\u529f\u80fd\uff0c\u540c\u65f6\u5177\u6709\u72ec\u7acb`IP`\\n\\n`flannel`\u4ee5`Daemonset`\u7684\u65b9\u5f0f\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u542f\u52a8\u4e00\u4e2a`Flanneld`\u8fdb\u7a0b\uff0c\u7528\u4e8e\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u8def\u7531\u4fe1\u606f\uff0c\u5b9e\u73b0\u65b9\u5f0f\u662f\uff0c\u672c\u5730\\n\\n\u5982\uff1a`192.168.1.0/24 via 10.20.0.3 dev eth0`\u8def\u7531\u5b9a\u4e49\u4e86\u8bbf\u95ee`192.168.1.0/24`\u7f51\u6bb5\u7684\u4e0b\u4e00\u8df3\u4e3a`10.20.0.3`\u5e76\u4ece`eth0`\u8bbe\u5907\u51fa\u3002\\n\\n\u7136\u540e`IP`\u5305\u88ab\u5c01\u88c5\u6210\u5e27\u53d1\u9001\u51fa\u53bb\u7684\u65f6\u5019\uff0c\u4f1a\u4f7f\u7528\u8def\u7531\u8868\u91cc\u7684\u4e0b\u4e00\u8df3\u6765\u8bbe\u7f6e\u76ee\u7684`MAC`\u5730\u5740\uff1b\u8fd9\u6837\uff0c\u5c31\u80fd\u901a\u8fc7\u4e8c\u5c42\u7f51\u7edc\u8fbe\u5230\u76ee\u7684\u5bbf\u4e3b\u673a\u3002\\n\\n\u56e0\u4e3a\u4ed6\u4f1a\u4f7f\u7528\u4e0b\u4e00\u8df3\u7684\u76ee\u7684`MAC`\u5730\u5740\uff0c\u6240\u4ee5\u5b83\u8981\u6c42\u5bbf\u4e3b\u673a\u4e4b\u95f4\u662f\u4e8c\u5c42\u8054\u901a\u7684\uff0c\u4e0d\u5982\u5c31\u6ca1\u6cd5\u901a\u8fc7\u4f7f\u7528`ARP`\u534f\u8bae\u7528`IP`\u53bb\u83b7\u53d6`MAC`\u5730\u5740\u4e86\u3002"},{"id":"go-channel\u6e90\u7801","metadata":{"permalink":"/blog/go-channel\u6e90\u7801","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-09-18-go-channel\u6e90\u7801.md","source":"@site/blog/2019-09-18-go-channel\u6e90\u7801.md","title":"go channel \u5b9e\u73b0","description":"Channel\u662fgo\u4e4b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4ece\u5b9e\u73b0\u4e0a\u8bf4\uff0cchannel\u662f\u4e00\u4e2a\u94fe\u8868\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u5165\u548c\u8bfb\u53d6\u3002","date":"2019-09-18T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/golang","description":"golang"},{"inline":false,"label":"channel","permalink":"/blog/tags/channel","description":"Golang channel"}],"readingTime":10.52,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"go-channel\u6e90\u7801","title":"go channel \u5b9e\u73b0","authors":["rongfu"],"tags":["golang","channel"]},"unlisted":false,"prevItem":{"title":"Kubernetes Network","permalink":"/blog/Kubernetes-Network"},"nextItem":{"title":"Linux sed","permalink":"/blog/linux-sed"}},"content":"`Channel`\u662f`go`\u4e4b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4ece\u5b9e\u73b0\u4e0a\u8bf4\uff0c`channel`\u662f\u4e00\u4e2a\u94fe\u8868\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u5165\u548c\u8bfb\u53d6\u3002\\n\x3c!-- truncate --\x3e\\n# \u4ec0\u4e48\u662fChannel\\n`Channel`\u662f`go`\u4e4b\u95f4\u901a\u4fe1\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u4ece\u5b9e\u73b0\u4e0a\u8bf4\uff0c`channel`\u662f\u4e00\u4e2a\u94fe\u8868\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u653e\u5165\u548c\u8bfb\u53d6\u3002\\n\\n# \u57fa\u672c\u4f7f\u7528\\n`channel`\u5206\u4e3a\u6709\u7f13\u51b2\u533a\u7684\u548c\u65e0\u7f13\u51b2\u533a\u7684\u901a\u9053\u3002\\n\\n# \u539f\u7406\\n\\n`channel`\u5c31\u662f\u901a\u8fc7\u4e00\u4e2a\u5171\u4eab\u961f\u5217\u6765\u505a\u534f\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9012\u7684\uff0c\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u4f4e\u5c42\u8fd8\u662f\u901a\u8fc7\u9501\u6765\u63a7\u5236\u6570\u636e\u4e4b\u95f4\u7684\u5b89\u5168\uff1b\u548c\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u7684\u5dee\u522b,\u52a0\u5165\u4e86\u534f\u7a0b\u6302\u8d77\u548c\u901a\u77e5\u7684\u529f\u80fd\uff0c\u4f7f\u5f97\u534f\u7a0b\u66f4\u52a0\u7684\u5feb\u901f\u3002\\n\\n## \u53d1\u9001\u6d88\u606f\u65f6\uff1a\\n\\n    channel\u5df2\u7ecf\u5173\u95ed\uff0c\u90a3\u5c31\u4e0d\u80fd\u53d1\u3002panic\u6389\u3002\\n    \u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u963b\u585e\u5728\u8bfb\u64cd\u4f5c\u4e0a\u7684goroutine\uff0c\u6709\u7684\u8bdd\u53d6\u51fa\u4e0a\u4e00\u6b21\u63a5\u6536\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u628a\u53d1\u9001\u7684\u5143\u7d20\u63d2\u5165\u5230\u7f13\u51b2\u69fd\u5c3e\u90e8\u3002\u6240\u4ee5\u5199\u5165\u6709\u5e8f\uff0c\u8f93\u51fa\u4e5f\u662f\u6709\u5e8f\u7684\u3002\\n    \u6ca1\u6709\u88ab\u963b\u585e\u7684goroutine\u3002\u5982\u679c\u5e26buffer\uff0cbuffer\u8fd8\u6709\u7a7a\u4f4d\uff0c\u5c31\u653e\u5728buffer\u91cc\u3002\u5426\u5219\u5c31\u963b\u585e\u6302\u8d77\u5f53\u524d\u53d1\u9001\u6d88\u606f\u7684goroutine\u3002\\n\\n## \u8bfb\u53d6\u6d88\u606f\u65f6\uff1a\\n\\n    channel\u5df2\u7ecf\u5173\u95ed\uff0c\u4e5f\u53ef\u4ee5\u8bfb\uff0c\u53ea\u662f\u8bfb\u51fa\u6765\u7684\u6570\u636e\u4e3a\u7a7a\u3002\\n    \u770b\u4e00\u4e0b\u6709\u6ca1\u6709\u963b\u585e\u7684\u5199\u64cd\u4f5c\u7684goroutine\uff0c\u6709\u7684\u8bdd\u5524\u9192\u5b83\u3002\u8bfb\u53d6\u5b83\u53d1\u9001\u7684\u6570\u636e(A)\u3002\\n    \u8bfb\u53d6\u540e\u7684\u6570\u636e(A)\u653e\u54ea\uff0c\u89c6\u4e4e\u662f\u5e26buffer\u8fd8\u662f\u65e0buffer\u3002\u65e0buffer\u7684\u8bdd\uff0c\u5c31\u76f4\u63a5\u628a\u5199\u6570\u636e(A)\u7ed9\u8bfb\u53d6\u8005\u3002\u5e26buffer\u7684\u8bdd\uff0c\u5c31\u5148\u770bbuffer\u91cc\u662f\u5426\u6709\u6570\u636e(B)\uff0c\u6709\u5c31\u628a\u6570\u636e(B)\u7ed9\u8bfb\u53d6\u8005\uff0c\u518d\u628a\u6570\u636e(A)\u653e\u5230\u539f\u6765\u6570\u636e(B)\u7a7a\u51fa\u6765\u7684\u4f4d\u7f6e\u4e0a\u3002\\n    \\n## chan \u7ed3\u6784\u4f53\u89e3\u8bfb\\n```go\\ntype hchan struct {\\n\\tqcount   uint           // \u961f\u5217\u4e2d\u7684\u6570\u636e\u91cf\\n\\tdataqsiz uint           // \u961f\u5217\u7684\u5bb9\u91cf\\n\\tbuf      unsafe.Pointer // \u5b58\u50a8\u6570\u636e\u7684\u7f13\u51b2\u533a\\n\\telemsize uint16         //\u5143\u7d20\u7684\u5360\u4f4d\u5927\u5c0f\\n\\tclosed   uint32         //\u5173\u95ed\u6807\u5fd7\u4f4d\uff0c0 \u672a\u5173\u95ed\uff0c1 \u5173\u95ed\\n\\telemtype *_type // \u5143\u7d20\u7c7b\u578b\\n\\tsendx    uint   // \u53d1\u9001index\\n\\trecvx    uint   // \u63a5\u6536index\\n\\trecvq    waitq  // \u63a5\u6536\u7b49\u5f85\u961f\u5217\uff0c\u5b58\u50a8\u4e86\u63a5\u6536\u6302\u8d77\u7684g\\n\\tsendq    waitq  // \u5b58\u50a8\u4e86\u6302\u8d77\u7684\u53d1\u9001\u961f\u5217\\n    //\u9501\uff0c\u4fdd\u62a4hchan\u91cc\u9762\u7684\u5b57\u6bb5\\n\\tlock mutex\\n}\\n```\\n\\n## chansend \u53d1\u9001\u6e90\u7801\u89e3\u8bfb\\n```go\\nfunc chansend(c *hchan, ep unsafe.Pointer, block bool, callerpc uintptr) bool {\\n\\t//\u52a0\u9501\\n\\tlock(&c.lock)\\n    //1\u3001\u5982\u679c\u5173\u95ed\u5c31panic\uff0c\u4e0d\u80fd\u53d1\u9001\u5230\u4e00\u4e2a\u5173\u95ed\u7684channel\\n\\tif c.closed != 0 {\\n\\t\\tunlock(&c.lock)\\n\\t\\tpanic(plainError(\\"send on closed channel\\"))\\n\\t}\\n    //2\u3001\u63a5\u6536\u961f\u5217\u4e2d\u53d6\u51fa\u4e00\u4e2ag\\n\\tif sg := c.recvq.dequeue(); sg != nil {\\n\\t\\t//\u627e\u5230\u4e00\u4e2a\u7b49\u5f85\u7684\u63a5\u6536g\uff0c\u628a\u6570\u636e\u76f4\u63a5\u590d\u5236\u5230g\u7684stack\u4e0a\uff0c\u5e76\u628a\u5b83\u5b89\u6392\u5728\u4e0b\u4e00\u6b21\u8c03\u5ea6\u4e0a\\n\\t\\tsend(c, sg, ep, func() { unlock(&c.lock) }, 3)\\n\\t\\treturn true\\n\\t}\\n    //3\u3001\u5982\u679c\u7f13\u51b2\u961f\u5217\u8fd8\u6709\u7a7a\u95f4\\n\\tif c.qcount < c.dataqsiz {\\n\\t\\t// \u5c06\u8981\u53d1\u9001\u7684\u6d88\u606f\u653e\u5165\u961f\u5217\u4e2d\\n\\t\\tqp := chanbuf(c, c.sendx)\\n\\t\\tif raceenabled {\\n\\t\\t\\traceacquire(qp)\\n\\t\\t\\tracerelease(qp)\\n\\t\\t}\\n\\t\\ttypedmemmove(c.elemtype, qp, ep)\\n\\t\\tc.sendx++\\n\\t\\t//\u8bb0\u5f97\u5f52\u4f4d\\n\\t\\tif c.sendx == c.dataqsiz {\\n\\t\\t\\tc.sendx = 0\\n\\t\\t}\\n\\t\\t//\u653e\u5165\u4e00\u4e2a+1\uff0c\u53d6\u51fa\u4e00\u4e2a-1\\n\\t\\tc.qcount++\\n\\t\\tunlock(&c.lock)\\n\\t\\treturn true\\n\\t}\\n\\n\\tif !block {\\n\\t\\tunlock(&c.lock)\\n\\t\\treturn false\\n\\t}\\n    //4\u3001\u5982\u679c\u6ca1\u6709\u7f13\u51b2\u533a\u53ef\u7528\uff0c\u628a\u5f53\u524d\u7684g\u6302\u8d77\uff0c\u5e76\u52a0\u5165\u5230\u53d1\u9001\u961f\u5217\u4e2d\\n\\tgp := getg()\\n\\tmysg := acquireSudog()\\n\\tmysg.releasetime = 0\\n\\tif t0 != 0 {\\n\\t\\tmysg.releasetime = -1\\n\\t}\\n\\t// No stack splits between assigning elem and enqueuing mysg\\n\\t// on gp.waiting where copystack can find it.\\n\\tmysg.elem = ep\\n\\tmysg.waitlink = nil\\n\\tmysg.g = gp\\n\\tmysg.isSelect = false\\n\\tmysg.c = c\\n\\tgp.waiting = mysg\\n\\tgp.param = nil\\n\\tc.sendq.enqueue(mysg)\\n\\tgoparkunlock(&c.lock, waitReasonChanSend, traceEvGoBlockSend, 3)\\n\\t// Ensure the value being sent is kept alive until the\\n\\t// receiver copies it out. The sudog has a pointer to the\\n\\t// stack object, but sudogs aren\'t considered as roots of the\\n\\t// stack tracer.\\n\\tKeepAlive(ep)\\n\\n\\t// someone woke us up.\\n\\tif mysg != gp.waiting {\\n\\t\\tthrow(\\"G waiting list is corrupted\\")\\n\\t}\\n\\tgp.waiting = nil\\n\\tif gp.param == nil {\\n\\t\\tif c.closed == 0 {\\n\\t\\t\\tthrow(\\"chansend: spurious wakeup\\")\\n\\t\\t}\\n\\t\\tpanic(plainError(\\"send on closed channel\\"))\\n\\t}\\n\\tgp.param = nil\\n\\tif mysg.releasetime > 0 {\\n\\t\\tblockevent(mysg.releasetime-t0, 2)\\n\\t}\\n\\tmysg.c = nil\\n\\treleaseSudog(mysg)\\n\\treturn true\\n}\\n```\\n\\n## chanrecv \u63a5\u6536\u89e3\u8bfb\\n```go\\nfunc chanrecv(c *hchan, ep unsafe.Pointer, block bool) (selected, received bool) {\\n\\t\\n    //\u5148\u68c0\u67e5\u5982\u679c\u961f\u5217\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u5e76\u4e14\u53d1\u9001\u7b49\u5f85\u961f\u5217\u4e2d\u4e5f\u6ca1\u6709\u6302\u8d77\u7684g\uff0c\u5e76\u4e14\u672a\u5173\u95ed\u5c31\u76f4\u63a5\u8fd4\u56de\\n    if !block && (c.dataqsiz == 0 && c.sendq.first == nil ||\\n\\t\\tc.dataqsiz > 0 && atomic.Loaduint(&c.qcount) == 0) &&\\n\\t\\tatomic.Load(&c.closed) == 0 {\\n\\t\\treturn\\n\\t}\\n    //\u52a0\u9501\\n\\tlock(&c.lock)\\n    //1\u3001\u5982\u679cchannel\u5df2\u7ecf\u5173\u95ed\u5e76\u4e14\u961f\u5217\u5143\u7d20\u4e2a\u6570\u4e3a0\uff0c\u5219\u8fd4\u56de\uff0c\u4e0d\u4f1a\u62a5panic\\n\\tif c.closed != 0 && c.qcount == 0 {\\n\\t\\tif raceenabled {\\n\\t\\t\\traceacquire(c.raceaddr())\\n\\t\\t}\\n\\t\\tunlock(&c.lock)\\n\\t\\tif ep != nil {\\n\\t\\t\\ttypedmemclr(c.elemtype, ep)\\n\\t\\t}\\n\\t\\treturn true, false\\n\\t}\\n    //2\u3001\\n\\tif sg := c.sendq.dequeue(); sg != nil {\\n\\t\\t// Found a waiting sender. If buffer is size 0, receive value\\n\\t\\t// directly from sender. Otherwise, receive from head of queue\\n\\t\\t// and add sender\'s value to the tail of the queue (both map to\\n\\t\\t// the same buffer slot because the queue is full).\\n\\t\\t// \u5982\u679cbuffer\u662f0\uff0c\u4ece\u53d1\u9001\u4e2d\u76f4\u63a5\u83b7\u53d6\u5e76\u63a5\u6536\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u4ece\u961f\u5217\u5934\u63a5\u6536\u5e76\u4e14\u53d1\u9001\u503c\u5230\u961f\u5c3e\\n\\t\\trecv(c, sg, ep, func() { unlock(&c.lock) }, 3)\\n\\t\\treturn true, true\\n\\t}\\n    //3\u3001\u5982\u679c\u7f13\u5b58\u961f\u5217\u4e2d\u8fd8\u6709\u5143\u7d20\uff0c\u5c31\u53d6\u51fa\u6765\u63a5\u6536\\n\\tif c.qcount > 0 {\\n\\t\\t// Receive directly from queue\\n\\t\\tqp := chanbuf(c, c.recvx)\\n\\t\\tif raceenabled {\\n\\t\\t\\traceacquire(qp)\\n\\t\\t\\tracerelease(qp)\\n\\t\\t}\\n\\t\\tif ep != nil {\\n\\t\\t\\ttypedmemmove(c.elemtype, ep, qp)\\n\\t\\t}\\n\\t\\ttypedmemclr(c.elemtype, qp)\\n\\t\\tc.recvx++\\n\\t\\tif c.recvx == c.dataqsiz {\\n\\t\\t\\tc.recvx = 0\\n\\t\\t}\\n\\t\\tc.qcount--\\n\\t\\tunlock(&c.lock)\\n\\t\\treturn true, true\\n\\t}\\n\\n\\tif !block {\\n\\t\\tunlock(&c.lock)\\n\\t\\treturn false, false\\n\\t}\\n\\n\\t// \u6ca1\u6709\u53ef\u7528\u7684\uff0c\u5c31\u6302\u8d77\u5f53\u524d\u7684g\uff0c\u5e76\u653e\u5165\u63a5\u6536\u7b49\u5f85\u961f\u5217\u4e2d\\n\\tgp := getg()\\n\\tmysg := acquireSudog()\\n\\tmysg.releasetime = 0\\n\\tif t0 != 0 {\\n\\t\\tmysg.releasetime = -1\\n\\t}\\n\\t// No stack splits between assigning elem and enqueuing mysg\\n\\t// on gp.waiting where copystack can find it.\\n\\tmysg.elem = ep\\n\\tmysg.waitlink = nil\\n\\tgp.waiting = mysg\\n\\tmysg.g = gp\\n\\tmysg.isSelect = false\\n\\tmysg.c = c\\n\\tgp.param = nil\\n\\tc.recvq.enqueue(mysg)\\n\\tgoparkunlock(&c.lock, waitReasonChanReceive, traceEvGoBlockRecv, 3)\\n\\n\\t// someone woke us up\\n\\tif mysg != gp.waiting {\\n\\t\\tthrow(\\"G waiting list is corrupted\\")\\n\\t}\\n\\tgp.waiting = nil\\n\\tif mysg.releasetime > 0 {\\n\\t\\tblockevent(mysg.releasetime-t0, 2)\\n\\t}\\n\\tclosed := gp.param == nil\\n\\tgp.param = nil\\n\\tmysg.c = nil\\n\\treleaseSudog(mysg)\\n\\treturn true, !closed\\n}\\n```\\n\\n\\n\\n# waitq \u53cc\u5411\u94fe\u8868\u89e3\u8bfb\\n\\n```go\\n// waitq \u53ea\u4fdd\u5b58\u4e86\u4e00\u4e2a\u6267\u884c\u5934\u548c\u4e00\u4e2a\u6267\u884c\u5c3e\u7684\u6307\u9488\uff0c\u4fdd\u5b58\u7684\u5143\u7d20\u90fd\u662fsudog\\ntype waitq struct {\\n\\tfirst *sudog\\n\\tlast  *sudog\\n}\\n// sudog \u4ee3\u8868\u4e00\u4e2ago\u5728\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\u4e2d\\ntype sudog struct {\\n    //\u4e0b\u9762\u7684\u5b57\u6bb5\u53d7hchan.lock\u9501\u7684\u4fdd\u62a4\uff0c\\n\\tg *g\\n\\n\\t// isSelect \u4e3atrue\u8868\u793ag\u6b63\u5728\u53c2\u4e0eselect\u9009\u62e9\uff0cg.selectDone\u5fc5\u987b\u88abcas\u7b97\u6cd5\u8c03\u7528\u624d\u80fd\u5524\u9192g\\n\\tisSelect bool\\n\\tnext     *sudog // \u4e0b\u4e00\u4e2a \u8fd9\u4e2a\u4e24\u4e2a\u5b57\u6bb5\u7ec4\u6210\u4e86\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\\n\\tprev     *sudog // \u4e0a\u4e00\u4e2a\\n    ...\\n}\\n```\\n\\n### \u5165\u961f\u5217\\n```go\\n// \u961f\u5934\u548c\u961f\u5c3e\u5206\u522b\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u961f\u5934\u548c\u961f\u5c3e\u90fd\u6307\u5411\u4ed6\\nfunc (q *waitq) enqueue(sgp *sudog) {\\n\\tsgp.next = nil\\n\\tx := q.last\\n\\tif x == nil {\\n\\t\\tsgp.prev = nil\\n\\t\\tq.first = sgp\\n\\t\\tq.last = sgp\\n\\t\\treturn\\n\\t}\\n\\tsgp.prev = x\\n\\tx.next = sgp\\n\\tq.last = sgp\\n}\\n```\\n\\n### \u51fa\u961f\u5217\\n```go\\n// \u51fa\u961f\u5217\u7684\u65f6\u5019\uff0c\u79fb\u52a8\u961f\u5934\u5f80\u540e\u79fb\u52a8\uff0c\u5e76\u8bbe\u7f6e\u961f\u5934\u7684\u5143\u7d20\u6307\u5411\u4e0b\u4e00\u4e2a\u4e3anil\uff0c\u662f\u4e00\u4e2aFIFO\u961f\u5217\\nfunc (q *waitq) dequeue() *sudog {\\n\\tfor {\\n\\t\\tsgp := q.first\\n\\t\\tif sgp == nil {\\n\\t\\t\\treturn nil\\n\\t\\t}\\n\\t\\ty := sgp.next\\n\\t\\tif y == nil {\\n\\t\\t\\tq.first = nil\\n\\t\\t\\tq.last = nil\\n\\t\\t} else {\\n\\t\\t\\ty.prev = nil\\n\\t\\t\\tq.first = y\\n\\t\\t\\tsgp.next = nil // mark as removed (see dequeueSudog)\\n\\t\\t}\\n        //\u5f53g\u662f\u5728select\u963b\u585e\u7684\u65f6\u5019\u9700\u8981\u8bbe\u7f6eselectDone\u4e3a1\u624d\u80fd\u5524\u9192g\\n\\t\\tif sgp.isSelect {\\n\\t\\t\\tif !atomic.Cas(&sgp.g.selectDone, 0, 1) {\\n\\t\\t\\t\\tcontinue\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn sgp\\n\\t}\\n}\\n```\\n\\n# lock \u5b9e\u73b0\u89e3\u8bfb\\n\\n\u52a0\u9501\u548c\u89e3\u9501\u6ca1\u6709\u4f7f\u7528`mutex`\uff0c\u800c\u662f\u4f7f\u7528\u4e86`futex`\u6280\u672f\uff0c\u8fd9\u4e2a\u662f\u5728`linux`\u7cfb\u7edf\u73af\u5883\u4e0b\u7684\uff0c`futex`\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u52a0\u9501\u65b9\u5f0f\u3002\\n\\n## lock \u52a0\u9501\\n\\n```go\\nfunc lock(l *mutex) {\\n\\tgp := getg()\\n\\n\\tif gp.m.locks < 0 {\\n\\t\\tthrow(\\"runtime\xb7lock: lock count\\")\\n\\t}\\n\\tgp.m.locks++\\n\\n\\t// Speculative grab for lock.\\n\\tv := atomic.Xchg(key32(&l.key), mutex_locked)\\n\\tif v == mutex_unlocked {\\n\\t\\treturn\\n\\t}\\n\\n\\t// wait is either MUTEX_LOCKED or MUTEX_SLEEPING\\n\\t// depending on whether there is a thread sleeping\\n\\t// on this mutex. If we ever change l->key from\\n\\t// MUTEX_SLEEPING to some other value, we must be\\n\\t// careful to change it back to MUTEX_SLEEPING before\\n\\t// returning, to ensure that the sleeping thread gets\\n\\t// its wakeup call.\\n\\twait := v\\n\\n\\t// On uniprocessors, no point spinning.\\n\\t// On multiprocessors, spin for ACTIVE_SPIN attempts.\\n\\tspin := 0\\n\\tif ncpu > 1 {\\n\\t\\tspin = active_spin\\n\\t}\\n\\tfor {\\n\\t\\t// Try for lock, spinning.\\n\\t\\tfor i := 0; i < spin; i++ {\\n\\t\\t\\tfor l.key == mutex_unlocked {\\n\\t\\t\\t\\tif atomic.Cas(key32(&l.key), mutex_unlocked, wait) {\\n\\t\\t\\t\\t\\treturn\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tprocyield(active_spin_cnt)\\n\\t\\t}\\n\\n\\t\\t// Try for lock, rescheduling.\\n\\t\\tfor i := 0; i < passive_spin; i++ {\\n\\t\\t\\tfor l.key == mutex_unlocked {\\n\\t\\t\\t\\tif atomic.Cas(key32(&l.key), mutex_unlocked, wait) {\\n\\t\\t\\t\\t\\treturn\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tosyield()\\n\\t\\t}\\n\\n\\t\\t// Sleep.\\n\\t\\tv = atomic.Xchg(key32(&l.key), mutex_sleeping)\\n\\t\\tif v == mutex_unlocked {\\n\\t\\t\\treturn\\n\\t\\t}\\n\\t\\twait = mutex_sleeping\\n\\t\\tfutexsleep(key32(&l.key), mutex_sleeping, -1)\\n\\t}\\n}\\n```\\n## unlock \u89e3\u9501\\n\\n```go\\nfunc unlock(l *mutex) {\\n\\tv := atomic.Xchg(key32(&l.key), mutex_unlocked)\\n\\tif v == mutex_unlocked {\\n\\t\\tthrow(\\"unlock of unlocked lock\\")\\n\\t}\\n\\tif v == mutex_sleeping {\\n\\t\\tfutexwakeup(key32(&l.key), 1)\\n\\t}\\n\\n\\tgp := getg()\\n\\tgp.m.locks--\\n\\tif gp.m.locks < 0 {\\n\\t\\tthrow(\\"runtime\xb7unlock: lock count\\")\\n\\t}\\n\\tif gp.m.locks == 0 && gp.preempt { // restore the preemption request in case we\'ve cleared it in newstack\\n\\t\\tgp.stackguard0 = stackPreempt\\n\\t}\\n}\\n```\\n\\n# Channel \u7684\u4f18\u70b9\\n1\u3001\u548c`goroutine`\u8c03\u5ea6\u7ed3\u5408\u8d77\u6765\uff0c\u4f7f\u5f97\u6570\u636e\u4f20\u8f93\u66f4\u52a0\u7684\u9ad8\u6548\u548c\u5feb\u901f\u3002\\n2\u3001\u4f7f\u7528\u7684\u9501\u4e0d\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684`mutex`\u4e92\u65a5\u9501\uff0c\u800c\u662f\u4f7f\u7528\u7684`futex`\u6280\u672f\u3002\\n\\n# \u53c2\u8003\\n- http://cbsheng.github.io/posts/go%E7%9A%84channel%E6%BA%90%E7%A0%81%E5%B1%82%E7%90%86%E8%A7%A3/\\n- https://zh.wikipedia.org/wiki/Futex"},{"id":"linux-sed","metadata":{"permalink":"/blog/linux-sed","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-06-19-linux-sed.md","source":"@site/blog/2019-06-19-linux-sed.md","title":"Linux sed","description":"Linux sed \u4f7f\u7528\u4ecb\u7ecd","date":"2019-06-19T00:00:00.000Z","tags":[{"inline":false,"label":"Linux","permalink":"/blog/tags/linux","description":"Linux"}],"readingTime":2.875,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"linux-sed","title":"Linux sed","authors":["rongfu"],"tags":["Linux"]},"unlisted":false,"prevItem":{"title":"go channel \u5b9e\u73b0","permalink":"/blog/go-channel\u6e90\u7801"},"nextItem":{"title":"Go sync package","permalink":"/blog/Go-sync-package"}},"content":"`Linux sed` \u4f7f\u7528\u4ecb\u7ecd\\n\x3c!-- truncate --\x3e\\n# Sed Command\\n\\n`sed`\u662f\u4e00\u79cd\u6d41\u7f16\u8f91\u5668\uff0c\u5b83\u662f\u6587\u672c\u5904\u7406\u4e2d\u975e\u5e38\u4e2d\u7684\u5de5\u5177\uff0c\u80fd\u591f\u5b8c\u7f8e\u7684\u914d\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u4f7f\u7528\uff0c\u529f\u80fd\u4e0d\u540c\u51e1\u54cd\u3002\u5904\u7406\u65f6\uff0c\u628a\u5f53\u524d\u5904\u7406\u7684\u884c\u5b58\u50a8\u5728\u4e34\u65f6\u7f13\u51b2\u533a\u4e2d\uff0c\u79f0\u4e3a\u201c\u6a21\u5f0f\u7a7a\u95f4\u201d`\uff08pattern space`\uff09\uff0c\u63a5\u7740\u7528`sed`\u547d\u4ee4\u5904\u7406\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\uff0c\u5904\u7406\u5b8c\u6210\u540e\uff0c\u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u9001\u5f80\u5c4f\u5e55\u3002\u63a5\u7740\u5904\u7406\u4e0b\u4e00\u884c\uff0c\u8fd9\u6837\u4e0d\u65ad\u91cd\u590d\uff0c\u76f4\u5230\u6587\u4ef6\u672b\u5c3e\u3002\u6587\u4ef6\u5185\u5bb9\u5e76\u6ca1\u6709 \u6539\u53d8\uff0c\u9664\u975e\u4f60\u4f7f\u7528\u91cd\u5b9a\u5411\u5b58\u50a8\u8f93\u51fa\u3002`Sed`\u4e3b\u8981\u7528\u6765\u81ea\u52a8\u7f16\u8f91\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\uff1b\u7b80\u5316\u5bf9\u6587\u4ef6\u7684\u53cd\u590d\u64cd\u4f5c\uff1b\u7f16\u5199\u8f6c\u6362\u7a0b\u5e8f\u7b49\u3002\\n\\n`Sed`\u547d\u4ee4\u6211\u76ee\u524d\u4e3b\u8981\u662f\u7528\u5728\u7f16\u5199`dockerfile`\u65f6\u7528\u4e8e\u6267\u884c\u66ff\u6362\u914d\u7f6e\u4f7f\u7528\u7684\uff0c\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u7528\u6700\u5c0f\u7684`scratch`\u955c\u50cf\uff0c\u56e0\u4e3a`sed`\u547d\u4ee4\u9700\u8981\u5728\u6709`sh`\u73af\u5883\u4e2d\u6267\u884c\uff0c\u6700\u5c0f\u7684\u5c31\u662f`alpine`\u3002\\n\\n\u5f53\u9047\u5230\u4e0d\u4f1a\u4f7f\u7528\u7684\u65f6\u5728`Linux`\u7cfb\u7edf\u4e0a\u67e5\u770b\u64cd\u4f5c\u624b\u518c`man sed`.\\n\\n## \u66ff\u6362\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\\n\\n### \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\\n\\n\u6bd4\u5982\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u662f`mysql`\u7684\u914d\u7f6e\uff0c\u529f\u80fd\u5c31\u662f\u66ff\u6362`mysql`\u7684\u7684\u914d\u7f6e\u3002\u5982\u4e0b\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684`java`\u4f7f\u7528`mysql`\u7684\u914d\u7f6e\u3002\\n\\n```properties\\n# application.properties\\nspring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/demo?autoReconnect=true&useUnicode=true&characterEncoding=utf8&serverTimezone=GM    T&allowMultiQueries=true&useSSL=false\\nspring.datasource.druid.username=test\\nspring.datasource.druid.password=test\\n```\\n\\n### \u66ff\u6362\u811a\u672c\u5982\u4e0b\\n\u811a\u672c\u529f\u80fd\u5c31\u662f\u7528\u4e8e\u66ff\u6362\u4e0a\u8ff0\u6570\u636e\u4e2d\u7684`host`\u3001`port`\u3001`username`\u3001`password`\u3001`dbname`\u8fd9\u4e9b\u914d\u7f6e\u3002\\n\\n\u5982\u4e0b\u662f`Dockerfiele`\u6587\u4ef6\u5185\u5bb9.\\n```shell\\nFROM alpine:3.9.4  \\nENV DB_USER=\\"\\" DB_HOST=\\"\\" DB_PASSWORD=\\"\\" DB_PORT=\\"\\" DB_NAME=\\"\\"\\nENTRYPOINT [\\"/bin/sh\\",\\"-c\\",\\"sh /docker-entrypoint.sh\\"]\\n```\\n\\n\u5982\u4e0b\u5c31\u662f\u6267\u884c\u7684\u811a\u672c`docker-entrypoint.sh`\u3002\\n\\n```shell\\n#! /bin/bash\\n# \u6307\u5b9a\u6587\u4ef6\u76ee\u5f55\\nAPPLICATION_NAME = \\"./application.properties\\"\\nsed -i \\"s/\\"\\nsed -i \\"s/127.0.0.1:3306\\\\/demo/${DB_HOST}:${DB_PORT}\\\\/${DB_NAME}/g\\" ${APPLICATION_NAME}\\nsed -i \\"s/spring.datasource.druid.username=test/spring.datasource.druid.username=${DB_USER}/g\\" ${APPLICATION_NAME}\\nsed -i \\"s/spring.datasource.druid.password=test/spring.datasource.druid.password=${DB_PASSWORD}/g\\" ${APPLICATION_NAME}\\n\\njava -jar demo.java\\n```\\n\\n\u5982\u4e0a\u5c31\u53ef\u4ee5\u6267\u884c\u66ff\u6362\u4e00\u4e9b\u914d\u7f6e\u4e86\u3002\\n\\n## \u4f7f\u7528Tips\\n\\n- \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u5148\u8fdb\u884c\u9a8c\u8bc1\u3002\\n```shell\\n$ echo \\"spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/demo?autoReconnect=true&useUnicode=true&characterEncoding=utf8&serverTimezone=GM\\" | sed \\"s/127.0.0.1:3306\\\\/demo/127.0.0.2:3307\\\\/test/g\\"\\nspring.datasource.druid.url=jdbc:mysql://127.0.0.2:3307/test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&serverTimezone=GM\\n```\\n\u9a8c\u8bc1\u597d\u4e86\u5728\u4fee\u6539\u4e00\u4e0b\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u5c11\u4e86`-i`\u547d\u4ee4\u9009\u9879\u548c\u6587\u4ef6\u540d,`-i`\u5c31\u662f\u7528\u4e8e\u4fee\u6539\u672c\u5730\u6587\u4ef6\u7684\u4e00\u4e2a\u9009\u9879\u3002\\n\\n- \u5339\u914d\u65f6\u5c3d\u91cf\u4f7f\u7528\u80fd\u552f\u4e00\u547d\u4e2d\u7684\\n```shell\\n$ sed \\"s/spring.datasource.druid.password=test/spring.datasource.druid.password=${DB_PASSWORD}/g\\"\\n$ sed \\"s/test/${DB_PASSWORD}/g\\"\\n```\\n\u5982\u4e0a\u7684\u4e24\u4e2a\u5339\u914d\u89c4\u5219\uff0c\u7b2c\u4e00\u4e2a\u6700\u597d\uff0c\u7b2c\u4e8c\u4e2a\u4f1a\u628a\u5339\u914d\u5230`test`\u7684\u6240\u6709\u5730\u65b9\u90fd\u66f4\u6539\u8c03\uff0c\u6240\u6709\u6700\u597d\u4f7f\u7528\u552f\u4e00\u5339\u914d\u89c4\u5219\u3002\\n\\n\\n## \u53c2\u8003\\n\\n- `man sed`\\n- [man.net](http://man.linuxde.net/sed)"},{"id":"Go-sync-package","metadata":{"permalink":"/blog/Go-sync-package","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-06-18-Go-sync-package.md","source":"@site/blog/2019-06-18-Go-sync-package.md","title":"Go sync package","description":"Go sync \u5305\u4f7f\u7528\u548c\u5206\u6790","date":"2019-06-18T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/golang","description":"golang"}],"readingTime":12.345,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"Go-sync-package","title":"Go sync package","authors":["rongfu"],"tags":["golang"]},"unlisted":false,"prevItem":{"title":"Linux sed","permalink":"/blog/linux-sed"},"nextItem":{"title":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","permalink":"/blog/Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790"}},"content":"`Go sync` \u5305\u4f7f\u7528\u548c\u5206\u6790\\n\x3c!-- truncate --\x3e\\n# Go sync package\\n\\n`sync`\u5305\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u540c\u6b65\u539f\u8bed\uff0c\u6bd4\u5982\u540c\u6b65\u9501\uff0c\u8fd8\u6709\u5176\u4ed6\u7684`Once`\u548c`WaitGroup`\uff0c\u5927\u591a\u6570\u90fd\u7528\u4e8e\u4f4e\u7ea7\u522b\u7684\u5e93\uff0c\u9ad8\u7ea7\u522b\u7684\u540c\u6b65\u63a7\u5236\u6700\u597d\u7528`channels`\u3002\\n\\n## Cond\\n\\n`Cond`\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6761\u4ef6\u53d8\u91cf,\u7b49\u5f85\u6216\u5ba3\u5e03\u4e8b\u4ef6\u53d1\u751f\u7684`goroutines`\u7684\u96c6\u5408\u70b9\u3002\\n\\n\u4efb\u4f55\u4e00\u4e2a`Cond`\u90fd\u6709\u4efb\u610f\u4e00\u4e2a\u76f8\u5173\u7684\u9501\u5bf9\u8c61`L`\uff0c\u53ef\u4ee5\u662f\u540c\u6b65\u9501\u6216\u8005\u8bfb\u5199\u9501\u3002\u4e0d\u8bba\u9009\u62e9\u54ea\u4e00\u4e2a\u5fc5\u987b\u5728\u6761\u4ef6\u6539\u53d8\u548c\u7b49\u5f85\u8c03\u7528\u65b9\u6cd5\u524d\u4e0d\u88ab\u6539\u53d8\u3002\\n\\n`Cond`\u4f7f\u7528\u4e4b\u540e\u4e0d\u80fd\u88ab\u590d\u5236\u3002\\n\\n`Cond`\u4e3b\u8981\u7528\u4e8e`go`\u4e4b\u95f4\u7684\u6d88\u606f\u901a\u77e5\u3002\\n\\n### func (c *Cond) Wait()\\n```go\\nfunc (c *Cond) Wait()\\n```\\n\u7b49\u5f85`c.L`\u539f\u5b50\u89e3\u9501\u4ee5\u53ca\u6682\u505c\u6267\u884c\u8c03\u7528`goroutine`\uff0c\u4e4b\u540e\u518d\u6062\u590d\u6267\u884c\uff0c\u5728\u8fd4\u56de\u524d\u52a0\u9501`c.L`,\u9664\u975e\u88ab\u5e7f\u64ad\u6216\u4fe1\u53f7\u5524\u9192\uff0c\u5426\u5219\u7b49\u5f85\u65e0\u6cd5\u8fd4\u56de\u3002\\n\\n\u4f7f\u7528\u4f8b\u5b50:\\n```go\\nc.L.Lock()\\nfor !condition() {\\n    c.Wait()\\n}\\n... make use of condition ...\\nc.L.Unlock()\\n```\\n\\n### func (*Cond) Signal\\n```go\\nfunc (*Cond) Signal\\n```\\n`Signal`\u51fd\u6570\u662f\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\uff0c\u7528\u4e8e\u5524\u9192\u4e00\u4e2a\u7b49\u5f85\u7684`go`,\u5982\u679c\u6709\u591a\u4e2a`go`\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\uff0c\u5219\u4e0d\u80fd\u63a7\u5236\u5524\u9192\u90a3\u4e2a`go`\u3002\\n\\n### func (*Cond) Broadcast\\n```go\\nfunc (*Cond) Broadcast\\n```\\n`Broadcast`\u5e7f\u64ad\u51fd\u6570\u7528\u4e8e\u5524\u9192\u6240\u6709\u7b49\u5f85\u7684`go`\u3002\\n\\n## Mutex\\n`Mutex`\u5c31\u662f\u4e00\u4e2a\u4e92\u65a5\u9501\u7684\u3002\u4fdd\u8bc1\u4efb\u4f55\u8d44\u6e90\u53ea\u80fd\u88ab\u4efb\u4f55\u4e00\u4e2a`go`\u4f7f\u7528\u3002\\n\\n```go\\ntype Mutex struct {\\n\\tstate int32 # \u72b6\u6001\\n\\tsema  uint32 # \u4fe1\u53f7\u91cf\u5b57\u6bb5semaphore\\n}\\n```\\n\\n### func (*Mutex) Lock\\n```go\\nfunc (m *Mutex) Lock()\\n```\\n\\n\u9501`m`,\u5982\u679c\u9501\u5df2\u88ab\u4f7f\u7528\uff0c\u5219\u8c03\u7528`goroutine`\u5c06\u963b\u585e\uff0c\u76f4\u5230\u4e92\u65a5\u9501\u53ef\u7528\u3002\\n\\n```go\\n# Lock \u51fd\u6570,\u4f7f\u7528CAS\u7b97\u6cd5\uff0c\u5982\u679c\u9501\u72b6\u6001\u662f0\uff0c\u671f\u671b\u503c\u4e5f\u662f0\uff0c\u5c31\u4fee\u6539\u4e3a1\uff0c\u5982\u679c\u518d\u6b21\u52a0\u9501\u65f6\uff0c\u5185\u5b58\u503c\u662f1\uff0c\u671f\u671b\u503c\u662f0\uff0c\u64cd\u4f5c\u5c31\u662f\u5931\u8d25\uff0c\u5f97\u5230\u7684\u5c31\u662ffalse;\u7b2c\u4e00\u6b21\u52a0\u9501\u65f6m.state\u662f0\\nif atomic.CompareAndSwapInt32(&m.state, 0, mutexLocked) {\\n\\t\\tif race.Enabled {\\n\\t\\t\\trace.Acquire(unsafe.Pointer(m))\\n\\t\\t}\\n\\t\\treturn\\n\\t}\\n\\t.....\\n# \u5982\u679c\u518d\u6b21\u52a0\u9501\u5c31\u4f1a\u8fdb\u5165go\u7b49\u5f85\u961f\u5217\u4e2d\u3002\u5982\u679clifo\u4e3atrue,\u961f\u5217\u7b49\u5f85\u5728\u7b49\u5f85\u961f\u5217\u7684\u5934\u90e8\u3002\\t\\n# m.sema \u662f\u4fe1\u53f7\u91cf,\u8fd9\u4e2a\u65b9\u6cd5\u53efSemacquire\u65b9\u6cd5\u4e00\u6837\uff0c\u662f\u4e3a\u4e86Mutexes\u5b9e\u73b0\u7684\uff0c\u5982\u679clifo\u4e3atrue\uff0c\u5219\u5728\u7b49\u5f85\u961f\u5217\u7684\u5934\u90e8\u6392\u961f\u670d\u52a1\u5458\\nruntime_SemacquireMutex(&m.sema, queueLifo)\\n```\\n\\n```go\\n# Semacquire\u7b49\u5f85\u76f4\u5230* s> 0\u7136\u540e\u4ee5\u539f\u5b50\u65b9\u5f0f\u9012\u51cf\u5b83\u3002\\nfunc runtime_Semacquire(s *uint32)\\n```\\n\\n### func (*Mutex) Unlock\\n```go\\nfunc (m *Mutex) Unlock()\\n# \u89e3\u9501\u7684\u65f6\u5019\u5c31\u8fdb\u884cm.state\u539f\u5b50\u52a0-1\uff0c\u5982\u679c\u591a\u6b21\u89e3\u9501\u5c31\u4f1a\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\\nnew := atomic.AddInt32(&m.state, -mutexLocked)\\nif (new+mutexLocked)&mutexLocked == 0 {\\n\\t\\tthrow(\\"sync: unlock of unlocked mutex\\")\\n\\t}\\n....\\n# \u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u662f\u6267\u884c\u539f\u5b50\u7684\u9012\u589em.sema,\u5e76\u901a\u77e5\u4e00\u4e2a\u963b\u585e\u5728Semacquire\u7684\u7b49\u5f85goroutines\\nruntime_Semrelease(&m.sema, false)\\n```\\n\\n\u4e92\u65a5\u9501\u4e0e`go`\u4e0d\u7ed1\u5b9a\uff0c\u53ef\u4ee5`go1`\u8fdb\u884c\u52a0\u9501,`go2`\u8fdb\u884c\u89e3\u9501\u3002\u53ea\u8981\u89e3\u9501\u5728\u52a0\u9501\u540e\u64cd\u4f5c\u5c31\u884c\u3002\\n\\n`go`\u4e2d\u7684\u4e92\u65a5\u9501\u662f\u901a\u8fc7\u4fe1\u53f7\u91cf\u548c\\n\\n\\n## Once\\n`Once`\u662f\u4e00\u4e2a\u53ea\u6267\u884c\u4e00\u6b21\u52a8\u4f5c\u7684\u5bf9\u8c61\u3002\u4e00\u822c\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5\u5173\u95ed\uff0c\u4fdd\u8bc1\u53ea\u6267\u884c\u4e00\u6b21;\u6216\u8005\u7528\u4e8e\u6267\u884c\u521d\u59cb\u5316\uff0c\u4fdd\u8bc1\u53ea\u521d\u59cb\u5316\u4e00\u6b21\u3002\\n\\n### func (*Once) Do\\n```go\\nfunc (o *Once) Do(f func()) {\\n\\tif atomic.LoadUint32(&o.done) == 1 {\\n\\t\\treturn\\n\\t}\\n\\t// Slow-path.\\n\\to.m.Lock()\\n\\tdefer o.m.Unlock()\\n\\tif o.done == 0 {\\n\\t\\tdefer atomic.StoreUint32(&o.done, 1)\\n\\t\\tf()\\n\\t}\\n}\\n```\\n\u5982\u679c`once.Do(f)`\u88ab\u8c03\u7528\u591a\u6b21\uff0c\u4e5f\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u5373\u65f6\u53c2\u6570`f`\u4e0d\u4e00\u81f4\u4e5f\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u3002\u6bcf\u4e2a\u9700\u8981\u6267\u884c\u4e00\u6b21\u7684\u51fd\u6570\u90fd\u9700\u8981\u521b\u5efa\u4e00\u4e2a`Once`\u5bf9\u8c61\u3002\u6267\u884c`f`\u51fd\u6570\u65f6\u5982\u679c\u51fa\u73b0`panics`\u4e5f\u4f1a\u8ba4\u4e3a\u6267\u884c\u8fc7\u4e86\uff0c\u4e0d\u4f1a\u518d\u6b21\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\\n\\n\u5982\u679c\u51fa\u73b0\u5faa\u73af\u8c03\u7528\u5c31\u4f1a\u51fa\u73b0\u6b7b\u9501\uff1b\u8fd9\u4e2a\u70b9\u770b\u6e90\u7801\u5c31\u77e5\u9053\u4e86\u3002\\n```go\\nonce.Do(func() {\\n\\t\\tonce.Do(func() {\\n\\t\\t\\tf(\\"test\\")\\n\\t\\t})\\n\\t})\\n```\\n\\n## Pool\\n\u6c60\u662f\u4e00\u7ec4\u53ef\u4ee5\u5355\u72ec\u4fdd\u5b58\u548c\u68c0\u7d22\u7684\u4e34\u65f6\u5bf9\u8c61,\u6c60\u4e2d\u7684\u5bf9\u8c61\u53ef\u80fd\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\uff0c\u6c60\u4f7f\u7528\u65f6\u65f6\u5b89\u5168\u7684\uff1b\u6c60\u4e3b\u8981\u65f6\u7f13\u5b58\u5df2\u7ecf\u521b\u5efa\u4f46\u662f\u672a\u4f7f\u7528\u5230\u5bf9\u8c61\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u8f7bGC\u7684\u538b\u529b\uff1b`fmt`\u5305\u4e2d\u4f7f\u7528\u7684\u6c60\u65f6\u6bd4\u8f83\u597d\u7684\uff0c\u5728\u5927\u8d1f\u8f7d\u4e0b\u8fdb\u884c\u6269\u5c55\uff0c\u5728\u8d1f\u8f7d\u964d\u4f4e\u65f6\u8fdb\u884c\u6536\u7f29\u3002\\n\\n## RWMutex\\n```go\\ntype RWMutex struct {\\n\\tw           Mutex  // \u5199\u4e92\u65a5\u9501\\n\\twriterSem   uint32 // \u5199\u4fe1\u53f7\u91cf\\n\\treaderSem   uint32 // \u8bfb\u4fe1\u53f7\u91cf\\n\\treaderCount int32  // \u8bfb\u963b\u585e\u7684\u6570\u91cf\\n\\treaderWait  int32  // \u8bfb\u653e\u5f03\u7684\u6570\u91cf\\n}\\nconst rwmutexMaxReaders = 1 << 30\\n```\\n\\n\u52a0\u8bfb\u9501\u6700\u5927\u6b21\u6570\u662f`2^30`\u6b21\u3002\\n\\n`RWMutex`\u662f\u4e00\u4e2a\u8bfb\u5199\u4e92\u65a5\u9501\uff0c\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u8bfb\u9501\u6216\u8005\u4e00\u4e2a\u5199\u9501\uff0c`RWMutex`\u7684\u96f6\u503c\u72b6\u6001\u65f6\u662f\u4e92\u65a5\u9501,\u5199\u9501\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8bfb\u5199\u9501\u3002\\n\\n\u89e3\u91ca\u4e00\u4e0b\u5199\u9501\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8bfb\u9501\uff1a\u6bd4\u5982\u6709`10`\u4e2a`goroutines`\u83b7\u53d6\u4e86\u8bfb\u9501\uff0c\u6b64\u65f6\u518d\u6709\u4e00\u4e2a`go`\u6765\u83b7\u53d6\u5199\u9501\uff0c\u8fd9\u4e2a`go`\u5c31\u4f1a\u8fdb\u5165\u963b\u585e\u72b6\u6001,\u7136\u540e\u53c8\u6709\u4e00\u7ec4`go`\u6765\u83b7\u53d6\u8bfb\u9501\uff0c\u6b64\u65f6\u5c31\u83b7\u53d6\u4e0d\u5230\u8bfb\u9501\u4e86\uff0c\u9700\u8981\u7b49\u524d\u9762\u7684\u8bfb\u9501\u5168\u90e8\u91ca\u653e\u5b8c\uff0c\u5e76\u4e14\u5199\u9501\u91ca\u653e\u8fc7\u540e\u624d\u80fd\u518d\u6b21\u83b7\u53d6\u8bfb\u9501\uff0c\u6240\u4ee5\u5c31\u662f\u8bf4\u5199\u9501\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8bfb\u9501\u3002\u4e0d\u8fd9\u6837\u5904\u7406\u7684\u8bdd\u5199\u9501\u4f1a\u5904\u4e8e\u6c38\u4e45\u9965\u997f\u4e2d\u3002\\n\\n### func (*RWMutex) Lock \\n```go\\nfunc (rw *RWMutex) Lock \\n```\\n\u7528\u4e8e`rw`\u7684\u5199\u9501\uff0c\u5982\u679c\u9501\u662f\u5df2\u7ecf\u88ab\u8bfb\u6216\u5199\u4f7f\u7528\uff0c\u90a3\u9501\u5c06\u963b\u585e\u77e5\u9053\u53ef\u7528\u3002\\n\\n### func (*RWMutex) RLock \\n```go\\nfunc (rw *RWMutex) RLock \\n```\\n\u7528\u4e8e`rw`\u7684\u8bfb\u9501\uff0c\u6b21\u9501\u4e0d\u80fd\u88ab\u9012\u5f52\u8c03\u7528\u3002\\n\\n### func (*RWMutex) RLocker\\n```go\\nfunc (rw *RWMutex) RLocker\\n```\\n`RLocker`\u8fd4\u56de\u4e00\u4e2a`Locker`\u63a5\u53e3\uff0c\u901a\u8fc7\u8c03\u7528`Lock`\u548c`Unlock`\u6765\u5b9e\u73b0`rw.RLock`\u548c`rw.RUnlock`\u65b9\u6cd5\u3002\\n\\n### func (*RWMutex) RUnlock\\n```go\\nfunc (rw *RWMutex) RUnlock \\n```\\n`RUnlock`\u7528\u4e8e\u89e3\u9501\u5176\u4e2d\u4e00\u4e2a\u8bfb\u9501\uff0c\u5982\u679c\u6ca1\u6709\u52a0\u7684\u8bfb\u9501\u5c31\u4f1a\u51fa\u73b0\u5f02\u5e38\u3002\\n\\n### func (*RWMutex) Unlock\\n```go\\nfunc (rw *RWMutex) Unlock\\n```\\n\u89e3\u9664`rw`\u7684\u5199\u9501\uff0c\u5982\u679c`rw`\u662f\u6ca1\u6709\u52a0\u5199\u9501\u5c31\u4f1a\u51fa\u73b0\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u548c\u4e92\u65a5\u9501\u4e00\u6837`Mutex`,\u9501\u5bf9\u8c61\u548c`goroutines`\u6ca1\u6709\u5173\u8054\uff0c\u53ef\u4ee5\u4efb\u610f`go`\u52a0\u9501\uff0c\u4efb\u610f`go`\u89e3\u9501\u3002\\n\\n\\n\\n## Context\\n`Context`\u4e3b\u8981\u7528\u4e8e\u5728\u4e00\u4e2a`http request`\u4e2d\uff0c\u542f\u52a8\u4e86\u591a\u4e2a`go`\u53bb\u8bbf\u95ee\u5176\u4ed6\u8d44\u6e90\uff0c`context`\u4e3b\u8981\u7528\u4e8e\u53ef\u4ee5\u7edf\u4e00\u63a7\u5236\u5176\u4ed6\u7684`go`\u4e00\u8d77\u9000\u51fa\u3002\\n`Context`\u65b9\u6cd5\u53ef\u4ee5\u7531\u591a\u4e2a`go`\u540c\u65f6\u4f7f\u7528\u3002\\n\\n`Context`\u5b9a\u4e49\u7684\u63a5\u53e3\u5982\u4e0b\uff0c\u4e3b\u8981\u5b9e\u73b0\u5982\u4e0b\u7684\u51e0\u4e2a\u529f\u80fd\u3002\\n```go\\ntype Context interface {\\n    //\u5b50go\u7528\u4e8e\u76d1\u542c\u7236go\u662f\u5426\u53d1\u8d77\u7ed3\u675f\u5f53\u524dgo\u7684\u6d88\u606f\\n    Done() <-chan struct{}\\n    // \u8fd4\u56de\u5173\u95ed\u7684\u539f\u56e0\\n    Err() error\\n    //\u8fd4\u56de\u5230\u671f\u65f6\u95f4\uff0c\u6bd4\u5982\u8bbe\u7f6e\u4e865s\u53d6\u6d88\uff0c\u90a3\u8fd4\u56de\u7684\u503c\u5c31\u662f5s\u540e\u7684\u65f6\u95f4\uff0cok is true if your setting deadling\\n    Deadline() (deadline time.Time, ok bool)\\n    //\u4ececontext\u4e2d\u53d6\u51fakey\u7684\u503c\\n    Value(key interface{}) interface{}\\n}\\n```\\n\\n\u4f7f\u7528\u65b9\u6cd5\u4e3b\u8981\u7531\u5982\u4e0b\uff1a\\n```go\\n# \u8bbe\u7f6e\u8d85\u65f6\u8fd4\u56de\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684context\\nfunc WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc)\\n# \u6ca1\u6709\u8d85\u65f6\u65f6\u95f4\uff0c\u53ea\u662f\u7528\u4e8e\u901a\u77e5\u5b50go\u6267\u884c\u5173\u95ed\\nfunc WithCancel(parent Context) (ctx Context, cancel CancelFunc)\\n# \u8bbe\u7f6e\u4e00\u4e2a\u503c\u5230context\u4e2d\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684ctx\\nfunc WithValue(parent Context, key, val interface{}) Context\\n```\\n\\n\u4e3b\u8981\u4f7f\u7528\u7684\u4e00\u4e2a`Http`\u8bf7\u6c42\u4e2d\uff0c\u7528\u6765\u63a7\u5236\u5b50`go`\u3002\u5982\u4e0b\u7684\u4ee3\u7801\u662f\u6a21\u62df\u5728\u4e00\u4e2a`demo`\u7684`controller`\u4e2d\uff0c\u53bb\u5e76\u53d1\u7684\u8bf7\u6c42\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u8d44\u6e90\uff0c\u8fd8\u6709`gRpc`\u8c03\u7528\u7b49\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u7528\u5b50`go`\u53bb\u8c03\u7528\u7684\u3002\\n```go\\nfunc main() {\\n\\n\\thttp.HandleFunc(\\"/demo\\",demo)\\n\\thttp.ListenAndServe(\\":8888\\",nil)\\n}\\nfunc demo(w http.ResponseWriter,r *http.Request)  {\\n\\ttimeout, err := time.ParseDuration(r.FormValue(\\"timeout\\"))\\n\\tif err != nil {\\n\\t\\thttp.Error(w, err.Error(), http.StatusInternalServerError)\\n\\t\\treturn\\n\\t}\\n\\tvar (\\n\\t\\tctx context.Context\\n\\t\\tcancel context.CancelFunc\\n\\t)\\n\\tif err != nil {\\n\\t\\tctx, cancel = context.WithTimeout(r.Context(), timeout)\\n\\t}else {\\n\\t\\tctx,cancel = context.WithCancel(r.Context())\\n\\t}\\n\\n\\tdefer cancel()\\n\\tdatabase := getDatabaseData(ctx)\\n\\tage,ct := gRpcServer(ctx)\\n\\tif deadline, ok := ctx.Deadline() ; ok {\\n\\t\\tfmt.Println(deadline.String())\\n\\t\\tfmt.Println(time.Now().String())\\n\\t}\\n\\tif err := ctx.Err(); err != nil {\\n\\t\\tfmt.Println(err)\\n\\t}\\n\\tif value := ct.Value(ageKey); value != nil {\\n\\t\\tfmt.Println(\\"value:\\",value)\\n\\t}\\n\\tfmt.Fprint(w,fmt.Sprintf(\\"Database:%s\\\\nAge:%d\\",database,age))\\n}\\n\\n\\nfunc getDatabaseData(ctx context.Context) string {\\n\\tc := make(chan string)\\n\\tgo func() {\\n\\t\\ttime.Sleep(time.Second*2)\\n\\t\\tc <- \\"database\\"\\n\\t}()\\n\\tselect {\\n\\tcase <- ctx.Done():\\n\\t\\treturn \\"\\"\\n\\tcase r := <- c:\\n\\t\\treturn r\\n\\t}\\n}\\n\\nfunc gRpcServer(ctx context.Context) (int,context.Context) {\\n\\tc := make(chan int)\\n\\tgo func() {\\n\\t\\ttime.Sleep(2*time.Second)\\n\\t\\tc <- 24\\n\\t}()\\n\\tct := context.WithValue(ctx, ageKey, ageKey)\\n\\tselect {\\n\\tcase <- ctx.Done():\\n\\t\\treturn 0,ct\\n\\tcase v := <- c:\\n\\t\\treturn v,ct\\n\\t}\\n}\\n```\\n\\n\u4e0a\u9762\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6709\u70b9\u95ee\u9898\uff0c\u4f1a\u51fa\u73b0`go`\u4e0d\u80fd\u4f1a\u56de\u6536\uff0c\u6cc4\u6f0f\u7684\u60c5\u51b5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4f1a\u51fa\u73b0\uff1a\u51fd\u6570\u4e2d\u542f\u52a8\u7684`go`\u8fd8\u5728\u4f11\u7720\uff0c\u8fd8\u6ca1\u6709\u5199\u5165\u5230`c`\u4e2d\uff0c\u6b64\u65f6\u6536\u5230`ctx.Done()`\u7684\u4fe1\u53f7\uff0c\u5c31\u8fd4\u56de\u4e86\uff0c\u6b64\u65f6\u5c31\u4f1a\u51fa\u73b0\u5199\u5165\u4e0d\u4e86`c`\u8fd9\u4e2a`chan`\u4e2d\uff0c\u4e8e\u662f\u8fd9\u4e2a`go`\u5c31\u6c38\u8fdc\u4e0d\u80fd\u88ab\u91ca\u653e\u4e86\u3002\\n\\n**\u89e3\u51b3\u529e\u6cd5\u6709\u4e24\u79cd:**\\n- \u63a5\u6536\u5230\u5173\u95ed\u4fe1\u53f7\u4e4b\u540e\u7b49\u5f85`c`\u8fd4\u56de\\n\\n```go\\nfunc getDatabaseData(ctx context.Context) string {\\n\\tc := make(chan string)\\n\\tgo func() {\\n\\t\\ttime.Sleep(time.Second*2)\\n\\t\\tc <- \\"database\\"\\n\\t}()\\n\\tselect {\\n\\tcase <- ctx.Done():\\n\\t    <- c //\u5728\u6b64\u7b49\u5f85c\u8fd4\u56de\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u963b\u585ehttp\u8bf7\u6c42\uff0c\u5c31\u4f1a\u51fa\u73b0\u53d8\u6210\u540c\u6b65\u64cd\u4f5c\u3002\\n\\t\\treturn \\"\\"\\n\\tcase r := <- c:\\n\\t\\treturn r\\n\\t}\\n}\\n# \u4e0b\u4e00\u4e2a\u65b9\u6cd5\u540c\u4e0a\\n```\\n- \u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u5173\u95ed\u8fd9\u4e2a`chan`\uff0c\u8fd9\u79cd\u65e2\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0`go`\u4e0d\u80fd\u91ca\u653e\\n```go\\nfunc getDatabaseData(ctx context.Context) string {\\n\\tc := make(chan string)\\n\\tgo func() {\\n\\t    // \u5982\u679c\u52a0\u5165\u5173\u95ed\u901a\u9053\u7684\u64cd\u4f5c\uff0c\u90a3\u5c31\u4e00\u5b9a\u8981\u52a0\u6355\u83b7panic\u7684\u64cd\u4f5c\uff0c\u4e0d\u7136\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u63a8\u51fa\u3002\u56e0\u4e3a\u53d1\u9001\u5230\u4e00\u4e2a\u5173\u95ed\u7684chan\u4e2d\u4f1a\u51fa\u73b0panic\\n\\t    defer func() {\\n\\t\\t\\tif err := recover() ; err != nil {\\n\\n\\t\\t\\t}\\n\\t\\t}()\\n\\t\\ttime.Sleep(time.Second*2)\\n\\t\\tc <- \\"database\\"\\n\\t}()\\n\\tselect {\\n\\tcase <- ctx.Done():\\n\\t    close(c)\\n\\t\\treturn \\"\\"\\n\\tcase r := <- c:\\n\\t\\treturn r\\n\\t}\\n}\\n```\\n\\n## \u6d89\u53ca\u5230\u7684\u7b97\u6cd5\\n\\n### CAS \u7b97\u6cd5\\n`CAS`\u7b97\u6cd5\u53c8\u53eb\u65e0\u9501\u7b97\u6cd5\uff0c\u5168\u79f0\u662f`(Compare-and-swap)`\u6bd4\u8f83\u4ea4\u6362\u7b97\u6cd5\u3002`CAS`\u7b97\u6cd5\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u662f\u5e76\u53d1\u5b89\u5168\u7684\u3002\\n\\n`CAS`\u7b97\u6cd5\u6709\u4e09\u4e2a\u64cd\u4f5c\u6570,\u7b2c\u4e00\u4e2a\u662f\u5185\u5b58\u503cV\uff0c\u7b2c\u4e8c\u4e2a\u662f\u65e7\u9884\u671f\u503cA\uff0c\u7b2c\u4e09\u4e2a\u662f\u65b0\u503cB\uff1b\u5f53\u4e14\u4ec5\u5f53\u9884\u671f\u503cA\u548c\u5185\u5b58\u503cV\u76f8\u540c\u65f6\uff0c\u5c06\u5185\u5b58\u503cV\u4fee\u6539\u4e3aB\uff0c\u5426\u5219\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\\n\\n### \u4fe1\u53f7\u91cf\u7b97\u6cd5\\n\u4fe1\u53f7\u91cf\u662f`Unix`\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u79cd\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\u7684\u673a\u5236\uff0c\u7528\u4e8e\u9632\u6b62\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u67d0\u4e2a\u8d44\u6e90\u3002\\n\\n\u53ef\u7b80\u5355\u7406\u89e3\u4e3a\u4fe1\u53f7\u91cf\u4e3a\u4e00\u4e2a\u6570\u503c\uff1a\\n- \u5f53\u4fe1\u53f7\u91cf>0\u65f6\uff0c\u8868\u793a\u8d44\u6e90\u53ef\u7528\uff0c\u83b7\u53d6\u4fe1\u53f7\u91cf\u65f6\u7cfb\u7edf\u81ea\u52a8\u5c06\u4fe1\u53f7\u91cf\u51cf1\uff1b\\n- \u5f53\u4fe1\u53f7\u91cf==0\u65f6\uff0c\u8868\u793a\u8d44\u6e90\u6682\u4e0d\u53ef\u7528\uff0c\u83b7\u53d6\u4fe1\u53f7\u91cf\u65f6\uff0c\u5f53\u524d\u7ebf\u7a0b\u4f1a\u8fdb\u5165\u7761\u7720\uff0c\u5f53\u4fe1\u53f7\u91cf\u4e3a\u6b63\u65f6\u88ab\u5524\u9192\uff1b\\n- \\n## \u53c2\u8003\\n\\n- https://golang.org/pkg/sync/\\n- https://colobu.com/2019/04/28/gopher-2019-concurrent-in-action/#Cond\\n- [Go Concurrency Patterns: Context](https://blog.golang.org/context)"},{"id":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","metadata":{"permalink":"/blog/Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-06-14-Go\u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u89e3.md","source":"@site/blog/2019-06-14-Go\u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u89e3.md","title":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","description":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","date":"2019-06-14T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/golang","description":"golang"}],"readingTime":6.4,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","title":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","authors":["rongfu"],"tags":["golang"]},"unlisted":false,"prevItem":{"title":"Go sync package","permalink":"/blog/Go-sync-package"},"nextItem":{"title":"Go Bootstrap Process","permalink":"/blog/Go-Bootstrap-Process"}},"content":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790\\n\x3c!-- truncate --\x3e\\n\\n\\n\u672c\u6587\u662f\u5bf9`https://colobu.com/2019/04/28/go-concurrency-quizzes/`\u6641\u5cb3\u6500\u8001\u5e08\u535a\u5ba2\u4e2d\u63d0\u5230\u7684\u5e76\u53d1\u6d4b\u8bd5\u4f8b\u5b50\u7684\u8bb2\u89e3\u3002\\n\\n\u6211\u6309\u95ee\u9898\u7c7b\u578b\u6765\u5206\u7c7b\u8bf4\u660e\u9519\u8bef\u539f\u56e0\u3002\\n\\n## \u6240\u4ee5P\u4e2d\u6ca1\u6709\u53ef\u4ee5\u8c03\u5ea6\u7684G\u65f6\u5c31\u4f1a\u51fa\u73b0\u6b7b\u9501\\n\\n\u8fd9\u4e2a\u95ee\u9898\u6d89\u53ca\u5230\u7684\u9898\u76ee\u4e3a:`1\u3001Mutex`\uff0c`2\u3001RWMutex`.\\n\\n### 1\u3001Mutex\\n```go\\npackage main\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"sync\\"\\n)\\nvar mu sync.Mutex\\nvar chain string\\nfunc main() {\\n\\tchain = \\"main\\"\\n\\tA()\\n\\tfmt.Println(chain)\\n}\\nfunc A() {\\n\\tmu.Lock()\\n\\tdefer mu.Unlock()\\n\\tchain = chain + \\" --\x3e A\\"\\n\\tB()\\n}\\nfunc B() {\\n\\tchain = chain + \\" --\x3e B\\"\\n\\tC()\\n}\\nfunc C() {\\n\\tmu.Lock()\\n\\tdefer mu.Unlock()\\n\\tchain = chain + \\" --\x3e C\\"\\n}\\n$ go run main.go\\nfatal error: all goroutines are asleep - deadlock!\\n```\\n\u8fd9\u4e00\u9898\u7684\u95ee\u9898\u662f`runtime`\u4e2d\u53ea\u6709\u4e00\u4e2a`G`\uff0c\u4f46\u662f\u5f53\u8fd0\u884c\u5230`A()`\u65b9\u6cd5\u662f\u4ee5\u53ca\u52a0\u9501\uff0c\u540e\u9762\u7684`C()`\u65b9\u6cd5\u63a5\u7740\u53bb\u52a0\u9501\uff0c\u5c31\u4f1a\u51fa\u73b0\u62ff\u4e0d\u5230\u9501\uff0c\u4e8e\u662f\u8fd9\u4e2a`G`\u7684\u72b6\u6001\u5c31\u53d8\u4e3a\u4e0d\u53ef\u8fd0\u884c\uff0c\u6240\u4ee5\u5c31\u51fa\u73b0\u4e86`deadlock!`.\\n\\n### 2\u3001RWMutex\\n```go\\npackage main\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"sync\\"\\n\\t\\"time\\"\\n)\\nvar mu sync.RWMutex\\nvar count int\\nfunc main() {\\n\\tgo A()\\n\\ttime.Sleep(2 * time.Second)\\n\\tmu.Lock()\\n\\tdefer mu.Unlock()\\n\\tcount++\\n\\tfmt.Println(count)\\n}\\nfunc A() {\\n\\tmu.RLock()\\n\\tdefer mu.RUnlock()\\n\\tB()\\n}\\nfunc B() {\\n\\ttime.Sleep(5 * time.Second)\\n\\tC()\\n}\\nfunc C() {\\n\\tmu.RLock()\\n\\tdefer mu.RUnlock()\\n}\\n$ go run main.go\\nfatal error: all goroutines are asleep - deadlock!\\n```\\n\u8fd9\u4e00\u9898\u7684\u539f\u56e0\u4e5f\u662f\u4e00\u6837\u7684\uff0c`G`A\u4f11\u7720\u4e4b\u540e\u72b6\u6001\u5c31\u4f1a\u53d8\u4e3a\u7b49\u5f85\uff0c\u6b64\u65f6,\u4e3b`G`\u53bb\u90a3\u9501\u4e5f\u6ca1\u6709\u90a3\u5230\uff0c\u5c31\u4f1a\u53d8\u4e3a\u4e0d\u53ef\u8fd0\u884c\u72b6\u6001\uff0c\u5e76\u8ba9\u51fa`cpu`,\u6b64\u65f6\u6240\u6709\u7684`G`\u90fd\u4e0d\u53ef\u8fd0\u884c\u5c31\u51fa\u73b0\u6b7b\u9501\u4e86\u3002\\n\\n## WaitGroup \u4f7f\u7528\u95ee\u9898\\n```go\\npackage main\\nimport (\\n\\t\\"sync\\"\\n\\t\\"time\\"\\n)\\nfunc main() {\\n\\tvar wg sync.WaitGroup\\n\\twg.Add(1)\\n\\tgo func() {\\n\\t\\ttime.Sleep(time.Millisecond)\\n\\t\\twg.Done()\\n\\t\\twg.Add(1)\\n\\t}()\\n\\twg.Wait()\\n}\\n$ go run main.go\\npanic: sync: WaitGroup is reused before previous Wait has returned\\n```\\n\u539f\u56e0\u662f\u591a\u8c03\u7528\u4e86\u4e00\u4e2a`wg.Add(1)`\u3002\\n\\n## 4\u3001\u53cc\u68c0\u67e5\u5b9e\u73b0\u5355\u4f8b\\n```go\\npackage doublecheck\\nimport (\\n\\t\\"sync\\"\\n)\\ntype Once struct {\\n\\tm    sync.Mutex\\n\\tdone uint32\\n}\\nfunc (o *Once) Do(f func()) {\\n\\tif o.done == 1 {\\n\\t\\treturn\\n\\t}\\n\\to.m.Lock()\\n\\tdefer o.m.Unlock()\\n\\tif o.done == 0 {\\n\\t\\to.done = 1\\n\\t\\tf()\\n\\t}\\n}\\n```\\n\u8fd9\u4e00\u9898\u4e89\u8bae\u6700\u5927\uff0c\u535a\u4e3b\u662f\u60f3\u544a\u8bc9\u6211\u4eec\u7c7b\u4f3c\u4e8e`Java`\u91cc\u9762\u7f13\u5b58\u53d8\u91cf\u7684\u95ee\u9898\uff0c\u6211\u89c9\u5f97\u8fd9\u91cc\u662f\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u5bf9\u8c61\u662f\u6307\u9488\u8c03\u7528\uff1b\u8fd0\u884c\u672c\u8eab\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u4f1a\u51fa\u73b0\u6570\u636e\u7ade\u4e89\u3002\u4f7f\u7528`go run -race main.go`\u8fd0\u884c\u5c31\u4f1a\u53d1\u73b0\u6709\u6570\u636e\u7ade\u4e89\u3002\\n\\n\\n## 5\u3001\u540c\u6b65\u5bf9\u8c61\u4f7f\u7528\u540e\u4e0d\u80fd\u88ab\u62f7\u8d1d\\n```go\\npackage main\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"sync\\"\\n)\\ntype MyMutex struct {\\n\\tcount int\\n\\tsync.Mutex\\n}\\nfunc main() {\\n\\tvar mu MyMutex\\n\\tmu.Lock()\\n\\tvar mu2 = mu\\n\\tmu.count++\\n\\tmu.Unlock()\\n\\tmu2.Lock()\\n\\tmu2.count++\\n\\tmu2.Unlock()\\n\\tfmt.Println(mu.count, mu2.count)\\n}\\n$ go run main.go\\nfatal error: all goroutines are asleep - deadlock!\\n```\\n\u8fd9\u4e2a\u539f\u56e0\u5c31\u662f\u540c\u6b65\u5bf9\u8c61\u4f7f\u7528\u8fc7\u4e4b\u540e\u4e0d\u80fd\u518d\u88ab\u62f7\u8d1d\uff0c\u5982\u679c\u4e0a\u9762\u628a`mu.Lock()`\u548c`var mu2 = mu`\u8fd9\u4e24\u884c\u8fdb\u884c\u4ea4\u6362\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\\n\u4f7f\u7528\u8fc7\u540e\u4e0d\u53ef\u4ee5\u590d\u5236\u7684\u5bf9\u8c61\u6709\uff1a\\n```go\\n\\n// A Cond must not be copied after first use.\\ntype Cond struct \\n// A Map must not be copied after first use.\\ntype Map struct\\n// A Mutex must not be copied after first use.\\ntype Mutex struct\\n// A Pool must not be copied after first use.\\ntype Pool struct\\n// A RWMutex must not be copied after first use.\\ntype RWMutex struct\\n// A WaitGroup must not be copied after first use.\\ntype WaitGroup struct\\n```\\n\\n`sync`\u5305\u4e0b\u7684`struct`\u9664\u4e86`Once`\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5176\u4ed6\u7684\u4f7f\u7528\u8fc7\u540e\u90fd\u4e0d\u80fd\u88ab\u590d\u5236\u3002\u4e0d\u80fd\u88ab\u590d\u5236\u4e5f\u5305\u62ec\u51fd\u6570\u4f20\u9012\u53c2\u6570\uff0c\u6bd4\u5982\u5982\u4e0b\u7684\u4f7f\u7528\u662f\u9519\u8bef\u7684:\\n\\n```go\\nfunc main{\\n    var wa sync.WaitGroup\\n    for i:=0 ;i < 10 ;i++ {\\n        wa.Add(1)\\n        go func(wa sync.WaitGroup){\\n            fmt.Println(\\"wa.Down()\\")\\n            wa.Down()\\n        }(wa)\\n    }\\n    wa.Wait()\\n}\\n```\\n\u4e0a\u9762\u7684\u4ee3\u7801\u5c31\u6709\u95ee\u9898\uff0c\u9996\u5148`wa`\u5bf9\u8c61\u4ee5\u53ca\u4f7f\u7528\u4e86`wa.Add(1)`,\u540e\u9762\u5f00\u542f\u4e00\u4e2a`go`\u65f6\u786e\u505a\u53c2\u6570\u4f20\u5165\uff0c\u6b64\u65f6\u4f20\u5165\u7684\u662f\u4e00\u4e2a\u526f\u672c\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0d\u80fd\u6b63\u786e\u7684\u6267\u884c`wa.Down()`\uff1b\u6b64\u5904\u53ef\u4ee5\u4fee\u6539\u4e3a\u4f20\u9012\u6307\u9488`go func(wa *sync.WaitGroup)`\u6216\u8005\u4f7f\u7528\u95ed\u5305\u7684\u65b9\u5f0f\u4f7f\u7528`WaitGroup`\u5bf9\u8c61\u3002\\n\\n## 7\u3001channel\\n```go\\npackage main\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"runtime\\"\\n\\t\\"time\\"\\n)\\nfunc main() {\\n\\tvar ch chan int\\n\\tgo func() {\\n\\t\\tch = make(chan int, 1)\\n\\t\\tch <- 1\\n\\t}()\\n\\tgo func(ch chan int) {\\n\\t\\ttime.Sleep(time.Second)\\n\\t\\t<-ch\\n\\t}(ch)\\n\\tc := time.Tick(1 * time.Second)\\n\\tfor range c {\\n\\t\\tfmt.Printf(\\"#goroutines: %d\\\\n\\", runtime.NumGoroutine())\\n\\t}\\n}\\n$ go run main.go\\n#goroutines: 2\\n#goroutines: 2\\n#goroutines: 2\\n```\\n\u8fd9\u4e00\u9898\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u5ffd\u7565\u4e86\u4e00\u4e2a\u5173\u952e\u70b9\uff0c\u6700\u540e\u8fd0\u884c\u4e2d\u6709\u4e24\u4e2a`g`\uff0c\u539f\u56e0\u5c31\u662f`time.Tick`\u5176\u5b9e\u662f\u5f00\u542f\u4e86\u4e00\u4e2a`G`\u6765\u8ba1\u65f6\u7684\uff0c\u7136\u540e\u901a\u8fc7`Channel`\u6765\u901a\u77e5\u3002\\n\\n\u6211\u4eec\u6765\u770b\u4e00\u4e0b`time.Tick`\u91cc\u9762\u7684\u5b9e\u73b0:\\n```go\\ntime \u5305\\nfunc NewTicker(d Duration) *Ticker{\\n    ...\\n    startTimer(&t.r)// \u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u5e94\u5230runtime.startTimer()\u65b9\u6cd5\u4e0a\\n}\\nruntime \u5305 \\n// startTimer adds t to the timer heap.\\n//go:linkname startTimer time.startTimer\\nfunc startTimer(t *timer) {\\n\\tif raceenabled {\\n\\t\\tracerelease(unsafe.Pointer(t))\\n\\t}\\n\\taddtimer(t)\\n}\\n//\u5728addtimer()\u65b9\u6cd5\u4e2d\u542f\u52a8\u4e86\u4e00\u4e2a`G`\u3002\\n```\\n\\n## 13\u3001for range \u95ee\u9898\\n```go\\npackage main\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"sync\\"\\n\\t\\"time\\"\\n)\\ntype T struct {\\n\\tV int\\n}\\nfunc (t *T) Incr(wg *sync.WaitGroup) {\\n\\tt.V++\\n\\twg.Done()\\n}\\nfunc (t *T) Print() {\\n\\ttime.Sleep(1e9)\\n\\tfmt.Print(t.V)\\n}\\nfunc main() {\\n\\tvar wg sync.WaitGroup\\n\\twg.Add(10)\\n\\tvar ts = make([]T, 10)\\n\\tfor i := 0; i < 10; i++ {\\n\\t\\tts[i] = T{i}\\n\\t}\\n\\tfor _, t := range ts {\\n\\t\\tgo t.Incr(&wg)\\n\\t}\\n\\twg.Wait()\\n\\tfor _, t := range ts {\\n\\t\\tgo t.Print()\\n\\t}\\n\\ttime.Sleep(5 * time.Second)\\n}\\n$ go run main.go\\n999999999\\n```\\n\u8fd9\u4e00\u9898\u53ef\u4ee5\u662f\u56e0\u4e3a\u4f7f\u7528\u4e86`for range`\u7684\u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e2d\u7684`t`\u53ea\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u4f1a\u4e00\u76f4\u5728\u8fb9\uff0c\u5f53\u4f7f\u7528`go t.Incr()`\u7684\u65f6\u5019\uff0c\u6b64\u65f6\u7684`t`\u5df2\u7ecf\u53d8\u4e3a\u4e86\u6700\u540e\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u8f93\u51fa\u90fd\u662f`9`\uff0c\u8fd9\u4e2a\u5728\u4f7f\u7528`map`\u65f6\u4e5f\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f97\u5230 \u7684`k/v`\u53ea\u662f\u503c\u7684\u4e00\u4e2a\u62f7\u8d1d\u3002"},{"id":"Go-Bootstrap-Process","metadata":{"permalink":"/blog/Go-Bootstrap-Process","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2019-06-10-Go-bootstrap-process.md","source":"@site/blog/2019-06-10-Go-bootstrap-process.md","title":"Go Bootstrap Process","description":"Go \u542f\u52a8\u8fc7\u7a0b\u5206\u6790.","date":"2019-06-10T00:00:00.000Z","tags":[{"inline":false,"label":"golang","permalink":"/blog/tags/golang","description":"golang"}],"readingTime":10.79,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"Go-Bootstrap-Process","title":"Go Bootstrap Process","authors":["rongfu"],"tags":["golang"]},"unlisted":false,"prevItem":{"title":"Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790","permalink":"/blog/Go \u5e76\u53d1\u7f16\u7a0b\u6d4b\u8bd5\u5206\u6790"},"nextItem":{"title":"docker \u7f51\u7edc\u6982\u5ff5","permalink":"/blog/docker-network-concept"}},"content":"`Go` \u542f\u52a8\u8fc7\u7a0b\u5206\u6790.\\n\x3c!-- truncate --\x3e\\n# Go Bootstrap Process\\n\\n## \u4e00\u3001\u73af\u5883\u51c6\u5907\\n\\n1\u3001 Go\u7248\u672c\\n```\\n$ go version\\ngo version go1.12.4 darwin/amd64\\n```\\n2\u3001\u51c6\u5907\u4ee3\u7801\\n```go\\npackage main\\nimport (\\n\\t\\"fmt\\"\\n)\\nfunc main() {\\n\\tfmt.Println(\\"hello world\\")\\n}\\n```\\n\\n3\u3001\u8c03\u8bd5\u5de5\u5177\\n\\n\u8c03\u8bd5\u5de5\u5177\u6211\u4f7f\u7528\u7684\u662f`dlv`\uff0c\u5bf9`golang`\u652f\u6301\u6700\u597d\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u6bd4`gdb`\u90fd\u597d\uff0c\u5148\u6309\u5b98\u65b9\u6587\u6863\u5b89\u88c5\u4e0a\u3002\u7f16\u8bd1\u4e0a\u8ff0\u4ee3\u7801`go build main.go`,\u5f97\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6267\u884c`dlv exec ./main`\u5c31\u8fdb\u5165\u4e86\u8c03\u8bd5\u7a7a\u95f4\u3002\\n```shell\\n$ dlv exec main\\nType \'help\' for list of commands.\\n(dlv) \\n```\\n\u8f93\u5165`help`\u5c31\u53ef\u4ee5\u770b\u5230\u5e2e\u52a9\u6587\u6863\uff0c\u6253\u65ad\u70b9\u4ee5\u53ca\u6267\u884c\u4e0b\u4e00\u6b65\u90fd\u662f\u901a\u8fc7\u547d\u4ee4\u8fdb\u884c\u7684\uff0c\u4e0d\u77e5\u9053\u5c31\u53ef\u4ee5\u968f\u65f6\u8fdb\u884c\u67e5\u770b\u3002\u6267\u884c\u4e0a\u8ff0\u7684\u547d\u4ee4\u4e4b\u540e\uff0c\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u771f\u6b63\u7684\u542f\u52a8\u3002\\n\\n4\u3001`dlv`\u5e38\u7528\u7684\u547d\u4ee4\\n\u66f4\u5177\u4f53\u7684\u547d\u4ee4\u4f7f\u7528\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002\\n```shell\\nargs \uff1a\u51fd\u6570\u7684\u53c2\u6570\\nbreak (alias: b) \uff1a\u6253\u4e00\u4e2a\u65ad\u70b9\\nbreakpoints (alias: bp) \uff1a\u6253\u5370\u5df2\u7ecf\u6dfb\u52a0\u7684\u65ad\u70b9\u4fe1\u606f\u3002\\nclear \uff1a \u901a\u8fc7\u65ad\u70b9\u7f16\u53f7\u5220\u9664\u65ad\u70b9\\ncontinue (alias: c) \uff1a\u8fd0\u884c\u5230\u6709\u65ad\u70b9\u7684\u5730\u65b9\\nlocals \uff1a\u6253\u5370\u672c\u5730\u53d8\u91cf\\nnext (alias: n) \uff1a\u8fd0\u884c\u5230\u4e0b\u4e00\u884c\\nprint (alias: p) \uff1a\u53ef\u4ee5\u6307\u5b9a\u53d8\u91cf\u8fdb\u884c\u6253\u5370\u67e5\u770b\uff0c\u7279\u522b\u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\u53d8\u91cf\u6700\u6709\u7528\u3002\\nregs \uff1a\u6253\u5370\u5f53\u524dcpu\u5bc4\u5b58\u5668\u7684\u503c\u3002\\nrestart (alias: r) \uff1a\u91cd\u542f\u8fdb\u7a0b,\u91cd\u65b0\u5f00\u59cb\u8c03\u8bd5.\\nstack (alias: bt) \uff1a\u6253\u5370\u5806\u6808\u4fe1\u606f\\nstep (alias: s) \uff1a\u5355\u6b65\u6267\u884c\uff0c\u4f1a\u8fdb\u5165\u51fd\u6570\u5185\u90e8\\nstep-instruction (alias: si)  : cpu\u7684\u5355\u4e2a\u6307\u4ee4\u6267\u884c\\nthread (alias: tr) \uff1a\u53ef\u4ee5\u5207\u6362\u5230\u6307\u5b9a\u7684\u7ebf\u7a0b\\nthreads \uff1a\u6253\u5370\u6240\u6709\u7ebf\u7a0b\u7684\u4fe1\u606f\\ngoroutine \uff1a\u663e\u793a\u6216\u8005\u5207\u6362\u5f53\u524d\u7684go\\ngoroutines : \u5217\u51fa\u7a0b\u5e8f\u7684\u6240\u6709go\\n```\\n\\n## \u4e8c\u3001\u8fdb\u5165\u8c03\u8bd5\\n\\n### 1\u3001\u6253\u65ad\u70b9\\n\u7b2c\u4e00\u6b65\u5148\u6253\u65ad\u70b9\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u624d\u5f00\u59cb\u8c03\u8bd5\u7684\u4eba\u6765\u8bf4\uff0c\u6700\u7b80\u5355\u7684\u5c31\u662f\u6253`main`\u51fd\u6570\u7684\u65ad\u70b9\u4e86.\\n```shell\\n$ (dlv) b main.main\\nBreakpoint 1 set at 0x1093038 for main.main() ./main.go:27\\n(dlv) bp\\nBreakpoint 1 at 0x1093038 for main.main() ./main.go:27 (0)\\n```\\n\\n### 2\u3001\u8fd0\u884c\u5230\u65ad\u70b9\u51fa\\n\\n`b`\u3001`bp`\u662f\u7f29\u5199\uff0c\u5bf9\u5e94\u4e3a\u6253\u65ad\u70b9\u548c\u6253\u5370\u6240\u6709\u7684\u65ad\u70b9\u4fe1\u606f\u3002\u6253\u4e86\u65ad\u70b9\u4e4b\u540e\u5c31\u53ef\u4ee5\u6267\u884c`c`\u8fd9\u4e2a\u547d\u4ee4\u4e86\u3002\\n\\n```shell\\n$ (dlv) continue\\n> main.main() ./main.go:27 (hits goroutine(1):1 total:1) (PC: 0x1093038)\\n=>  27:\\tfunc main() {\\n}\\n```\\n### 3\u3001\u6253\u5370\u5806\u6808\u4fe1\u606f\\n\u6267\u884c\u8fc7\u540e\u5c31\u4f1a\u51fa\u73b0\u6e90\u4ee3\u7801\uff0c\u5e76\u4e14\u65ad\u70b9\u6307\u5411\u4e86`main`\u51fd\u6570\u4e0a,\u6b64\u65f6\u6211\u4eec\u901a\u8fc7`stack`\u547d\u4ee4\u5c31\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a`main`\u51fd\u6570\u6240\u5728\u7684`goroutine`\u6808\u4e86\u3002\\n\\n```shell\\n$ (dlv) stack\\n0  0x0000000001093038 in main.main\\n   at ./main.go:27\\n1  0x00000000010297ec in runtime.main\\n   at ./golang_work/go/src/runtime/proc.go:200\\n2  0x0000000001051011 in runtime.goexit\\n   at ./golang_work/go/src/runtime/asm_amd64.s:1337\\n```\\n\\n\u5982\u4e0a\u5c31\u662f\u663e\u793a\u4e86\u4e00\u4e2a`goroutine`\u7684\u5806\u6808\uff0c\u5806\u6808\u4e2d\u7684\u4fe1\u606f\u5c31\u4fdd\u8bc1\u4e86\u8c03\u7528\u8fc7\u7a0b\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u5206\u6790`go`\u542f\u52a8\u8fc7\u7a0b\u4e86\u3002\\n\u6211\u4eec\u8981\u4ece\u6808\u5e95\u5f80\u4e0a\u770b\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u53bb\u5206\u6790\u4e00\u4e0b`asm_amd64.s`\u8fd9\u4e2a\u6c47\u7f16\u4ee3\u7801\u3002\u73b0\u5728\u662f\u9006\u5411\u5206\u6790\u8c03\u7528\u6808\uff0c\u540e\u7eed\u7684\u5206\u6790\u5c31\u662f\u6b63\u5411\u7684\u8fc7\u7a0b\u3002\\n\\n## \u4e09\u3001\u5206\u6790\u542f\u52a8\u8fc7\u7a0b\\n\\n### 1\u3001\u5206\u6790asm_amd64.s\u8fd9\u4e2a\u6587\u4ef6\\n\u8fd9\u91cc\u9762\u7684\u5185\u5bb9\u5f88\u591a\uff0c\u6211\u4eec\u4e0d\u80fd\u5168\u90e8\u770b\u5b8c\uff0c\u53ea\u80fd\u627e\u4e00\u4e0b\u91cd\u70b9\uff0c\u5f00\u59cb\u7684\u4e24\u4e2a\u51fd\u6570\u90fd\u6307\u5411\u4e86`JMP\\truntime\xb7rt0_go(SB)`\u8fd9\u6761\u6c47\u7f16\u4ee3\u7801\uff0c\u6211\u4eec\u5c31\u53bb\u67e5\u770b`rt0_go`\u8fd9\u4e2a\u51fd\u6570\u3002\\n```go\\nruntime/asm_amd64.s \\nTEXT runtime\xb7rt0_go(SB),NOSPLIT,$0\\n\\tCALL\\truntime\xb7args(SB)\\n\\tCALL\\truntime\xb7osinit(SB)\\n\\tCALL\\truntime\xb7schedinit(SB)\\n\\tCALL\\truntime\xb7newproc(SB)\\n\\tCALL\\truntime\xb7mstart(SB)\\n\\tCALL\\truntime\xb7abort(SB)\\t// mstart should \\n```\\n\u6587\u4ef6\u4e2d\u7684\u5927\u90e8\u5206\u5185\u5bb9\u90fd\u53bb\u6389\u4e86\uff0c\u6211\u53ea\u7559\u4e0b\u4e86`CALL` \u6307\u4ee4\u7684\u90e8\u5206\uff0c`call`\u8c03\u7528\u7684\u5c31\u662f`runtime`\u5305\u4e2d\u7684\u6e90\u4ee3\u7801\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u65b9\u6cd5\u540d\u5c31\u53ef\u4ee5\u8fdb\u884c\u641c\u7d22\u4e86\uff0c\u5e76\u4e14\u662f\u5728\u53ef\u4ee5\u8fd0\u884c\u4e4b\u540e\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u4e0a\u9762\u5c31\u662f`go`\u8fdb\u7a0b\u542f\u52a8\u7684\u8fc7\u7a0b\u3002\u4e0b\u9762\u6211\u4eec\u8fb9\u6253\u65ad\u70b9\u8fb9\u67e5\u770b\u6bcf\u4e2a\u51fd\u6570\u90fd\u505a\u4e86\u5199\u4ec0\u4e48\u5185\u5bb9\u3002\\n\\n\u6309\u987a\u5e8f\u603b\u7ed3\u4e0bruntime.rt0_go\u91cc\u51e0\u4ef6\u91cd\u8981\u7684\u4e8b\uff1a\\n\\n- \u68c0\u67e5\u8fd0\u884c\u5e73\u53f0\u7684CPU\uff0c\u8bbe\u7f6e\u597d\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u76f8\u5173\u6807\u5fd7\u3002\\n- TLS\u7684\u521d\u59cb\u5316\u3002\\n- runtime.args\u3001runtime.osinit\u3001runtime.schedinit \u4e09\u4e2a\u65b9\u6cd5\u505a\u597d\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684\u5404\u79cd\u53d8\u91cf\u4e0e\u8c03\u5ea6\u5668\u3002\\n- runtime.newproc\u521b\u5efa\u65b0\u7684goroutine\u7528\u4e8e\u7ed1\u5b9a\u7528\u6237\u5199\u7684main\u65b9\u6cd5\u3002\\n- runtime.mstart\u5f00\u59cbgoroutine\u7684\u8c03\u5ea6\u3002\\n\\n### 2\u3001\u6309\u987a\u5e8f\u6253\u4e0a\u65ad\u70b9\\n\\n```shell\\n(dlv) b runtime.args\\n(dlv) b runtime.osinit\\n(dlv) b runtime.schedinit\\n(dlv) b runtime.newproc\\n(dlv) b runtime.mstart\\n(dlv) b runtime.abort\\n\\nBreakpoint 2 at 0x10360ff for runtime.args() ./go/src/runtime/runtime1.go:60 (0)\\nBreakpoint 3 at 0x102604f for runtime.osinit() ./go/src/runtime/os_darwin.go:79 (0)\\nBreakpoint 4 at 0x102a843 for runtime.schedinit() ./go/src/runtime/proc.go:526 (0)\\nBreakpoint 5 at 0x1030f90 for runtime.newproc() ./go/src/runtime/proc.go:3239 (0)\\nBreakpoint 6 at 0x102c410 for runtime.mstart() ./go/src/runtime/proc.go:1153 (0)\\nBreakpoint 7 at 0x10509a0 for runtime.abort() ./go/src/runtime/asm_amd64.s:837 (0)\\n```\\n\\n### 3\u3001runtime.args\\n\u6253\u597d\u65ad\u70b9\u4e4b\u540e\uff0c\u53ef\u4ee5\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u627e\u5230\u6e90\u7801\u6240\u5728\u4f4d\u7f6e.\\n```shell\\n$ (dlv) s\\n> runtime.args() \\n./go/src/runtime/runtime1.go:60 (hits total:1) (PC: 0x10360ff)\\n=>  60:\\tfunc args(c int32, v **byte) {}\\n```\\n\\n\u6211\u4eec\u627e\u5230\u6e90\u7801\uff0c\u5e76\u4e14\u9a8c\u8bc1\u4e86\u542f\u52a8\u8fc7\u7a0b\u7b2c\u4e00\u6b65\u5c31\u662f\u8fd9\u4e2a\\n```go\\nruntime/runtime1.go +60\\nfunc args(c int32, v **byte) {\\n\\targc = c\\n\\targv = v\\n\\tsysargs(c, v)\\n}\\nruntime/os_darwin.go +341\\n//go:linkname executablePath os.executablePath\\nvar executablePath string\\n\\nfunc sysargs(argc int32, argv **byte) {\\n\\t// skip over argv, envv and the first string will be the path\\n\\tn := argc + 1\\n\\tfor argv_index(argv, n) != nil {\\n\\t\\tn++\\n\\t}\\n\\texecutablePath = gostringnocopy(argv_index(argv, n+1))\\n\\n\\t// strip \\"executable_path=\\" prefix if available, it\'s added after OS X 10.11.\\n\\tconst prefix = \\"executable_path=\\"\\n\\tif len(executablePath) > len(prefix) && executablePath[:len(prefix)] == prefix {\\n\\t\\texecutablePath = executablePath[len(prefix):]\\n\\t}\\n}\\n```\\n\\n\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u505a\u4e86\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662f\u628a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u627e\u51fa\u6765\uff0c\u5e76\u5b58\u5728os.executablePath\u91cc\u3002\\n\\n\u6309\u7167\u672c\u6587\u7684\u6d4b\u8bd5\u5de5\u7a0b\uff1aos.executablePath=$GOPATH/test/main\\n\\n### 4\u3001runtime.osinit\\n\\n\u518d\u63a5\u7740\u8fd0\u884c\u5c31\u4f1a\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u4e5f\u5c31\u662f`runtime.osinit()`\u8fd9\u4e2a\u51fd\u6570\u3002\\n`osinit`\u8fd9\u4e2a\u51fd\u6570\u662f\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e0d\u540c\u6765\u9009\u62e9\u4e0d\u540c\u7684\u6267\u884c\u51fd\u6570\u7684\uff0c\u6211\u7684\u662f`mac`,\u6240\u4ee5\u6267\u884c\u7684\u662f`os_darwin.go`\u91cc\u9762\u7684\u51fd\u6570\uff0c\u540c\u65f6\u8fd8\u6709`os_linux.go`\u91cc\u9762\u4e5f\u6709\u540c\u6837\u7684\u51fd\u6570\u3002\\n```go\\nruntime/os_darwin.go +79\\nfunc osinit() {\\n\\tncpu = getncpu()\\n\\tphysPageSize = getPageSize()\\n}\\n```\\n\u8fd9\u4e2a\u51fd\u6570\u4e3b\u8981\u505a\u6765\u4e24\u4ef6\u4e8b\uff1a\\n- \u7b2c\u4e00\u662f\u83b7\u53d6\u5f53\u524d\u7535\u8111\u7684`cpu`\u4e2a\u6570\uff0c\u5e76\u8d4b\u503c\u7ed9`runtime/runtime2.go`\u4e2d\u7684`ncpu`\u53d8\u91cf\u3002\\n- \u7b2c\u4e8c\u662f\u8bbe\u7f6e`runtime/malloc.go`\u4e2d\u7684`physPageSize`\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u7528\u4e8e\u5206\u914d\u5185\u5b58\u7684\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u5185\u5b58\u6216\u8005\u56de\u6536\u5185\u5b58\u90fd\u662f\u6309\u8fd9\u4e2a\u6570\u5b57\u7684\u6574\u6570\u500d\u6765\u64cd\u4f5c\u7684\u3002\u6211\u83b7\u53d6\u7684\u662f`4096`\u8fd9\u4e2a\u6570\u5b57\uff0c\u6240\u4ee5\u662f`4k`\u5b57\u8282\u3002\\n\\n\\n### 5\u3001runtime.schedinit\\n\u518d\u63a5\u7740\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u5c31\u662f`runtime.schedinit`\u8fd9\u4e2a\u51fd\u6570\u3002\\n```go\\nruntime/proc.go +526\\nfunc schedinit(){\\n    //\u4eceTLS \u4e2d\u83b7\u53d6g\\n\\t_g_ := getg()\\n\\t// \u662f\u5426\u5f00\u542f\u7ade\u4e89\u68c0\u6d4b\uff0c\u542f\u52a8\u65b9\u6cd5go run -race main.go\\n\\tif raceenabled {\\n\\t\\t_g_.racectx, raceprocctx0 = raceinit()\\n\\t}\\n\\t//\u8fd0\u884c\u521b\u5efa\u7684\u6700\u5927\u7ebf\u7a0b\u6570\\n\\tsched.maxmcount = 10000\\n\\t// \u521d\u59cb\u5316\u4e00\u7cfb\u5217\u51fd\u6570\u6240\u5728\u7684PC\u8ba1\u6570\u5668\uff0c\u7528\u4e8etraceback\\n\\ttracebackinit()\\n\\t//...\\n\\tmoduledataverify()\\n\\t//\u6808\u521d\u59cb\u5316,\u521d\u59cb\u5316\u4e86\u4e00\u4e2a\u6808\u6c60\uff0c\u53ef\u4ee5\u76f4\u63a5\u53d6\uff0c\u8fd8\u6709\u4e00\u4e2a\u5927\u6808\u7684\u5168\u5c40\u6c60.\\n\\t//golang \u4f7f\u7528\u7684\u662f\u52a8\u6001\u6808\uff0c\u521d\u59cb\u662f2k\u5927\u5c0f\uff0c\u540e\u9762\u589e\u957f\uff0c\u4f46\u662fgolang\u4f7f\u7528\u7684\u4e0d\u662f\u5206\u79bb\u6808\uff0c\u662f\u8fde\u7eed\u6808\uff0c\u5c31\u662f\u6808\u7a7a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u5206\u914d\u7684\u65f6\u5019\u5982\u679c\u4e4b\u524d\u7684\u7a7a\u95f4\u4e0d\u8fde\u7eed\u4e86\uff0c\u5c31\u62f7\u8d1d\u4e00\u4efd\u5230\u65b0\u7684\u7a7a\u95f4\u53bb\u3002\\n\\tstackinit()\\n\\tmallocinit()\\n\\tmcommoninit(_g_.m)\\n\\tcpuinit()       // must run before alginit\\n\\talginit()       // maps must not be used before this call\\n\\tmodulesinit()   // provides activeModules\\n\\ttypelinksinit() // uses maps, activeModules\\n\\titabsinit()     // uses activeModules\\n\\n\\tmsigsave(_g_.m)\\n\\tinitSigmask = _g_.m.sigmask\\n    // \u542f\u52a8\u53c2\u6570\u521d\u59cb\u5316\\n\\tgoargs()\\n\\t//\\n\\tgoenvs()\\n\\t// \u89e3\u6790debug\u53d8\u91cf\uff0cGODEBUG\uff0cGOTRACEBACK\u8fd9\u4e9b\\n\\tparsedebugvars()\\n\\t// gc \u521d\u59cb\u5316\\n\\tgcinit()\\n    \\n\\tsched.lastpoll = uint64(nanotime())\\n\\tprocs := ncpu\\n\\tif n, ok := atoi32(gogetenv(\\"GOMAXPROCS\\")); ok && n > 0 {\\n\\t\\tprocs = n\\n\\t}\\n\\tif procresize(procs) != nil {\\n\\t\\tthrow(\\"unknown runnable goroutine during bootstrap\\")\\n\\t}\\n\\n\\t// For cgocheck > 1, we turn on the write barrier at all times\\n\\t// and check all pointer writes. We can\'t do this until after\\n\\t// procresize because the write barrier needs a P.\\n\\tif debug.cgocheck > 1 {\\n\\t\\twriteBarrier.cgo = true\\n\\t\\twriteBarrier.enabled = true\\n\\t\\tfor _, p := range allp {\\n\\t\\t\\tp.wbBuf.reset()\\n\\t\\t}\\n\\t}\\n\\n\\tif buildVersion == \\"\\" {\\n\\t\\t// Condition should never trigger. This code just serves\\n\\t\\t// to ensure runtime\xb7buildVersion is kept in the resulting binary.\\n\\t\\tbuildVersion = \\"unknown\\"\\n\\t}\\n}\\n```\\n- mallocinit()\uff1a\u8fd9\u4e2a\u51fd\u6570\u662f\u5185\u5b58\u5206\u914d\u5668\u521d\u59cb\u5316\u3002\\n\\n- mcommoninit(mp *m):\u521d\u59cb\u5316m0\u8fd9\u4e2a\u7ebf\u7a0b\\n- cpuinit()\uff1acpu\u521d\u59cb\u5316\\n- alginit()\uff1a\u521d\u59cb\u5316AES\uff0cHASH\u7b97\u6cd5\\n\\n\\n### 6\u3001runtime.newproc()\\n\u518d\u63a5\u7740\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u5c31\u662f`runtime.newproc`\u8fd9\u4e2a\u51fd\u6570\u3002\\n- http://cbsheng.github.io/posts/%E6%8E%A2%E7%B4%A2goroutine%E7%9A%84%E5%88%9B%E5%BB%BA/\\n```go\\nruntime/proc.go +3239\\nfunc newproc(siz int32, fn *funcval) {\\n\\targp := add(unsafe.Pointer(&fn), sys.PtrSize)\\n\\tgp := getg()\\n\\tpc := getcallerpc()\\n\\tsystemstack(func() {\\n\\t\\tnewproc1(fn, (*uint8)(argp), siz, gp, pc)\\n\\t})\\n}\\n```\\n\\n### 7\u3001runtime.mstart()\\n\u518d\u63a5\u7740\u8fd0\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u5c31\u662f`runtime.mstart`\u8fd9\u4e2a\u51fd\u6570\u3002\\nmstart\u65b9\u6cd5\u4e3b\u8981\u7684\u6267\u884c\u8def\u5f84\u662f\uff1a\\n\\n**mstart -> mstart1 -> schedule -> execute**\\n\\n- mstart\u505a\u4e00\u4e9b\u6808\u76f8\u5173\u7684\u68c0\u67e5\uff0c\u7136\u540e\u5c31\u8c03\u7528mstart1\u3002\\n- mstart1\u5148\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u4e0eM\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u4f8b\u5982\u662f\u4fe1\u53f7\u6808\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u7684\u521d\u59cb\u5316\u3002\u6700\u540e\u8c03\u7528schedule\u3002\\n- schedule\u903b\u8f91\u662f\u8fd9\u56db\u4e2a\u65b9\u6cd5\u91cc\u6700\u590d\u6742\u7684\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u8981\u627e\u51fa\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684G\uff0c\u4e0d\u7ba1\u662f\u4eceP\u672c\u5730\u7684G\u961f\u5217\u3001\u5168\u5c40\u8c03\u5ea6\u5668\u7684G\u961f\u5217\u3001GC - worker\u3001\u56e0IO\u963b\u585e\u7684G\u3001\u751a\u81f3\u4ece\u522b\u7684P\u91cc\u5077\u3002\u7136\u540e\u4f20\u7ed9execute\u8fd0\u884c\u3002\\n- execute\u5bf9\u4f20\u8fdb\u6765\u7684G\u8bbe\u7f6e\u597d\u76f8\u5173\u7684\u72b6\u6001\u540e\uff0c\u5c31\u52a0\u8f7dG\u81ea\u8eab\u8bb0\u5f55\u7740\u7684PC\u3001SP\u7b49\u5bc4\u5b58\u5668\u4fe1\u606f\uff0c\u6062\u590d\u73b0\u573a\u7ee7\u7eed\u6267\u884c\u3002\\n\\n\\n# \u53c2\u8003\\n- [dlv \u5b98\u7f51](https://github.com/go-delve/delve)\\n- http://cbsheng.github.io/posts/%E6%8E%A2%E7%B4%A2golang%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/\\n- http://blog.jobbole.com/93100/"},{"id":"docker-network-concept","metadata":{"permalink":"/blog/docker-network-concept","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2018-11-25-docker-network-concept.md","source":"@site/blog/2018-11-25-docker-network-concept.md","title":"docker \u7f51\u7edc\u6982\u5ff5","description":"Docker\u7684\u7f51\u7edc\u67b6\u6784\u662f\u6784\u5efa\u5728\u4e00\u7ec4\u79f0\u4e3a\u5bb9\u5668\u7f51\u7edc\u6a21\u578b(CNM)\u7684\u63a5\u53e3\u4e4b\u4e0a\u7684\u3002\u8fd9\u4e2aCNM\u7684\u539f\u7406\u662f\u4e3a\u4e86\u63d0\u4f9b\u591a\u79cd\u4e0d\u540c\u7684\u57fa\u7840\u7cfb\u7edf\u67b6\u6784\u7684\u5e94\u7528\u7a0b\u53ef\u7528\u6027\u3002","date":"2018-11-25T00:00:00.000Z","tags":[{"inline":false,"label":"Docker","permalink":"/blog/tags/docker","description":"Docker interdocte"}],"readingTime":6.035,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"docker-network-concept","title":"docker \u7f51\u7edc\u6982\u5ff5","authors":["rongfu"],"tags":["Docker"]},"unlisted":false,"prevItem":{"title":"Go Bootstrap Process","permalink":"/blog/Go-Bootstrap-Process"},"nextItem":{"title":"Docker network \u5165\u95e8","permalink":"/blog/docker-network-beginner"}},"content":"`Docker`\u7684\u7f51\u7edc\u67b6\u6784\u662f\u6784\u5efa\u5728\u4e00\u7ec4\u79f0\u4e3a\u5bb9\u5668\u7f51\u7edc\u6a21\u578b(CNM)\u7684\u63a5\u53e3\u4e4b\u4e0a\u7684\u3002\u8fd9\u4e2aCNM\u7684\u539f\u7406\u662f\u4e3a\u4e86\u63d0\u4f9b\u591a\u79cd\u4e0d\u540c\u7684\u57fa\u7840\u7cfb\u7edf\u67b6\u6784\u7684\u5e94\u7528\u7a0b\u53ef\u7528\u6027\u3002\\n\x3c!-- truncate --\x3e\\n# \u5bb9\u5668\u7684\u7f51\u7edc\u6a21\u578b\\n`Docker`\u7684\u7f51\u7edc\u67b6\u6784\u662f\u6784\u5efa\u5728\u4e00\u7ec4\u79f0\u4e3a\u5bb9\u5668\u7f51\u7edc\u6a21\u578b(CNM)\u7684\u63a5\u53e3\u4e4b\u4e0a\u7684\u3002\u8fd9\u4e2aCNM\u7684\u539f\u7406\u662f\u4e3a\u4e86\u63d0\u4f9b\u591a\u79cd\u4e0d\u540c\u7684\u57fa\u7840\u7cfb\u7edf\u67b6\u6784\u7684\u5e94\u7528\u7a0b\u53ef\u7528\u6027\u3002\\n\u6700\u521d\u7684\u5bb9\u5668\u7f51\u7edc\u8bbe\u8ba1\u53ea\u5173\u6ce8\u5982\u4f55\u5728\u5355\u4e2a\u4e3b\u673a\u4e0a\u8fd0\u884c\u5bb9\u5668\u5e76\u4f7f\u4ed6\u4eec\u53ef\u4ee5\u4ece\u7f51\u7edc\u8bbf\u95ee\uff1b\u5728`host`\u6a21\u5f0f\u4e0b\uff0c\u5bb9\u5668\u5728\u4e3b\u673a\u7684`Network Namespace`\u4e2d\u8fd0\u884c\u5e76\u4f7f\u7528\u4e3b\u673aIP\u5730\u5740\uff0c\u66b4\u9732\u5bb9\u5668\u7aef\u53e3\u5728\u4e3b\u673a\u5916\u9762\uff0c\u5bb9\u5668\u4f1a\u4f7f\u7528\u4e3b\u673a\u7684\u7aef\u53e3\u3002\\n\u8fd9\u4e2a`bridge`\u6a21\u5f0f\u5bf9`host`\u6a21\u5f0f\u8fdb\u884c\u4e86\u6539\u8fdb\uff0c\u5728`Bridge`\u6a21\u5f0f\u4e0b\uff0c\u5bb9\u5668\u901a\u8fc7`IPAM`IP\u5730\u5740\u7ba1\u7406\u6a21\u5757\u6765\u63d0\u4f9bIP\uff0c\u4ece\u5b83\u81ea\u5df1\u7684\u7f51\u7edc\u7a7a\u95f4\u4e2d\u83b7\u53d6\u81ea\u5df1\u7684\u7f51\u7edcIP\uff0c\u6b64\u65f6\u5bb9\u5668\u6709\u81ea\u5df1\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7aef\u53e3\u51b2\u7a81\uff0c\u4f46\u662f\u5bb9\u5668\u5982\u679c\u8981\u66b4\u9732\u670d\u52a1\u5728\u4e3b\u673a\u5916\u90e8\uff0c\u4ecd\u7136\u9700\u8981\u4f7f\u7528\u4e3b\u673aIP\u3002\u8be5\u6280\u672f\u662f\u4f7f\u7528\u7684`NAT`\u7f51\u7edc\u5730\u5740\u8f6c\u6362\u5b9e\u73b0\u7684\uff0c\u5728\u4e3b\u673aIP:\u4e3b\u673a\u7aef\u53e3\u548c\u5bb9\u5668IP:\u5bb9\u5668\u7aef\u53e3\u4e4b\u95f4\u8fdb\u884c\u6620\u5c04\uff0c\u8fd9\u4e9b\u8f6c\u6362\u89c4\u5219\u662f\u4f7f\u7528`iptables`\u5b9e\u73b0\u7684\uff0c\u8fd9\u79cd\u5b9e\u73b0\u9650\u5236\u4e86\u89e3\u51b3\u65b9\u6848\u7684\u89c4\u6a21\u548c\u6027\u80fd\u3002\u6b64\u65b9\u6848\u5e76\u6ca1\u6709\u89e3\u51b3\u591a\u4e3b\u673a\u7684\u5bb9\u5668\u7f51\u7edc\u901a\u4fe1\u95ee\u9898\u3002\\n\\n\\n![cnm](static/img/2018-11-25-docker-network-concept/cnm.png)\\n\\n\\n\\n## CNM \u7ed3\u6784\\n\u4e0a\u56fe\u662f`CNM`\u4e2d\u7684\u51e0\u4e2a\u9ad8\u7ea7\u7ed3\u6784\uff0c\u4ed6\u4eec\u90fd\u662f\u548c`\'OS`\u65e0\u5173\u7684\u3002\\n\\n- Sandbox\uff1a\u6c99\u7bb1\u5305\u542b\u7f51\u7edc\u5bb9\u5668\u7684\u914d\u7f6e\uff0c\u8fd9\u5305\u62ec\u7ba1\u7406\u5bb9\u5668\u7684\u63a5\u53e3\uff0c\u8def\u7531\u8868\u548c`DNS`\u914d\u7f6e\uff0c\u6c99\u7bb1\u662f\u901a\u8fc7`Linux`\u7684\u547d\u540d\u7a7a\u95f4\u5b9e\u73b0\u7684\u3002\u4e00\u4e2a\u5bb9\u5668\u5c31\u662f\u4e00\u4e2a\u6c99\u7bb1\u76d2\u5b50\u3002\\n- Endpoint\uff1a\u4e00\u4e2a`Endpoint`\u8fde\u63a5\u4e00\u4e2a\u6c99\u7bb1\u548c\u4e00\u4e2a\u7f51\u7edc\u3002\\n- Network\uff1a`CNM`\u6ca1\u6709\u6839\u636e`OSI`\u6a21\u578b\u6307\u5b9a\u7f51\u7edc\uff0c\\n\\n\\n# CNM \u9a71\u52a8\u63a5\u53e3\\n\u8fd9\u4e2aCNM\u6a21\u578b\u63d0\u4f9b\u4e86\u4e24\u4e2a\u63d2\u4ef6\u548c\u5f00\u653e\u63a5\u53e3\u63d0\u4f9b\u7ed9\u7528\u6237\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ed6\u4eec\u5b83\u4eec\u6765\u5bf9\u7f51\u7edc\u7684\u529f\u80fd\u8fdb\u884c\u63a7\u5236\u3002\\n\\n## \u7f51\u7edc\u9a71\u52a8\u7684\u7c7b\u578b\\n\\n- \u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\uff1a`Docker`\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u662f\u7f51\u7edc\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u5b83\u4eec\u662f\u53ef\u62d4\u63d2\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7ed9\u4e0d\u901a\u7684\u5e94\u7528\u4f7f\u7528\uff0c\u5728\u96c6\u7fa4\u4e2d\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2a\u7f51\u7edc\u9a71\u52a8\u5668\uff0c\u4f46\u662f\u5355\u4e2a`Docker`\u7f51\u7edc\u53ea\u80fd\u901a\u8fc7\u5355\u4e2a\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u5b9e\u73b0\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684CNM\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u3002\\n- - \u5185\u7f6e\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\uff1a`Docker`\u5f15\u64ce\u5185\u7f6e\u4e86\u51e0\u79cd\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6bd4\u5982\uff0c\u7f51\u7edc\u9a71\u52a8\uff0coverlay \u9a71\u52a8\u3002\\n- - \u63d2\u4ef6\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\uff1a\u662f\u7531\u793e\u533a\u6216\u8005\u5176\u4ed6\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\uff0c\u7528\u4e8e\u4e0e\u73b0\u6709\u8f6f\u4ef6\u548c\u786c\u4ef6\u7684\u63d0\u6210\uff0c\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0\u3002\\n- IPAM \u9a71\u52a8\uff1a`Docker`\u6709\u5185\u7f6e\u7684`IP`\u5730\u5740\u7ba1\u7406\u5668\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u5b50\u7f51\u548c\u7f51\u7edc\uff0c\u7528\u6237\u4e5f\u53ef\u6307\u5b9a\u5b50\u7f51\u548c\u7f51\u5173\u3002\\n\\n## Docker\u5185\u7f6e\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\\n`Docker`\u5185\u7f6e\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\u662f\u5f15\u64ce\u7684\u4e00\u90e8\u5206\uff0c\u4e0d\u9700\u8981\u4efb\u4f55\u5176\u4ed6\u6a21\u5757\uff0c\u901a\u8fc7\u4f7f\u7528`docker network`\u547d\u4ee4\u6765\u521b\u5efa\u548c\u4f7f\u7528\u7f51\u7edc\u6a21\u5757\u3002\\n- Bridge\uff1a`Bridge`\u9a71\u52a8\u7a0b\u5e8f\u5728\u5bbf\u4e3b\u673a\u4e0a\u521b\u5efa`Linux`\u7f51\u6865\uff0c\u7f51\u6865\u4e0a\u7684\u5bb9\u5668\u9ed8\u8ba4\u53ef\u4ee5\u901a\u4fe1\uff0c\u4e5f\u53ef\u4ee5\u914d\u7f6e\u5bf9\u5bb9\u5668\u7684\u5916\u90e8\u8bbf\u95ee\u3002\\n- Overlay\uff1a`overlay`\u9a71\u52a8\u7a0b\u5e8f\u5728\u5bbf\u4e3b\u673a\u4e0a\u521b\u5efa\u4e00\u4e2a\u8986\u76d6\u7f51\u7edc\uff0c\u652f\u6301\u5f00\u7bb1\u5373\u7528\u7684\u591a\u4e3b\u673a\u7f51\u7edc\uff0c\u901a\u8fc7\u4f7f\u7528`linux`\u7f51\u6865\u548c`VXLAN`\u8ba9\u5bbf\u4e3b\u673a\u4e0a\u7269\u7406\u7f51\u7edc\u6765\u5b9e\u73b0\u5bb9\u5668\u5230\u5bb9\u5668\u7684\u591a\u4e3b\u673a\u901a\u4fe1\u3002\\n- MACVLAN\uff1a`macvlan`\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528`macvlan`\u6865\u63a5\u6a21\u5f0f\u5728\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u4e4b\u95f4\u5efa\u7acb\u8fde\u63a5\u3002\\n- Host\uff1a\u4f7f\u7528`host`\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5bb9\u5668\u5c06\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u7f51\u7edc\u6808\uff0c\u4e3b\u673a\u4e0a\u7684\u6240\u6709\u63a5\u53e3\u90fd\u53ef\u4ee5\u7531\u5bb9\u5668\u4f7f\u7528\u3002\\n- None\uff1a`none`\u9a71\u52a8\u7a0b\u5e8f\u4e3a\u5bb9\u5668\u63d0\u4f9b\u81ea\u5df1\u7684\u7f51\u7edc\u5806\u6808\u548c\u547d\u540d\u7a7a\u95f4\uff0c\u4f46\u4e0d\u914d\u7f6e\u63a5\u53e3\uff0c\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u914d\u7f6e\uff0c\u5bb9\u5668\u5c06\u4e8e\u5bbf\u4e3b\u673a\u7f51\u7edc\u5b8c\u5168\u9694\u79bb\u3002\\n\\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a`Docker`\u4e3b\u673a\u4e0a\u6709`none`,`bridge`,`host`\u4e09\u79cd\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u7f51\u7edc\u7a0b\u5e8f\u4e0d\u80fd\u88ab\u5220\u9664\uff0c\u5f53\u4f7f\u7528`Swarm`\u65f6\uff0c\u4f1a\u6dfb\u52a0\u4e24\u4e2a\u7f51\u7edc\uff0c\u4e00\u4e2a\u662f\u53eb`docker_gwbridge`\u7684`bridge`\u7f51\u7edc\uff0c\u8fd8\u6709\u4e00\u4e2a\u662f\u53eb`ingress`\u7684`overlay`\u7684\u7f51\u7edc\u7a0b\u5e8f\uff0c\u8fd9\u4e24\u4e2a\u7f51\u7edc\u662f\u81ea\u52a8\u521b\u5efa\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u7684\u3002\\n\\n# Linux \u7f51\u7edc\u539f\u7406\\n\\n\\n# \u540d\u8bcd\u89e3\u91ca\\n\\n- [Network Namespace](https://cizixs.com/2017/02/10/network-virtualization-network-namespace/)\\n\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u3002\\n- [NAT](https://en.wikipedia.org/wiki/Network_address_translation)\\n\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff0c\u8fd9\u662f\u4e00\u79cd\u7f51\u7edc\u865a\u62df\u5316\u7684\u6280\u672f\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3IP\u4e0d\u591f\u7528\u7684\u95ee\u9898\u3002\\n- [IPAM](https://en.wikipedia.org/wiki/IP_address_management)\\nIP\u5730\u5740\u7ba1\u7406,\u5bf9\u5e94\u4e8eCNM\u6a21\u578b\u4e2d\u7684IPAM\u6a21\u5757\uff0c\u63d0\u4f9bIP\u7ba1\u7406\u548c\u751f\u6210\u3002\\n\\n\\n# \u53c2\u8003\u6587\u6863\\n- [CNM \u8bbe\u8ba1](https://github.com/docker/libnetwork/blob/master/docs/design.md)\\n- [Docker \u5f15\u64ce\u6dfb\u52a0\u63d2\u4ef6](https://docs.docker.com/engine/extend/legacy_plugins/#installing-a-plugin)"},{"id":"docker-network-beginner","metadata":{"permalink":"/blog/docker-network-beginner","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2018-11-13-docker-network-beginner.md","source":"@site/blog/2018-11-13-docker-network-beginner.md","title":"Docker network \u5165\u95e8","description":"Docker network \u57fa\u672c\u77e5\u8bc6.","date":"2018-11-13T00:00:00.000Z","tags":[{"inline":false,"label":"Docker","permalink":"/blog/tags/docker","description":"Docker interdocte"}],"readingTime":5.12,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"docker-network-beginner","title":"Docker network \u5165\u95e8","authors":["rongfu"],"tags":["Docker"]},"unlisted":false,"prevItem":{"title":"docker \u7f51\u7edc\u6982\u5ff5","permalink":"/blog/docker-network-concept"},"nextItem":{"title":"Linux Firewall \u914d\u7f6e","permalink":"/blog/linux-Firewall"}},"content":"`Docker network` \u57fa\u672c\u77e5\u8bc6.\\n\x3c!-- truncate --\x3e\\n\\n# Networking Basics\\n\\n\\n# \u5355\u4e3b\u673a Bridge Driver \u7f51\u6865\u9a71\u52a8\\n \\n > \u5f53\u521b\u5efa\u4e00\u4e2a`bridge`\u7684\u7f51\u7edc\u9a71\u52a8\u65f6\u8fd9\u4e2a\u6a21\u578b\u662f\u9ed8\u8ba4\u7684\uff0c\u8fd9\u4e2a\u9a71\u52a8\u521b\u5efa\u4e86\u4e00\u4e2a\u79c1\u6709\u7684\u7f51\u7edc\u73af\u5883\uff0c\u5e76\u5728\u4e3b\u673a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5916\u90e8\u7aef\u53e3\u4ee5\u4f9b\u5916\u90e8\u4f7f\u7528\u3002\\n\\n ```shell\\n#\u521b\u5efa\u4e00\u4e2a\u6211\u4eec\u7684\u5e94\u7528\u7528\u6237\u5b9a\u4e49\u7684\u7f51\u6865\u7f51\u7edc\\n$ docker network create -d bridge catnet\\n\\n#\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u521b\u5efa\u4e00\u4e2aredis\u5bb9\u5668\\n$ docker run -d --net catnet --name cat-db redis\\n\\n#Instantiate the web frontend on the catnet network and configure it to connect to a container named `cat-db`\\n# \u5b9e\u4f8b\u8fd9\u4e2aweb\u5bb9\u5668\uff0c\u4f7f\u7528catnet\u8fd9\u4e2a\u7f51\u7edc\u5e76\u4e14\u914d\u7f6e\u5b83\u8fde\u63a5\u5230cat-db\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002\\n$ docker run -d --net catnet -p 8000:5000 -e \'DB=cat-db\' -e \'ROLE=cat\' chrch/web \\n ```\\n> \u5f53\u4e00\u4e2aIP\u5730\u5740\u4e0d\u6307\u5b9a\u65f6\uff0c\u7aef\u53e3\u4f1a\u88ab\u6620\u5c04\u5230\u6240\u6709\u7f51\u5361\u4e0a\uff0c0.0.0.0:8000\uff0c\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u4e00\u4e2aIP\u6765\u53ea\u5f00\u653e\u4e00\u4e2a\u7aef\u53e3\uff0c`-p 127.0.0.1:8000:5000`,\u66f4\u591a\u5185\u5bb9\u67e5\u770b [Docker doc](https://docs.docker.com/engine/reference/run/#/expose-incoming-ports).\\n\\n![singlehost-bridge](static/img/2018-11-13-docker-network-beginner/singlehost-bridge.png)\\n\\n\\n\u4e24\u4e2a\u5bb9\u5668\u901a\u8fc7\u540c\u4e00\u4e2a\u7f51\u6865\u8fdb\u884c\u7f51\u7edc\u901a\u4fe1\uff0c\u4e0a\u9762\u7684`web`\u8fd9\u4e2a\u5bb9\u5668\u8bbf\u95ee`redis`\u65f6\u901a\u8fc7`cat-db`\u8fd9\u4e2a\u57df\u540d\u8fdb\u884c\u8bbf\u95ee\uff0c`Docker`\u5f15\u64ce\u5185\u90e8\u6709`DNS`\u80fd\u5c06\u5bb9\u5668\u57df\u540d\u89e3\u6790\u4e3a\u53ef\u4ee5\u8bbf\u95ee\u7684\u5bb9\u5668`IP`\uff0c\u56e0\u6b64,\u5728`Bridge`\u6a21\u5f0f\u4e0b\uff0c\u591a\u4e2a\u5bb9\u5668\u90fd\u662f\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u540d\u79f0\u8fdb\u884c\u8bbf\u95ee\u3002\\n\\n\u53ef\u4ee5\u901a\u8fc7`docker network inspect catnet`\u67e5\u770b\u8fd9\u4e2a\u7f51\u7edc\u4e0b\u6240\u4ee5\u5bb9\u5668\u3002\\n```shell\\n# \u5982\u4e0b\u53ef\u4ee5\u770b\u51fa\u6709\u4e24\u4e2a\u5bb9\u5668\u662f\u4f7f\u7528\u4e86\u8fd9\u540c\u4e00\u4e2a\u7f51\u7edc\u3002\\n$ docker network inspect catnet\\n[\\n    {\\n        \\"Name\\": \\"catnet\\",\\n        \\"Id\\": \\"81e45d3e3bf4f989abe87c42c8db63273f9bf30c1f5a593bae4667d5f0e33145\\",\\n        \\"Scope\\": \\"local\\",\\n        \\"Driver\\": \\"bridge\\",\\n        \\"EnableIPv6\\": false,\\n        \\"IPAM\\": {\\n            \\"Driver\\": \\"default\\",\\n            \\"Options\\": {},\\n            \\"Config\\": [\\n                {\\n                    \\"Subnet\\": \\"172.19.0.0/16\\",\\n                    \\"Gateway\\": \\"172.19.0.1/16\\"\\n                }\\n            ]\\n        },\\n        \\"Internal\\": false,\\n        \\"Attachable\\": false,\\n        \\"Containers\\": {\\n            \\"2a23faa18fb33b5d07eb4e0affb5da36449a78eeb196c944a5af3aaffe1ada37\\": {\\n                \\"Name\\": \\"backstabbing_pike\\",\\n                \\"EndpointID\\": \\"9039dae3218c47739ae327a30c9d9b219159deb1c0a6274c6d994d37baf2f7e3\\",\\n                \\"MacAddress\\": \\"02:42:ac:13:00:03\\",\\n                \\"IPv4Address\\": \\"172.19.0.3/16\\",\\n                \\"IPv6Address\\": \\"\\"\\n            },\\n            \\"dbf7f59187801e1bcd2b0a7d4731ca5f0a95236dbc4b4157af01697f295d4528\\": {\\n                \\"Name\\": \\"cat-db\\",\\n                \\"EndpointID\\": \\"7f7c51a0468acd849fd575adeadbcb5310c5987195555620d60ee3ffad37c680\\",\\n                \\"MacAddress\\": \\"02:42:ac:13:00:02\\",\\n                \\"IPv4Address\\": \\"172.19.0.2/16\\",\\n                \\"IPv6Address\\": \\"\\"\\n            }\\n        },\\n        \\"Options\\": {},\\n        \\"Labels\\": {}\\n    }\\n]\\n```\\n\\n# \u591a\u4e3b\u673a Bridge Driver \u7f51\u6865\u6a21\u5f0f\\n\u5728\u591a\u53f0\u5bbf\u4e3b\u673a\u4e2d\u4f7f\u7528`Bridge`\u7f51\u7edc\u6a21\u5f0f\uff0c`redis`\u90e8\u7f72\u5728`host-A`\u4e2d\uff0c\u5e76\u4e14\u9700\u8981\u6620\u5c04\u4e00\u4e2a\u5916\u90e8IP\uff0c\u4f9b`web`\u53bb\u8c03\u7528\uff0c`web`\u90e8\u7f72\u5728`host-B`\u4e2d\uff0c\u8981\u8c03\u7528`db`\u65f6\uff0c\u8981\u901a\u8fc7`DB=host-A:6379`\u6307\u5b9a\u4e3b\u673aA\u7684`host`\u548c`redis`\u66b4\u9732\u7684\u7aef\u53e3\u8fdb\u884c\u8fde\u63a5\u3002\\n\\n```shell\\n# \u6bcf\u4e2adocker\u4e2d\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684Bridge\u7f51\u7edc\u6a21\u5f0f\\nhost-A $ docker run -d -p 6379:6379 redis\\nhost-B $ docker run -d -p 8000:5000 -e \'DB=host-A:6379\' -e \'ROLE=cat\' --name web chrch/web \\n````\\n\\n![\u591a\u4e3b\u673a\u6a21\u5f0f](static/img/2018-11-13-docker-network-beginner/multihost-bridge.png)\\n\\n\u4e3b\u673aB\u901a\u8fc7\u672c\u673a`Host`\u6765\u89e3\u6790\u4e3b\u673aA\u7684IP\u5730\u5740\u5df2\u8fdb\u884c\u8bbf\u95ee\u3002\u901a\u5e38\u4e0d\u5efa\u8bae\u8fd9\u6837\u786c\u7f16\u7801\u7684\u4f7f\u7528\u670d\u52a1\u5730\u5740\u3002\\n\\n# Overlay Driver\\n\\n`overlay` \u7f51\u7edc\u6a21\u5f0f\u63d0\u4f9b\u4e86\u670d\u52a1\u53d1\u73b0\u548c\u81ea\u52a8\u8d1f\u8f7d\u5747\u8861\u7684\u529f\u80fd\uff0c\u4f46\u662f\u524d\u63d0\u662f\u8981\u628a\u591a\u4e3b\u673a\u90e8\u7f72\u4e3a`swarm`\u96c6\u7fa4\u6a21\u5f0f\u3002\\n\u5728`lead`\u4e0a\u9762\u67e5\u770b`swarm`\u7684\u8282\u70b9\u6570\u91cf\u3002\\n```shell\\n$ docker node ls\\nID                           HOSTNAME          STATUS  AVAILABILITY  MANAGER STATUS\\na8dwuh6gy5898z3yeuvxaetjo    host-B  Ready   Active\\nelgt0bfuikjrntv3c33hr0752 *  host-A  Ready   Active        Leader\\n```\\n\\n\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684`overlay`\u7f51\u7edc\u3002\u5728\u4e00\u4e2a`overlay`\u7f51\u7edc\u4e2d\u5f00\u653e\u7684`TCP`\u548c`UDP`\u7aef\u53e3\u90fd\u662f\u5f00\u653e\u3002\\n```shell\\n$ docker network create -d overlay --subnet 192.0.0.0/24 --gateway 192.0.0.1 dognet\\n$ docker service create --network dognet --name dog-db redis\\n$ docker service create --network dognet -p 8000:5000  -e \'DB=dog-db\' -e \'ROLE=dog\' --name dog-web chrch/web\\n```\\n\\n![overlay\u7f51\u7edc\u6a21\u5f0f](static/img/2018-11-13-docker-network-beginner/pets-overlay.png)\\n\\n\u4e0a\u56fe\u8bb2\u89e3\u4e86\u4e0a\u9762\u7684\u547d\u4ee4\u4e2d\u7684\u90e8\u7f72\u56fe\uff0c\u9996\u5148\u521b\u5efa\u4e86\u4e00\u4e2a\u53eb`dognet`\u7684`overlay`\u7f51\u7edc,\u7136\u540e\u521b\u5efa\u4e00\u4e2a`service`,\u4f7f\u7528`dognet`\u8fd9\u4e2a\u521b\u5efa\u597d\u7684\u7f51\u7edc\uff0c\u5e76\u4e14\u4e0d\u5f00\u653e\u4efb\u4f55\u53ef\u8bbf\u95ee\u7aef\u53e3\uff0c\u547d\u4ee4\u4e3a`dog-db`\uff1b\u7136\u540e\u521b\u5efa\u53e6\u4e00\u4e2a\u670d\u52a1\uff0c\u4e5f\u662f\u4f7f\u7528\u540c\u4e00\u4e2a\u7f51\u7edc\uff0c\u5e76\u4e14\u76f4\u63a5\u6307\u5b9a`redis`\u7684name\u5373\u53ef.\\n\\n\\n\u540c\u65f6\u8bbf\u95ee\u4e24\u4e2a`overlay`\u7684\u7f51\u7edc\u6a21\u5f0f\uff0c\u6bd4\u5982\u6709\u4e00\u4e2a`admin`\u9700\u8981\u540c\u65f6\u8bbf\u95ee`dog-web`\u548c`cat-web`\u4e24\u4e2a\u670d\u52a1\u3002\u6211\u4eec\u53ef\u4ee5\u5982\u4e0b\u64cd\u4f5c\uff0c\u5148\u542f\u52a8\u4e00\u4e2a`catnet`\u7684`overlay`\u7f51\u7edc\u3002\\n\\n```shell\\n$ docker network create -d overlay --subnet 172.0.0.0/24 --gateway 172.0.0.1 catnet\\n$ docker service create --network catnet --name cat-db redis\\n$ docker service create --network catnet -p 8000:5000  -e \'DB=cat-db\' -e \'ROLE=cat\' --name cat-web chrch/web\\n\\n# \u540c\u65f6\u4f7f\u7528\u4e24\u4e2aoverlay\u7684\u7f51\u7edc\u73af\u5883\\n$ docker service create --network catnet --network dognet -p 7000:5000 -e \'DB1=dog-db\' -e \'DB2=cat-db\' --name admin chrch/admin\\n```\\n\\n![\u591a\u4e3b\u673a\u63a7\u5236](static/img/2018-11-13-docker-network-beginner/multitenant.png)\\n`dog-web`\u548c`dog-db`\u4e4b\u95f4\u7f51\u7edc\u53ef\u4ee5\u4e92\u901a\uff0c\u5f53\u65f6\u4e0d\u53ef\u4ee5\u8bbf\u95ee`catnet`\u4e0a\u7684\u670d\u52a1,`cat-web`\u548c`cat-db`\u4e4b\u95f4\u4e5f\u662f\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u7684\uff0c\u4f46\u662f\u4e0d\u53ef\u4ee5\u8bbf\u95ee`dognet`\u7f51\u7edc\u4e0a\u7684\u670d\u52a1\u3002\\n\\n\\n# \u53c2\u8003\\n- https://github.com/docker/labs/blob/master/networking/tutorials.md"},{"id":"linux-Firewall","metadata":{"permalink":"/blog/linux-Firewall","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2018-10-17-linux-Firewall.md","source":"@site/blog/2018-10-17-linux-Firewall.md","title":"Linux Firewall \u914d\u7f6e","description":"iptables \u4e3b\u8981\u7528\u4e8ecentos 7\u4e00\u4e0b,Firewall\u7528\u4e8ecentos7\u4ee5\u4e0a.","date":"2018-10-17T00:00:00.000Z","tags":[{"inline":false,"label":"Linux","permalink":"/blog/tags/linux","description":"Linux"}],"readingTime":11.055,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"linux-Firewall","title":"Linux Firewall \u914d\u7f6e","authors":["rongfu"],"tags":["Linux"]},"unlisted":false,"prevItem":{"title":"Docker network \u5165\u95e8","permalink":"/blog/docker-network-beginner"},"nextItem":{"title":"Linux Keepalived \u4f7f\u7528","permalink":"/blog/linux-Keepalived"}},"content":"`iptables` \u4e3b\u8981\u7528\u4e8e`centos 7`\u4e00\u4e0b,`Firewall`\u7528\u4e8e`centos7`\u4ee5\u4e0a.\\n\\n\x3c!-- truncate --\x3e\\n\\n# Firewall\\n\\nFirewallD \u662f iptables \u7684\u524d\u7aef\u63a7\u5236\u5668\uff0c\u7528\u4e8e\u5b9e\u73b0\u6301\u4e45\u7684\u7f51\u7edc\u6d41\u91cf\u89c4\u5219\u3002\u5b83\u63d0\u4f9b\u547d\u4ee4\u884c\u548c\u56fe\u5f62\u754c\u9762\uff0c\u5728\u5927\u591a\u6570 Linux \u53d1\u884c\u7248\u7684\u4ed3\u5e93\u4e2d\u90fd\u6709\u3002\u4e0e\u76f4\u63a5\u63a7\u5236 iptables \u76f8\u6bd4\uff0c\u4f7f\u7528 FirewallD \u6709\u4e24\u4e2a\u4e3b\u8981\u533a\u522b\uff1a\\n\\n1\u3001FirewallD \u4f7f\u7528\u533a\u57df\u548c\u670d\u52a1\u800c\u4e0d\u662f\u94fe\u5f0f\u89c4\u5219\u3002\\n\\n2\u3001\u5b83\u52a8\u6001\u7ba1\u7406\u89c4\u5219\u96c6\uff0c\u5141\u8bb8\u66f4\u65b0\u89c4\u5219\u800c\u4e0d\u7834\u574f\u73b0\u6709\u4f1a\u8bdd\u548c\u8fde\u63a5\u3002\\n\\nFirewallD \u662f iptables \u7684\u4e00\u4e2a\u5c01\u88c5\uff0c\u53ef\u4ee5\u8ba9\u4f60\u66f4\u5bb9\u6613\u5730\u7ba1\u7406 iptables \u89c4\u5219 - \u5b83\u5e76\u4e0d\u662f iptables \u7684\u66ff\u4ee3\u54c1\u3002\u867d\u7136 iptables \u547d\u4ee4\u4ecd\u53ef\u7528\u4e8e FirewallD\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528 FirewallD \u65f6\u4ec5\u4f7f\u7528 FirewallD \u547d\u4ee4\u3002\\n\\n\u672c\u6307\u5357\u5c06\u5411\u60a8\u4ecb\u7ecd FirewallD \u7684\u533a\u57df\u548c\u670d\u52a1\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u4e00\u4e9b\u57fa\u672c\u7684\u914d\u7f6e\u6b65\u9aa4\u3002\\n\\n## \u5b89\u88c5\u4e0e\u7ba1\u7406 FirewallD\\nCentOS 7 \u548c Fedora 20+ \u5df2\u7ecf\u5305\u542b\u4e86 FirewallD\uff0c\u4f46\u662f\u9ed8\u8ba4\u6ca1\u6709\u6fc0\u6d3b\u3002\u53ef\u4ee5\u50cf\u5176\u5b83\u7684 systemd \u5355\u5143\u90a3\u6837\u63a7\u5236\u5b83\u3002\\n\\n1\u3001 \u542f\u52a8\u670d\u52a1\uff0c\u5e76\u5728\u7cfb\u7edf\u5f15\u5bfc\u65f6\u542f\u52a8\u8be5\u670d\u52a1\uff1a\\n```shell\\nsudo systemctl start firewalld\\nsudo systemctl enable firewalld\\n```\\n\u8981\u505c\u6b62\u5e76\u7981\u7528\uff1a\\n```shell\\nsudo systemctl stop firewalld\\nsudo systemctl disable firewalld\\n```\\n2\u3001 \u68c0\u67e5\u9632\u706b\u5899\u72b6\u6001\u3002\u8f93\u51fa\u5e94\u8be5\u662f running \u6216\u8005 not running\u3002\\n```shell\\nsudo firewall-cmd --state\\n```\\n3\u3001 \u8981\u67e5\u770b FirewallD \u5b88\u62a4\u8fdb\u7a0b\u7684\u72b6\u6001\uff1a\\n```shell\\nsudo systemctl status firewalld\\n\u793a\u4f8b\u8f93\u51fa\\n\\nfirewalld.service - firewalld - dynamic firewall daemon\\n   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled)\\n   Active: active (running) since Wed 2015-09-02 18:03:22 UTC; 1min 12s ago\\n Main PID: 11954 (firewalld)\\n   CGroup: /system.slice/firewalld.service\\n   \u2514\u250011954 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid\\n```\\n4\u3001 \u91cd\u65b0\u52a0\u8f7d FirewallD \u914d\u7f6e\uff1a\\n```shell\\nsudo firewall-cmd --reload\\n```\\n## \u914d\u7f6e FirewallD\\nFirewallD \u4f7f\u7528 XML \u8fdb\u884c\u914d\u7f6e\u3002\u9664\u975e\u662f\u975e\u5e38\u7279\u6b8a\u7684\u914d\u7f6e\uff0c\u4f60\u4e0d\u5fc5\u5904\u7406\u5b83\u4eec\uff0c\u800c\u5e94\u8be5\u4f7f\u7528 firewall-cmd\u3002\\n\\n\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e\u4e24\u4e2a\u76ee\u5f55\u4e2d\uff1a\\n\\n- `/usr/lib/FirewallD` \u4e0b\u4fdd\u5b58\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5982\u9ed8\u8ba4\u533a\u57df\u548c\u516c\u7528\u670d\u52a1\u3002 \u907f\u514d\u4fee\u6539\u5b83\u4eec\uff0c\u56e0\u4e3a\u6bcf\u6b21 firewall \u8f6f\u4ef6\u5305\u66f4\u65b0\u65f6\u90fd\u4f1a\u8986\u76d6\u8fd9\u4e9b\u6587\u4ef6\u3002\\n- `/etc/firewalld` \u4e0b\u4fdd\u5b58\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\u3002 \u8fd9\u4e9b\u6587\u4ef6\u5c06\u8986\u76d6\u9ed8\u8ba4\u914d\u7f6e\u3002\\n\\n## \u914d\u7f6e\u96c6\\n`FirewallD` \u4f7f\u7528\u4e24\u4e2a\u914d\u7f6e\u96c6\uff1a\u201c\u8fd0\u884c\u65f6\u201d\u548c\u201c\u6301\u4e45\u201d\u3002 \u5728\u7cfb\u7edf\u91cd\u65b0\u542f\u52a8\u6216\u91cd\u65b0\u542f\u52a8 `FirewallD` \u65f6\uff0c\u4e0d\u4f1a\u4fdd\u7559\u8fd0\u884c\u65f6\u7684\u914d\u7f6e\u66f4\u6539\uff0c\u800c\u5bf9\u6301\u4e45\u914d\u7f6e\u96c6\u7684\u66f4\u6539\u4e0d\u4f1a\u5e94\u7528\u4e8e\u6b63\u5728\u8fd0\u884c\u7684\u7cfb\u7edf\u3002\\n\\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c`firewall-cmd` \u547d\u4ee4\u9002\u7528\u4e8e\u8fd0\u884c\u65f6\u914d\u7f6e\uff0c\u4f46\u4f7f\u7528 `--permanent` \u6807\u5fd7\u5c06\u4fdd\u5b58\u5230\u6301\u4e45\u914d\u7f6e\u4e2d\u3002\u8981\u6dfb\u52a0\u548c\u6fc0\u6d3b\u6301\u4e45\u6027\u89c4\u5219\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u65b9\u6cd5\u4e4b\u4e00\u3002\\n\\n1\u3001 \u5c06\u89c4\u5219\u540c\u65f6\u6dfb\u52a0\u5230\u6301\u4e45\u89c4\u5219\u96c6\u548c\u8fd0\u884c\u65f6\u89c4\u5219\u96c6\u4e2d\u3002 \x7f\\n```shell\\nsudo firewall-cmd --zone=public --add-service=http --permanent\\nsudo firewall-cmd --zone=public --add-service=http\\n```\\n2\u3001 \u5c06\u89c4\u5219\u6dfb\u52a0\u5230\u6301\u4e45\u89c4\u5219\u96c6\u4e2d\u5e76\u91cd\u65b0\u52a0\u8f7d FirewallD\u3002 \x7f\\n```shell\\nsudo firewall-cmd --zone=public --add-service=http --permanent\\nsudo firewall-cmd --reload\\n```\\n*`reload` \u547d\u4ee4\u4f1a\u5220\u9664\u6240\u6709\u8fd0\u884c\u65f6\u914d\u7f6e\u5e76\u5e94\u7528\u6c38\u4e45\u914d\u7f6e\u3002\u56e0\u4e3a firewalld \u52a8\u6001\u7ba1\u7406\u89c4\u5219\u96c6\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u7834\u574f\u73b0\u6709\u7684\u8fde\u63a5\u548c\u4f1a\u8bdd\u3002*\\n\\n## \u9632\u706b\u5899\u7684\u533a\u57df\\n\u201c\u533a\u57df\u201d\u662f\u9488\u5bf9\u7ed9\u5b9a\u4f4d\u7f6e\u6216\u573a\u666f\uff08\u4f8b\u5982\u5bb6\u5ead\u3001\u516c\u5171\u3001\u53d7\u4fe1\u4efb\u7b49\uff09\u53ef\u80fd\u5177\u6709\u7684\u5404\u79cd\u4fe1\u4efb\u7ea7\u522b\u7684\u9884\u6784\u5efa\u89c4\u5219\u96c6\u3002\u4e0d\u540c\u7684\u533a\u57df\u5141\u8bb8\u4e0d\u540c\u7684\u7f51\u7edc\u670d\u52a1\u548c\u5165\u7ad9\u6d41\u91cf\u7c7b\u578b\uff0c\u800c\u62d2\u7edd\u5176\u4ed6\u4efb\u4f55\u6d41\u91cf\u3002 \u9996\u6b21\u542f\u7528 FirewallD \u540e\uff0cpublic \u5c06\u662f\u9ed8\u8ba4\u533a\u57df\u3002\\n\\n\u533a\u57df\u4e5f\u53ef\u4ee5\u7528\u4e8e\u4e0d\u540c\u7684\u7f51\u7edc\u63a5\u53e3\u3002\u4f8b\u5982\uff0c\u8981\u5206\u79bb\u5185\u90e8\u7f51\u7edc\u548c\u4e92\u8054\u7f51\u7684\u63a5\u53e3\uff0c\u4f60\u53ef\u4ee5\u5728 internal \u533a\u57df\u4e0a\u5141\u8bb8 DHCP\uff0c\u4f46\u5728external \u533a\u57df\u4ec5\u5141\u8bb8 HTTP \u548c SSH\u3002\u672a\u660e\u786e\u8bbe\u7f6e\u4e3a\u7279\u5b9a\u533a\u57df\u7684\u4efb\u4f55\u63a5\u53e3\u5c06\u6dfb\u52a0\u5230\u9ed8\u8ba4\u533a\u57df\u3002\\n\\n\u8981\u627e\u5230\u9ed8\u8ba4\u533a\u57df\uff1a \x7f\\n```shell\\nsudo firewall-cmd --get-default-zone\\n```\\n\u8981\u4fee\u6539\u9ed8\u8ba4\u533a\u57df\uff1a\\n```shell\\nsudo firewall-cmd --set-default-zone=internal\\n```\\n\u8981\u67e5\u770b\u4f60\u7f51\u7edc\u63a5\u53e3\u4f7f\u7528\u7684\u533a\u57df\uff1a\\n```shell\\nsudo firewall-cmd --get-active-zones\\n```\\n\u793a\u4f8b\u8f93\u51fa\uff1a\\n```shell\\npublic\\n  interfaces: eth0\\n```\\n\u8981\u5f97\u5230\u7279\u5b9a\u533a\u57df\u7684\u6240\u6709\u914d\u7f6e\uff1a\\n```shell\\nsudo firewall-cmd --zone=public --list-all\\n```\\n\u793a\u4f8b\u8f93\u51fa\uff1a\\n```shell\\npublic (default, active)\\n  interfaces: ens160\\n  sources:\\n  services: dhcpv6-client http ssh\\n  ports: 12345/tcp\\n  masquerade: no\\n  forward-ports:\\n  icmp-blocks:\\n  rich rules:\\n```\\n\u8981\u5f97\u5230\u6240\u6709\u533a\u57df\u7684\u914d\u7f6e\uff1a \x7f\\n```shell\\nsudo firewall-cmd --list-all-zones\\n```\\n\u793a\u4f8b\u8f93\u51fa\uff1a\\n```shell\\nblock\\n  interfaces:\\n  sources:\\n  services:\\n  ports:\\n  masquerade: no\\n  forward-ports:\\n  icmp-blocks:\\n  rich rules:\\n  ...\\nwork\\n  interfaces:\\n  sources:\\n  services: dhcpv6-client ipp-client ssh\\n  ports:\\n  masquerade: no\\n  forward-ports:\\n  icmp-blocks:\\n  rich rules:\\n```\\n## \u4e0e\u670d\u52a1\u4e00\u8d77\u4f7f\u7528\\n`FirewallD` \u53ef\u4ee5\u6839\u636e\u7279\u5b9a\u7f51\u7edc\u670d\u52a1\u7684\u9884\u5b9a\u4e49\u89c4\u5219\u6765\u5141\u8bb8\u76f8\u5173\u6d41\u91cf\u3002\u4f60\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684\u81ea\u5b9a\u4e49\u7cfb\u7edf\u89c4\u5219\uff0c\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230\u4efb\u4f55\u533a\u57df\u3002 \u9ed8\u8ba4\u652f\u6301\u7684\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e `/usr/lib /firewalld/services`\uff0c\u7528\u6237\u521b\u5efa\u7684\u670d\u52a1\u6587\u4ef6\u5728 `/etc/firewalld/services` \u4e2d\u3002\\n\\n\u8981\u67e5\u770b\u9ed8\u8ba4\u7684\u53ef\u7528\u670d\u52a1\uff1a\\n```shell\\nsudo firewall-cmd --get-services\\n```\\n\u6bd4\u5982\uff0c\u8981\u542f\u7528\u6216\u7981\u7528 HTTP \u670d\u52a1\uff1a \x7f\\n```shell\\nsudo firewall-cmd --zone=public --add-service=http --permanent\\nsudo firewall-cmd --zone=public --remove-service=http --permanent\\n```\\n\u5141\u8bb8\u6216\u8005\u62d2\u7edd\u4efb\u610f\u7aef\u53e3/\u534f\u8bae\\n\u6bd4\u5982\uff1a\u5141\u8bb8\u6216\u8005\u7981\u7528 12345 \u7aef\u53e3\u7684 TCP \u6d41\u91cf\u3002\\n```shell\\nsudo firewall-cmd --zone=public --add-port=12345/tcp --permanent\\nsudo firewall-cmd --zone=public --remove-port=12345/tcp --permanent\\n```\\n\u7aef\u53e3\u8f6c\u53d1\\n\u4e0b\u9762\u662f\u5728\u540c\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\u5c06 80 \u7aef\u53e3\u7684\u6d41\u91cf\u8f6c\u53d1\u5230 12345 \u7aef\u53e3\u3002\\n```shell\\nsudo firewall-cmd --zone=\\"public\\" --add-forward-port=port=80:proto=tcp:toport=12345\\n```\\n\u8981\u5c06\u7aef\u53e3\u8f6c\u53d1\u5230\u53e6\u5916\u4e00\u53f0\u670d\u52a1\u5668\u4e0a\uff1a\\n\\n1\u3001 \u5728\u9700\u8981\u7684\u533a\u57df\u4e2d\u6fc0\u6d3b masquerade\u3002\\n```shell\\nsudo firewall-cmd --zone=public --add-masquerade\\n```\\n2\u3001 \u6dfb\u52a0\u8f6c\u53d1\u89c4\u5219\u3002\u4f8b\u5b50\u4e2d\u662f\u5c06\u672c\u5730\u7684 80 \u7aef\u53e3\u7684\u6d41\u91cf\u8f6c\u53d1\u5230 IP \u5730\u5740\u4e3a \uff1a123.456.78.9 \u7684\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u7684  8080 \u7aef\u53e3\u3002\x7f\\n```shell\\nsudo firewall-cmd --zone=\\"public\\" --add-forward-port=port=80:proto=tcp:toport=8080:toaddr=123.456.78.9\\n```\\n\u8981\u5220\u9664\u89c4\u5219\uff0c\u7528 --remove \u66ff\u6362 --add\u3002\u6bd4\u5982\uff1a\\n```shell\\nsudo firewall-cmd --zone=public --remove-masquerade\\n```\\n\u7528 `FirewallD` \u6784\u5efa\u89c4\u5219\u96c6\\n\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f\u5982\u4f55\u4f7f\u7528` FirewallD` \u4e3a\u4f60\u7684\u670d\u52a1\u5668\u914d\u7f6e\u57fa\u672c\u89c4\u5219\uff08\u5982\u679c\u60a8\u6b63\u5728\u8fd0\u884c web \u670d\u52a1\u5668\uff09\u3002\\n\\n\u5c06 `eth0` \u7684\u9ed8\u8ba4\u533a\u57df\u8bbe\u7f6e\u4e3a `dmz`\u3002 \u5728\u6240\u63d0\u4f9b\u7684\u9ed8\u8ba4\u533a\u57df\u4e2d\uff0c`dmz`\uff08\u975e\u519b\u4e8b\u533a\uff09\u662f\u6700\u9002\u5408\u4e8e\u8fd9\u4e2a\u7a0b\u5e8f\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u5141\u8bb8 `SSH` \u548c `ICM`P\u3002\\n```shell\\nsudo firewall-cmd --set-default-zone=dmz\\nsudo firewall-cmd --zone=dmz --add-interface=eth0\\n```\\n2\u3001 \u628a `HTTP` \u548c `HTTS` \u6dfb\u52a0\u6c38\u4e45\u7684\u670d\u52a1\u89c4\u5219\u5230 `dmz` \u533a\u57df\u4e2d\uff1a\\n```shell\\nsudo firewall-cmd --zone=dmz --add-service=http --permanent\\nsudo firewall-cmd --zone=dmz --add-service=https --permanent\\n```\\n\x7f 3\u3001 \u91cd\u65b0\u52a0\u8f7d `FirewallD` \u8ba9\u89c4\u5219\u7acb\u5373\u751f\u6548\uff1a\\n```shell\\nsudo firewall-cmd --reload\\n```\\n\x7f \u5982\u679c\u4f60\u8fd0\u884c `firewall-cmd --zone=dmz --list-all`\uff0c \u4f1a\u6709\u4e0b\u9762\u7684\u8f93\u51fa\uff1a\\n```shell\\ndmz (default)\\n  interfaces: eth0\\n  sources:\\n  services: http https ssh\\n  ports:\\n  masquerade: no\\n  forward-ports:\\n  icmp-blocks:\\n  rich rules:\\n```\\n\x7f \u8fd9\u544a\u8bc9\u6211\u4eec\uff0c`dmz` \u533a\u57df\u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u533a\u57df\uff0c\u5b83\u88ab\u7528\u4e8e `eth0` \u63a5\u53e3\u4e2d\u6240\u6709\u7f51\u7edc\u7684\u6e90\u5730\u5740\u548c\u7aef\u53e3\u3002 \u5141\u8bb8\u4f20\u5165 `HTTP`\uff08\u7aef\u53e3 80\uff09\u3001`HTTPS`\uff08\u7aef\u53e3 443\uff09\u548c SSH\uff08\u7aef\u53e3 22\uff09\u7684\u6d41\u91cf\uff0c\u5e76\u4e14\u7531\u4e8e\u6ca1\u6709 `IP` \u7248\u672c\u63a7\u5236\u7684\u9650\u5236\uff0c\u8fd9\u4e9b\u9002\u7528\u4e8e `IPv4` \u548c `IPv6`\u3002 \u4e0d\u5141\u8bb8IP \u4f2a\u88c5\u4ee5\u53ca\u7aef\u53e3\u8f6c\u53d1\u3002 \u6211\u4eec\u6ca1\u6709 `ICMP` \u5757\uff0c\u6240\u4ee5 `ICMP` \u6d41\u91cf\u662f\u5b8c\u5168\u5141\u8bb8\u7684\u3002\u6ca1\u6709\u4e30\u5bccRich\u89c4\u5219\uff0c\u5141\u8bb8\u6240\u6709\u51fa\u7ad9\u6d41\u91cf\u3002\\n\\n## \u9ad8\u7ea7\u914d\u7f6e\\n\u670d\u52a1\u548c\u7aef\u53e3\u9002\u7528\u4e8e\u57fa\u672c\u914d\u7f6e\uff0c\u4f46\u5bf9\u4e8e\u9ad8\u7ea7\u60c5\u666f\u53ef\u80fd\u4f1a\u9650\u5236\u8f83\u591a\u3002 \u4e30\u5bccRich\u89c4\u5219\u548c\u76f4\u63a5Direct\u63a5\u53e3\u5141\u8bb8\u4f60\u4e3a\u4efb\u4f55\u7aef\u53e3\u3001\u534f\u8bae\u3001\u5730\u5740\u548c\u64cd\u4f5c\u5411\u4efb\u4f55\u533a\u57df \u6dfb\u52a0\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u9632\u706b\u5899\u89c4\u5219\u3002\\n\\n## \u4e30\u5bcc\u89c4\u5219\\n\u4e30\u5bcc\u89c4\u5219\u7684\u8bed\u6cd5\u6709\u5f88\u591a\uff0c\u4f46\u90fd\u5b8c\u6574\u5730\u8bb0\u5f55\u5728 `firewalld.richlanguage(5)` \u7684\u624b\u518c\u9875\u4e2d\uff08\u6216\u5728\u7ec8\u7aef\u4e2d man firewalld.richlanguage\uff09\u3002 \u4f7f\u7528 `--add-rich-rule`\u3001`--list-rich-rules` \u3001 `--remove-rich-rule` \u548c `firewall-cmd` \u547d\u4ee4\u6765\u7ba1\u7406\u5b83\u4eec\u3002\\n\\n\u8fd9\u91cc\u6709\u4e00\u4e9b\u5e38\u89c1\u7684\u4f8b\u5b50\uff1a\\n\\n\u5141\u8bb8\u6765\u81ea\u4e3b\u673a `192.168.0.14` \u7684\u6240\u6709 IPv4 \u6d41\u91cf\u3002\\n```shell\\nsudo firewall-cmd --zone=public --add-rich-rule \'rule family=\\"ipv4\\" source address=192.168.0.14 accept\'\\n```\\n\u62d2\u7edd\u6765\u81ea\u4e3b\u673a 192.168.1.10 \u5230 22 \u7aef\u53e3\u7684 IPv4 \u7684 TCP \u6d41\u91cf\u3002\\n```shell\\nsudo firewall-cmd --zone=public --add-rich-rule \'rule family=\\"ipv4\\" source address=\\"192.168.1.10\\" port port=22 protocol=tcp reject\'\\n```\\n\u5141\u8bb8\u6765\u81ea\u4e3b\u673a 10.1.0.3 \u5230 80 \u7aef\u53e3\u7684 IPv4 \u7684 TCP \u6d41\u91cf\uff0c\u5e76\u5c06\u6d41\u91cf\u8f6c\u53d1\u5230 6532 \u7aef\u53e3\u4e0a\u3002 \x7f\\n```shell\\nsudo firewall-cmd --zone=public --add-rich-rule \'rule family=ipv4 source address=10.1.0.3 forward-port port=80 protocol=tcp to-port=6532\'\\n```\\n\u5c06\u4e3b\u673a 172.31.4.2 \u4e0a 80 \u7aef\u53e3\u7684 IPv4 \u6d41\u91cf\u8f6c\u53d1\u5230 8080 \u7aef\u53e3\uff08\u9700\u8981\u5728\u533a\u57df\u4e0a\u6fc0\u6d3b `masquerade`\uff09\u3002\\n```shell\\nsudo firewall-cmd --zone=public --add-rich-rule \'rule family=ipv4 forward-port port=80 protocol=tcp to-port=8080 to-addr=172.31.4.2\'\\n```\\n\u5217\u51fa\u4f60\u76ee\u524d\u7684\u4e30\u5bcc\u89c4\u5219\uff1a\\n```shell\\nsudo firewall-cmd --list-rich-rules\\n```\\n`iptables` \u7684\u76f4\u63a5\u63a5\u53e3\\n\u5bf9\u4e8e\u6700\u9ad8\u7ea7\u7684\u4f7f\u7528\uff0c\u6216\u5bf9\u4e8e `iptables` \u4e13\u5bb6\uff0c`FirewallD` \u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f4\u63a5Direct\u63a5\u53e3\uff0c\u5141\u8bb8\u4f60\u7ed9\u5b83\u4f20\u9012\u539f\u59cb `iptables `\u547d\u4ee4\u3002 \u76f4\u63a5\u63a5\u53e3\u89c4\u5219\u4e0d\u662f\u6301\u4e45\u7684\uff0c\u9664\u975e\u4f7f\u7528 `--permanent`\u3002\\n\\n\u8981\u67e5\u770b\u6dfb\u52a0\u5230 `FirewallD` \u7684\u6240\u6709\u81ea\u5b9a\u4e49\u94fe\u6216\u89c4\u5219\uff1a\\n```shell\\nfirewall-cmd --direct --get-all-chains\\nfirewall-cmd --direct --get-all-rules\\n```\\n\u8ba8\u8bba `iptables` \u7684\u5177\u4f53\u8bed\u6cd5\u5df2\u7ecf\u8d85\u51fa\u4e86\u8fd9\u7bc7\u6587\u7ae0\u7684\u8303\u56f4\u3002\u5982\u679c\u4f60\u60f3\u5b66\u4e60\u66f4\u591a\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u7684 `iptables` \u6307\u5357\u3002\\n\\n## \u66f4\u591a\u4fe1\u606f\\n\\n- [FirewallD \u5b98\u65b9\u7f51\u7ad9](https://firewalld.org/)\\n- [RHEL 7 \u5b89\u5168\u6307\u5357\uff1aFirewallD \u7b80\u4ecb](https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/security_guide/)\\n\\n\\n# iptables\\n\\n- `root` \u7528\u6237\u767b\u5f55\\n- \u7f16\u8f91\u9632\u706b\u5899\u6587\u4ef6\\n\\n```shell\\n  cat /etc/sysconfig/iptables\\n```\\n- \u8bbe\u7f6e\u7981\u6b62\u8fdb\u5165\\n\\n```shell\\n -A INPUT -m state --state NEW -m tcp -p tcp -s 10.1.4.0/24 --dport 5601 -j ACCEPT\\n \u89e3\u91ca: -s \u53ef\u4ee5\u8bbf\u95ee\u7684ip\u7aef\\n       -dport 5601 \u53ef\u4ee5\u8bbf\u95ee\u6b64\u670d\u52a1\u5668\u4e0a\u7684\u67d0\u4e2a\u7aef\u53e3\uff0c\u5982\u679c\u5168\u90e8\u5c31\u4e0d\u7528\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570 \\n```\\n\\n- \u547d\u4ee4 `service iptables `\\n\\n```shell\\n Usage: iptables {start|stop|reload|restart|condrestart|status|panic|save}\\n \u67e5\u8be2iptables\u72b6\u6001: service iptables status\\n \u91cd\u542fiptables\u72b6\u6001: service iptables restart\\n \u542f\u52a8iptables\u72b6\u6001: service iptables start\\n \u505c\u6b62iptables\u72b6\u6001: service iptables stop\\n```\\n\\n\\n- FORWAD\\n```\\niptables -t nat -A PREROUTING -d 61.129.93.38 -p tcp -j DNAT --to-destination localhost:8080\\n```\\n\\niptables -t nat -A PREROUTING -d 61.129.93.38 -p tcp --dport 80 -j DNAT --to-destination 10.1.4.172:8080"},{"id":"linux-Keepalived","metadata":{"permalink":"/blog/linux-Keepalived","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2018-10-17-linux-Keepalived.md","source":"@site/blog/2018-10-17-linux-Keepalived.md","title":"Linux Keepalived \u4f7f\u7528","description":"Keepalived \u6784\u5efa\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684\u96c6\u7fa4","date":"2018-10-17T00:00:00.000Z","tags":[{"inline":false,"label":"Linux","permalink":"/blog/tags/linux","description":"Linux"}],"readingTime":6.975,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"linux-Keepalived","title":"Linux Keepalived \u4f7f\u7528","authors":["rongfu"],"tags":["Linux"]},"unlisted":false,"prevItem":{"title":"Linux Firewall \u914d\u7f6e","permalink":"/blog/linux-Firewall"},"nextItem":{"title":"Linux crond","permalink":"/blog/linux-crond"}},"content":"Keepalived \u6784\u5efa\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684\u96c6\u7fa4\\n\x3c!-- truncate --\x3e\\n\\n\u53c2\u8003\u6587\u6863\uff1a\\n\\n- [\u6587\u6863\u5730\u5740](http://www.keepalived.org/doc/case_study_healthcheck.html)\\n\\n- [github \u5730\u5740](https://github.com/acassen/keepalived)\\n\\n  \u200b\\n\\n### \u4e00\u3001\u5b89\u88c5\\n\\n- `centos`\u4e0a\u5b89\u88c5\uff1a`yum install keepalived`\\n\\n- \u6e90\u7801\u5b89\u88c5\uff1a\\n\\n  ```shell\\n  wget http://www.keepalived.org/software/keepalived-1.2.24.tar.gz\\n  tar -zxvf keepalived-1.2.24.tar.gz\\n  cd keepalived-1.2.24\\n  ./configure --prefix=/usr/local/keepalived\\n  make && make install\\n  ```\\n\\n- `keepalived`\u542f\u52a8\u65f6\u4f1a\u4ece`/etc/keepalived`\u76ee\u5f55\u4e0b\u67e5\u627e`keepalived.conf`\u914d\u7f6e\u6587\u4ef6\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u6e90\u7801\u5b89\u88c5\u65f6\u662f\u6ca1\u6709`/etc/keepalived`\u8fd9\u4e2a\u6587\u4ef6\u5939\u7684\u3002\\n\\n- \u9700\u8981\u5c06\u914d\u7f6e\u6587\u4ef6\u62f7\u8d1d\u5230\u7cfb\u7edf\u5bf9\u5e94\u7684\u76ee\u5f55\u4e0b\\n\\n  ```shell\\n  shell> mkdir /etc/keepalived\\n  shell> cp /usr/local/keepalived/etc/keepalived.conf /etc/keepalived/keepalived.conf\\n  shell> cp /usr/local/keepalived/etc/rc.d/init.d/keepalived /etc/rc.d/init.d/keepalived\\n  shell> cp /usr/local/keepalived/etc/sysconfig/keepalived /etc/sysconfig/keepalived\\n  ```\\n\\n- \u4f7f\u7528\u547d\u4ee4\u4ecb\u7ecd\\n\\n  ```shell\\n  [root@dev_file keepalived]# service keepalived\\n  \u7528\u6cd5\uff1a/etc/init.d/keepalived {start|stop|status|restart|condrestart|try-restart|reload|force-reload}\\n  start:\u542f\u7528\\n  stop:\u505c\u6b62\\n  status:\u72b6\u6001\\n  restart:\u91cd\u542f\\n  ```\\n\\n- **\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c`keepalived`\u542f\u52a8\u65f6\u4e0d\u4f1a\u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u7684\u8bed\u6cd5\u662f\u5426\u6b63\u786e\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\u65f6\u8981\u7279\u522b\u5c0f\u5fc3\uff0c\u522b\u5199\u9519\u4e86\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u73b0\u8c61**\\n\\n- `service keepalived start` \u6267\u884c\u540e\u670d\u52a1\u4f1a\u52a0\u8f7d`/etc/keepalived/keepalived.conf`\u4e0b\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4f7f\u7528`-f` \u53c2\u6570\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\u3002\\n\\n### \u4e8c\u3001\u4f7f\u7528`Keepalived`\u5b9e\u73b0\u4e00\u4e2a\u6545\u969c\u8f6c\u79fb\u7684\u9ad8\u53ef\u7528\u670d\u52a1\\n\\n#### \uff11\u3001\u9700\u6c42\\n\\n- \u4e00\u4e2a`golang`\u7684\u670d\u52a1\u90e8\u7f72\u591a\u4e2a\u8282\u70b9\uff0c\u4e4b\u524d\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u73b0\u5728\u4e3a\u4e86\u9ad8\u53ef\u7528\u9700\u8981\u90e8\u7f72\u4e24\u4e2a\u8282\u70b9\\n- \u4e0d\u6253\u7b97\u4f7f\u7528`nginx`\\n\\n#### \uff12\u3001\u51c6\u5907\u5de5\u4f5c\\n\\n- \u4e09\u4e2a\u8282\u70b9\u6700\u5c11\u4e24\u53f0\u670d\u52a1\u5668\\n- \u4e09\u53f0\u5b89\u88c5\u4e86`keepalived`\u7684\u673a\u5668\\n\\n#### \uff13\u3001\u4f7f\u7528,`Keepalived`\u7684\u6240\u6709\u529f\u80fd\u90fd\u662f\u7531\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u7684\\n\\n- `keepalived`\u542f\u52a8\u4e4b\u540e\u7684\u65e5\u5fd7\u8def\u5f84\uff1a`/var/log/messages`\\n- `vip` \u865aip\u5730\u5740\u5728\u4e09\u53f0\u670d\u52a1\u5668\u4e2d\u53ea\u4f1a\u6709\u4e00\u53f0\u6709\uff0c`ip a` \u67e5\u770b\u662f\u5426\u6709\u865a`ips`\u662f\u5426\u751f\u6210\\n- \u5982\u4e0b\u4e3a`MASTER` \u914d\u7f6e\\n\\n```shell\\nvrrp_instance VI_1 { #vrrp\u5b9e\u4f8b\u540d\\n\\tstate MASTER # \u5b9e\u4f8b\u72b6\u6001,\u53ea\u6709MASTER\u548cBACKUP\u4e24\u79cd\u72b6\u6001\uff0c\u5e76\u4e14\u9700\u8981\u5168\u90e8\u5927\u5199\uff0c\u62a2\u5360\u6a21\u5f0f\u4e0b\uff0c\u5176\u4e2dMASTER\u4e3a\u5de5\u4f5c\u72b6\u6001\uff0cBACKUP\u4e3a\u5907\u7528\u72b6\u6001\uff0c\u5f53MASTER\u670d\u52a1\u5931\u6548\u65f6\uff0cBACKUP\u6240\u5728\u7684\u670d\u52a1\u4f1a\u81ea\u52a8\u628a\u5b83\u7684\u72b6\u6001\u7531BACKUP\u5207\u6362\u5230MASTER\u72b6\u6001,\u5f53\u5931\u6548\u7684MASTER\u6240\u5728\u7684\u670d\u52a1\u6062\u590d\u65f6\uff0cBACKUP\u4eceMASTER\u6062\u590d\u5230BACKUP\u72b6\u6001\\n\\tinterface eth0 # \u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\u7684\u7f51\u5361,\u5373vip\u7ed1\u5b9a\u7684\u7f51\u5361\u63a5\u53e3,\u5982:eth0,eth1\\n    virtual_router_id 01 #\u865a\u62df\u8def\u7531\u7684ID\u53f7\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bbe\u7f6e\u5fc5\u987b\u4e00\u6837\uff0c\u53ef\u9009\u62e9IP\u6700\u540e\u4e00\u6bb5\u4f7f\u7528\uff0c\u76f8\u540c\u7684 VRID \u4e3a\u4e00\u4e2a\u7ec4,\u4e00\u4e2akeepalived\u96c6\u7fa4\u8fd9\u4e2a\u503c\u5fc5\u987b\u4e00\u6837\\n\\tpriority 100 #\u8282\u70b9\u4f18\u5148\u7ea7\uff0c\u53d6\u503c\u8303\u56f40\uff5e254\uff0cMASTER\u8981\u6bd4BACKUP\u9ad8,\u503c\u8d8a\u5927\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\\n\\tadvert_int 1 # MASTER\u4e0eBACKUP\u8282\u70b9\u95f4\u540c\u6b65\u68c0\u67e5\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u79d2\\n\\tnopreempt # \u7981\u6b62\u62a2\u5360\u670d\u52a1\u3002\u9ed8\u8ba4\u60c5\u51b5\uff0c\u5f53MASTER\u670d\u52a1\u6302\u6389\u4e4b\u540e\uff0cBACKUP\u81ea\u52a8\u5347\u7ea7\u4e3aMASTER\u5e76\u63a5\u66ff\u5b83\u7684\u4efb\u52a1\uff0c\u5f53MASTER\u670d\u52a1\u6062\u590d\u540e\uff0c\u5347\u7ea7\u4e3aMASTER\u7684BACKUP\u670d\u52a1\u53c8\u81ea\u52a8\u964d\u4e3aBACKUP\uff0c\u628a\u5de5\u4f5c\u6743\u4ea4\u7ed9\u539fMASTER\u3002\u5f53\u914d\u7f6e\u4e86nopreempt\uff0cMASTER\u4ece\u6302\u6389\u5230\u6062\u590d\uff0c\u4e0d\u518d\u5c06\u670d\u52a1\u62a2\u5360\u8fc7\u6765\u3002\\n\\tauthentication {      #\u4f20\u9012\u4fe1\u606f\u7684\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u5bc6\u7801\u4ec5\u652f\u63018\u4f4d\\n    \\t\\tauth_type PASS # \u7c7b\u578b\u4e3b\u8981\u6709 PASS\u3001AH \u4e24\u79cd\\n    \\t\\tauth_pass 1111 # \u540c\u4e00vrrp \u5b9e\u4f8bMASTER\u4e0eBACKUP\u4f7f\u7528\u76f8\u540c\u7684\u5bc6\u7801\u624d\u80fd\u6b63\u5e38\u901a\u4fe1\\n\\t}\\n\\tvirtual_ipaddress { #\u865a\u62dfIP\u5730\u5740\u6c60\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aIP\uff0c\u6bcf\u4e2aIP\u5360\u4e00\u884c\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u5b50\u7f51\u63a9\u7801\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2aIP\u5fc5\u987b\u4e0e\u6211\u4eec\u7684\u8bbe\u5b9a\u7684vip\u4fdd\u6301\u4e00\u81f4\u3002\\n\\t\\t255.255.10.99\\n\\t\\t### \u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\\n\\t}\\n}\\nvirtual_server 255.255.10.99 80 {\u3000#\u865a\u62df\u670d\u52a1\u5668virtual_server\u5b9a\u4e49\u5757\\n\\tdelay_loop 10 #\u5065\u5eb7\u68c0\u67e5\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\uff1a\u79d2 \\n\\tlb_algo wrr # \u8d1f\u8f7d\u5747\u8861\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4e92\u8054\u7f51\u5e94\u7528\u5e38\u7528\u65b9\u5f0f\u4e3awlc\u6216rr\\n\\tlb_kind NAT # \u8d1f\u8f7d\u5747\u8861\u8f6c\u53d1\u89c4\u5219\u3002\u5305\u62ecDR\u3001NAT\u3001TUN3\u79cd\uff0c\u4e00\u822c\u4f7f\u7528\u8def\u7531\uff08DR\uff09\u8f6c\u53d1\u89c4\u5219\uff0cDR\u548cNAT\u6548\u7387\u6700\u9ad8\uff0c\u4f46\u662f\u6709\u4f7f\u7528\u573a\u666f\u9650\u5236\\n\\tpersistence_timeout 50 # http\u670d\u52a1\u4f1a\u8bdd\u4fdd\u6301\u65f6\u95f4\uff0c\u5355\u4f4d\uff1a\u79d2 \\n    protocol TCP # \u8f6c\u53d1\u534f\u8bae\uff0c\u5206\u4e3aTCP\u548cUDP\u4e24\u79cd\\n   \\t# \u4e0b\u9762\u7684\u914d\u7f6e\u7528\u6237\u68c0\u6d4b\u670d\u52a1\u6545\u969c\uff0c\u7136\u540e\u5254\u9664\u5230vrrp\u96c6\u7fa4\u4e2d\\n\\treal_server 255.255.10.203 8081 { #\u771f\u5b9e\u670d\u52a1\u5668IP\u548c\u7aef\u53e3\uff0c\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\\n\\t\\tweight 2\u3000# \u8d1f\u8f7d\u6743\u91cd\uff0c\u503c\u8d8a\u5927\uff0c\u8f6c\u53d1\u7684\u4f18\u5148\u7ea7\u8d8a\u9ad8 \\n\\t\\tHTTP_GET { # \u4f7f\u7528HTTP_GET\u6765\u68c0\u67e5\u670d\u52a1\u7684\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 TCP_CHECK\\n\\t\\t\\turl {\\n\\t\\t\\t\\tpath /beat\\n\\t\\t\\t\\tdigest 7bd3d5f5b3cdb13aed632121206e729c # \u8fd9\u4e2a\u503c\u662f\u4e00\u4e2amd5\u7684\u6c42\u548c\uff0c\u5b89\u88c5keepalived\u4e4b\u540e\u6709\u4e00\u4e2a\u5de5\u5177\u7528\u6765\u6c42\u548c\uff0c\\n\\t\\t\\t\\t# genhash -s 255.255.10.203 -p 8081 -u /beat \u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u53ef\u4ee5\u7b97\u51fadigest\u503c\\n\\t\\t\\t}\\n\\t\\t\\tconnect_timeout 3 #\u670d\u52a1\u8fde\u63a5\u8d85\u65f6\u65f6\u957f\uff0c\u5355\u4f4d\uff1a\u79d2 \\n            retry 3 # \u91cd\u8bd5\u6b21\u6570\\n            delay_before_retry 2 #\u91cd\u8bd5\u8fde\u63a5\u95f4\u9694\\n\\t\\t}\\n\\t}\\n\\t\\n\\treal_server 255.255.10.204 8081 { #\u53e6\u4e00\u4e2a\u8282\u70b9\\n                weight 2\\n                HTTP_GET {\\n                        url {\\n                                path /beat\\n                                digest 7bd3d5f5b3cdb13aed632121206e729c\\n                        }\\n                        connect_timeout 3\\n                        retry 3\\n                        delay_before_retry 2\\n                }\\n        }\\n}\\n```\\n\\n- \u5982\u4e0b\u4e3a`BACKUP`\u7684\u914d\u7f6e\\n\\n  ```shell\\n  vrrp_instance VI_1 {\\n          state  BACKUP # BACKUP\\n  \\t\\tinterface eth0\\n          virtual_router_id 01\\n          priority 99\u3000# \u6bd4master\u4e0b\\n          advert_int 1\\n  \\t\\tnopreempt\\n          authentication {      //\u4f20\u9012\u4fe1\u606f\u7684\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u5bc6\u7801\u4ec5\u652f\u63018\u4f4d\\n                  auth_type PASS\\n                  auth_pass 1111\\n          }\\n          virtual_ipaddress {\\n                  255.255.10.99\\n          }\\n  }\\n  virtual_server 255.255.10.99 8000 {\\n          delay_loop 6\\n          lb_algo wrr\\n          lb_kind NAT\\n          persistence_timeout 50\\n          protocol TCP\\n\\n          real_server 255.255.10.204 8081 {\\n                  weight 1\\n  \\t\\t\\t\\tHTTP_GET {\\n  \\t\\t\\t\\t\\turl {\\n  \\t\\t\\t\\t\\t\\tpath /beat\\n  \\t\\t\\t\\t\\t\\tdigest 7bd3d5f5b3cdb13aed632121206e729c\\n  \\t\\t\\t\\t\\t}\\n  \\t\\t\\t\\t\\tconnect_timeout 3\\n              \\t\\tretry 3\\n              \\t\\tdelay_before_retry 2\\n  \\t\\t\\t}\\n          }\\n  \\t\\treal_server 255.255.10.203 8081 {\\n                  weight 2\\n                  HTTP_GET {\\n                          url {\\n                                  path /beat\\n                                  digest 7bd3d5f5b3cdb13aed632121206e729c\\n                          }\\n                          connect_timeout 3\\n                          retry 3\\n                          delay_before_retry 2\\n                  }\\n          }\\n  }\\n  ```\\n\\n  \u200b\\n\\n\\n- \u65e5\u5fd7\u67e5\u770b\uff0c\u505c\u6b62`255.255.10.204 8081` \u4e0a\u7684\u670d\u52a1\uff0c\u5c31\u4f1a\u6253\u5370\u5982\u4e0b\u7684\u65e5\u5fd7\\n\\n  ```shell\\n  Mar 30 18:36:01 dev_file Keepalived_healthcheckers[23744]: Error connecting server [255.255.10.204]:8081.\\n  Mar 30 18:36:01 dev_file Keepalived_healthcheckers[23744]: Removing service [255.255.10.204]:8081 from VS [255.255.10.99]:80\\n  ```\\n\\n- \u65e5\u5fd7\u67e5\u770b\uff0c\u542f\u52a8`255.255.10.204 8081`\u670d\u52a1\uff0c\u6253\u5370\u5982\u4e0b\u65e5\u5fd7\\n\\n  ```shell\\n  Mar 30 18:36:49 dev_file Keepalived_healthcheckers[23744]: MD5 digest success to [255.255.10.204]:8081 url(1).\\n  Mar 30 18:36:59 dev_file Keepalived_healthcheckers[23744]: Remote Web server [255.255.10.204]:8081 succeed on service.\\n  Mar 30 18:36:59 dev_file Keepalived_healthcheckers[23744]: Adding service [255.255.10.204]:8081 to VS [255.255.10.99]:80\\n  ```\\n\\n\\n\\n## \u53c2\u8003\u6587\u6863\\n- [Linux\u670d\u52a1\u5668\u96c6\u7fa4\u7cfb\u7edf](http://www.linuxvirtualserver.org/zh/lvs1.html)\\n- [keepalived+lvs](http://www.linuxvirtualserver.org/docs/ha/keepalived.html)\\n- [\u5b98\u65b9\u4e2d\u6587\u6587\u6863](http://www.linuxvirtualserver.org/zh/)"},{"id":"linux-crond","metadata":{"permalink":"/blog/linux-crond","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2018-10-17-linux-crond.md","source":"@site/blog/2018-10-17-linux-crond.md","title":"Linux crond","description":"Linux \u5b9a\u65f6\u4efb\u52a1\u7f16\u5199\u6559\u7a0b.","date":"2018-10-17T00:00:00.000Z","tags":[{"inline":false,"label":"Linux","permalink":"/blog/tags/linux","description":"Linux"}],"readingTime":1.545,"hasTruncateMarker":true,"authors":[{"name":"Leng","title":"Softwore Developer","url":"https://github.com/lengrongfu","image_hrl":"https://avatars.githubusercontent.com/u/15009201?v=4","socials":{"github":"https://github.com/lengrongfu"},"key":"rongfu","page":null}],"frontMatter":{"slug":"linux-crond","title":"Linux crond","authors":["rongfu"],"tags":["Linux"]},"unlisted":false,"prevItem":{"title":"Linux Keepalived \u4f7f\u7528","permalink":"/blog/linux-Keepalived"}},"content":"`Linux` \u5b9a\u65f6\u4efb\u52a1\u7f16\u5199\u6559\u7a0b.\\n\\n\x3c!-- truncate --\x3e\\n## 1.\u5199\u5b9a\u65f6\u4efb\u52a1\u8981\u6267\u884c\u7684\u811a\u672c\\n\u5982:test.sh\\n\\n```shell\\n   vim test.sh\\n   echo \\"hello world\\"\\n```\\n\\n## 2.\u5199`crontab` \u8868\u8fbe\u5f0f\\n- \u67e5\u770b\u8868\u8fbe\u5f0f\u4e66\u5199\\n```shell\\ncat /etc/crontab\\n\\nSHELL=/bin/bash\\nPATH=/sbin:/bin:/usr/sbin:/usr/bin\\nMAILTO=root\\nHOME=/\\n\\n# For details see man 4 crontabs\\n\\n# Example of job definition:\\n# .---------------- minute (0 - 59)\\n# |  .------------- hour (0 - 23)\\n# |  |  .---------- day of month (1 - 31)\\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\\n# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\\n# |  |  |  |  |\\n# *  *  *  *  * user-name command to be executed\\n```\\n\\n- \u547d\u4ee4\u4f7f\u7528\\n\\n```shell\\n\\ncrontab -u //\u8bbe\u5b9a\u67d0\u4e2a\u7528\u6237\u7684cron\u670d\u52a1\uff0c\u4e00\u822croot\u7528\u6237\u5728\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u7684\u65f6\u5019\u9700\u8981\u6b64\u53c2\u6570\\ncrontab -l //\u5217\u51fa\u67d0\u4e2a\u7528\u6237cron\u670d\u52a1\u7684\u8be6\u7ec6\u5185\u5bb9\\ncrontab -r //\u5220\u9664\u6ca1\u4e2a\u7528\u6237\u7684cron\u670d\u52a1\\ncrontab -e //\u7f16\u8f91\u67d0\u4e2a\u7528\u6237\u7684cron\u670d\u52a1\\n\\n\\n```\\n\\n\u5982:\\n\\n```shell\\ncrontab -e \u8fdb\u5165\u7f16\u8f91\u9875\u9762\\n\\n0 03 * * * /bin/bash test.sh\\n\\n\u6bcf\u5929\u51cc\u6668\u4e09\u70b9\u6267\u884c\u8fd9\u4e2a\u811a\u672c\\n\\n\\n```\\n\\n- \u670d\u52a1\u4f7f\u7528\u547d\u4ee4\\n- \u5e2e\u52a9\\n```shell\\n$ service crond\\n\u7528\u6cd5\uff1a/etc/init.d/crond {start|stop|status|restart|condrestart|try-restart|reload|force-reload}\\n```\\n \\n```shell\\nservice crond start //\u542f\u52a8\u670d\u52a1\\nservice crond stop //\u5173\u95ed\u670d\u52a1\\nservice crond restart //\u91cd\u542f\u670d\u52a1\\nservice crond reload //\u91cd\u65b0\u8f7d\u5165\u914d\u7f6e\\nservice crond status //\u67e5\u8be2\u8fd0\u884c\u72b6\u6001\\n\\n```"}]}}')}}]);