{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2021-05-21-技术写作-第一节/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"e0fe36ec-234b-5407-b8f7-a1a29a553f52","excerpt":"…","html":"<blockquote>\n<p>本文是学习<a href=\"https://developers.google.com/tech-writing\"><code class=\"language-text\">Google</code>技术写作课程</a>的学习笔记，它这个课程主要用于指导我们如何做好技术写作，了解如何计划和编写技术文档；</p>\n</blockquote>\n<p>本课程是技术写作中的第一课，主要学习技术写作的关键基础，在学校任何其他课程之前，请先学习本课程。</p>\n<h3>学习目标</h3>\n<p>​\t\t首先我们确定学习的目标，知道学习完本课程之后可以得到什么；本课程教我们技术协作的基础，完成本课程后，我们就知道如何执行如下的操作了。</p>\n<ul>\n<li>始终使用专业术语（包括缩写词和首字母缩写词）；比如<code class=\"language-text\">K8s</code>中的最小调度单元<code class=\"language-text\">Pod</code>。</li>\n<li>识别并尽量减少使用代词的句子。</li>\n<li>区分主动语句和被动语句。</li>\n<li>确定主动语句优于被动语句的三种方式。</li>\n<li>制定至少三种形式，使句子更清晰，更加引人入胜。</li>\n<li>制定至少四种缩短句子的策略。</li>\n<li>了解项目符号列表和编号列表之间的区别。</li>\n<li>创建有用的列表。</li>\n<li>为段落创建有效的主要句子。</li>\n<li>将每个段落集中在一个主题上。</li>\n<li>在每个文档的开头说明要点。</li>\n<li>确定你的目标受众。</li>\n<li>确定你的目标受众已知什么以及需要学习什么。</li>\n<li>了解知识的灾难。</li>\n<li>识别和修订成语。</li>\n<li>说明文档的范围目标和受众。</li>\n<li>将较长的主题分为适当的部分。</li>\n<li>真确使用标点符号，包括括号、冒号、破折号和分号。</li>\n<li>在<code class=\"language-text\">Markdown</code>中发展初学者的能力。</li>\n</ul>\n<p>​\t\t成为一名优秀的工程师和一名出色的技术作家，需要花费多年的专注实践，本课程将提高我们的技术写作水平，但不会使我们变成一名出色的技术作家。</p>\n<h3>足够的语法</h3>\n<p>这里主要是介绍与本课程相关的词性。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">词性</th>\n<th>定义</th>\n<th align=\"left\">例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">名词</td>\n<td>人，地方，概念或事物</td>\n<td align=\"left\"><strong>山姆</strong>跑<strong>比赛</strong>。</td>\n</tr>\n<tr>\n<td align=\"center\">代词</td>\n<td>替换另一个名词（或更大结构）的名词</td>\n<td align=\"left\">山姆参加比赛。<strong>他</strong>喜欢竞争。</td>\n</tr>\n<tr>\n<td align=\"center\">形容词</td>\n<td>修饰名词的单词或短语</td>\n<td align=\"left\">山姆穿<strong>蓝色的</strong>鞋子。</td>\n</tr>\n<tr>\n<td align=\"center\">动词</td>\n<td>一个动作词或短语</td>\n<td align=\"left\">山姆<strong>跑</strong>比赛。</td>\n</tr>\n<tr>\n<td align=\"center\">副词</td>\n<td>修饰动词，形容词或其他副词的单词或短语</td>\n<td align=\"left\">山姆运行<strong>缓慢</strong>。</td>\n</tr>\n<tr>\n<td align=\"center\">介词</td>\n<td>指定两个名词的位置关系的单词或短语</td>\n<td align=\"left\">山姆的运动鞋很少<strong>在</strong>他的架子上。</td>\n</tr>\n<tr>\n<td align=\"center\">连词</td>\n<td>连接两个名词或短语的单词</td>\n<td align=\"left\">山姆的奖杯<strong>和</strong>缎带只存在于他的想象中。</td>\n</tr>\n<tr>\n<td align=\"center\">过渡</td>\n<td>连接两个句子的单词或短语</td>\n<td align=\"left\">山姆每周参加比赛。<strong>但是</strong>，他弱势地完成了比赛。</td>\n</tr>\n</tbody>\n</table>\n<h4>名词</h4>\n<p>名次代表人、地方或事务。朱迪、南极洲和锤子都是名词，无形的概念（例如<strong>健壮性</strong> 和<strong>完美性</strong>）也是名词。</p>\n<blockquote>\n<p>在<strong>框架中</strong>，<strong>对象</strong>必须复制该<strong>对象</strong>要更改的所有基础<strong>值</strong>。该<strong>PROTOS</strong>的<strong>代码库</strong>是巨大的，所以复制的<strong>PROTOS</strong>是不可接受的昂贵。</p>\n</blockquote>\n<p>在编程中，我们会把类和变量视为名词。</p>\n<p><strong>练习</strong></p>\n<p>找出下面段落中识别六个名词</p>\n<blockquote>\n<p>C使程序员能够控制指针和内存。强大的功能带来巨大的责任。</p>\n</blockquote>\n<p><strong>答案</strong></p>\n<blockquote>\n<p>C、指针、内存、程序员、功能、责任。</p>\n</blockquote>\n<h4>代词</h4>\n<p>代词是一个间接层，它指向或替代了其他名词或句子。例如，考虑以下两个句子：</p>\n<blockquote>\n<p>珍妮特（Janet）编写了出色的代码。<strong>她</strong>是高级工程师。</p>\n</blockquote>\n<p>在前面的示例中，第一句话将<strong>Janet</strong>建立为名词。第二句话用代词<strong>她</strong>代替名词<strong>珍妮特</strong>。</p>\n<p><strong>练习</strong></p>\n<p>在以下段落中确定三个代词：</p>\n<blockquote>\n<p>自助餐厅的特色是在吐司上撒上腰果、黄油和果酱。员工们发现它很棒，希望他们每天都能吃它。</p>\n</blockquote>\n<p><strong>答案</strong></p>\n<blockquote>\n<p>它很棒: 它代指前面描述的在吐司上撒上腰果、黄油和果酱的食物。</p>\n<p>他们每天吃：他们指代前面的员工。</p>\n<p>吃它：它代指前面描述的食物</p>\n</blockquote>\n<h4>动词</h4>\n<p>动词是一个动作词或短语。当您要表示两个名词（一个演员和一个目标）之间的关系时，该动词会起作用。动词标识演员对目标的作用。</p>\n<p>每个句子必须至少包含一个动词。例如，以下每个句子包含一个动词：</p>\n<ul>\n<li>酒井<strong>更喜欢</strong>意大利面。</li>\n<li>里克<strong>喜欢</strong>大海。</li>\n<li>蓝精灵<strong>是</strong>蓝色的。</li>\n<li>杰西<strong>患有</strong>过敏症。</li>\n</ul>\n<p><strong>练习</strong></p>\n<p>在下面句子中找到动词：</p>\n<blockquote>\n<p>萨曼莎（Samantha）正在用C ++编写“斗牛行动”。该项目目前消耗超过80,000行代码。她以前使用过Python，但最近开始使用C ++。萨曼莎（Samantha）领导着一个由四名软件工程师组成的团队，该团队将在下个季度增长到六名软件工程师</p>\n</blockquote>\n<p><strong>答案</strong></p>\n<blockquote>\n<p>编写、消耗、领导、增长</p>\n</blockquote>\n<h4>形容词和副词</h4>\n<p>形容词修饰名词。</p>\n<ul>\n<li>汤姆喜欢<strong>红</strong>气球。他准备<strong>美味的</strong>食物。他修复了 <strong>八个</strong>错误。</li>\n</ul>\n<p>副词修饰动词。</p>\n<ul>\n<li>Jane可以<strong>有效地</strong>修复错误。</li>\n</ul>\n<p><strong>练习</strong></p>\n<p>在以下段落中确定四个形容词。</p>\n<blockquote>\n<p>对于有才华的人来说，工程是一个伟大的事业。我认识一位聪明的工程师，可以在任何知识性的工作中脱颖而出。</p>\n</blockquote>\n<p><strong>答案</strong></p>\n<blockquote>\n<p>才华、聪明、知识性、伟大</p>\n</blockquote>\n<h4>连词和过渡</h4>\n<p>连词连接短语或名词中的句子，过渡将句子本身连起来。</p>\n<p>最重要的连接词如下：</p>\n<ul>\n<li>和</li>\n<li>但</li>\n<li>或者</li>\n</ul>\n<p>技术写作中最重要的过渡词如下：</p>\n<ul>\n<li>然而</li>\n<li>所以</li>\n<li>例如</li>\n</ul>\n<p><strong>练习</strong></p>\n<blockquote>\n<p>通常，Barbara在编写第一行代码之前会研究问题很长时间。_____________，前几天她突然受到启发时，自发地编码了一种方法。</p>\n</blockquote>\n<p><strong>答案</strong></p>\n<blockquote>\n<p>然而</p>\n</blockquote>\n<h3>单词</h3>\n<h4>定义新术语</h4>\n<p>在编写时，识别目标受众可能不熟悉的术语，当识别出来之后，需要采取下面两种措施：</p>\n<ul>\n<li>如果该术语已经存在，请链接到现有的良好说明。（不要重新发明轮子。）</li>\n<li>如果是新引入的术语，需要定义它，如果引入多个术语，请定义收集到词汇表中。</li>\n</ul>\n<h4>始终使用术语</h4>\n<p>在同一个文档中使用相同的术语，否则会让看的人疑惑。</p>\n<h4>正确使用首字母缩写</h4>\n<p>在正文中首次使用首字母缩写时，请拼写完整的术语，然后将首字母缩写词放在括号中，首字母缩写词用黑体字体标出。然后就可以在后续使用同名的首字母缩写词了。</p>\n<h3>歧义代词</h3>\n<p>​\t\t许多代词都是指代前文中的名词，这种代词像编程中的指针，往往容易引入错误；在文中，尽量避免使用代词，只需要重用名词即可。可以在如下的几种情况中使用代词。</p>\n<ul>\n<li>引入名词后使用代词；在介绍名词之前，请勿使用代词。</li>\n<li>代词应尽可能靠近指代名词，通常，如果名词和代词的距离超过五个单词，就请考虑重用名词。</li>\n<li>如果在名词和代词之间引入第二名词，请重用名词，而不要使用代词。</li>\n</ul>\n<h4>它和他们</h4>\n<p>这两个代词在技术文档中引起最大的混乱：</p>\n<ul>\n<li>它<code class=\"language-text\">It</code></li>\n<li>他们<code class=\"language-text\">they、them、their</code></li>\n</ul>\n<p>下面句子中的<strong>它</strong>就是一个不确定的代词。</p>\n<blockquote>\n<p>Python是解释形语言，而C ++是编译形语言，。<strong>它</strong>具有很多追随者。</p>\n</blockquote>\n<h4>这个和那个</h4>\n<ul>\n<li>这<code class=\"language-text\">This</code></li>\n<li>那<code class=\"language-text\">That</code></li>\n</ul>\n<p>下面句子中的<strong>这</strong>就不清楚代之<code class=\"language-text\">Frambus</code>还是<code class=\"language-text\">Foo</code>。</p>\n<blockquote>\n<p>您可以使用<code class=\"language-text\">Frambus</code>或<code class=\"language-text\">Foo</code>来计算导数。<strong>这</strong>不是最佳的。</p>\n</blockquote>\n<h3>主动语态</h3>\n<p>优先使用主动语态而不是被动语态：</p>\n<h3>清晰的句子</h3>\n<p>在技术写作中，文章写的清晰明了要优于其它规则；下面提供了几种可以使文章清晰明了的方法。</p>\n<h4>选择有效的动词</h4>\n<p>​\t\t大多数技术作家都认为动词是句子中最重要的部分，选择正确的使用动词更会产生令人满意的结果。</p>\n<p>要吸引和让读者学习，请选择精确、有力，特定的动词。减少使用不精确、通用的动词，如：</p>\n<ul>\n<li><code class=\"language-text\">be</code>动词：is，are，am，was，are等。</li>\n<li>发生</li>\n</ul>\n<h3>简短的句子</h3>\n<p>出于一大原因，我们会在写技术文档时把句子写的足够间断：</p>\n<ul>\n<li>简短的句子阅读起来更快。</li>\n<li>简短的句子通常更容易维护。</li>\n<li>较长的句子会让自己更难理解。</li>\n</ul>\n<p>我们可以通过如下几点来把长句子变为短句：</p>\n<ul>\n<li>每个句子都只表达一个想法。</li>\n<li>将一些长句子转换为列表。</li>\n</ul>\n<blockquote>\n<p><strong>原句</strong></p>\n<p>如：要更改循环的常规流程，可以使用<strong>break</strong>语句（使您跳出当前循环）或<strong>continue</strong>语句（跳过当前循环的当前迭代的其余部分）。</p>\n<p><strong>修改如下</strong></p>\n<p>要更改循环的通常流程，请调用以下语句之一：</p>\n<ul>\n<li><code class=\"language-text\">break</code>，使您跳出当前循环。</li>\n<li><code class=\"language-text\">continue</code>，跳过当前循环的当前迭代的其余部分。</li>\n</ul>\n</blockquote>\n<ul>\n<li>\n<p>减少使用重复的单词</p>\n</li>\n<li>\n<p>减少从属子句。</p>\n</li>\n</ul>\n<h3>列表和表格</h3>\n<p>好的列表可以把混乱的技术内容转变为有序的事物，技术读者通常喜欢列表。</p>\n<h4>选择正确的列表类型</h4>\n<p>下面的列表在技术写作中经常被使用：</p>\n<ul>\n<li>项目列表。</li>\n</ul>\n<blockquote>\n<p>如：Bash提供以下字符串操作机制：</p>\n<ul>\n<li>从字符串开头删除子字符串</li>\n<li>将整个文件读入一个字符串变量</li>\n</ul>\n</blockquote>\n<ul>\n<li>数字编号列表。</li>\n</ul>\n<blockquote>\n<p>如：请执行以下步骤来重新配置服务器：</p>\n<ol>\n<li>停止服务器。</li>\n<li>编辑配置文件。</li>\n<li>重新启动服务器。</li>\n</ol>\n</blockquote>\n<ul>\n<li>潜入编号清单。</li>\n</ul>\n<p>​\t\t项目列表和编号列表的区别，使用项目列表的时候，重新排列项目列表中的内容，则列表的含义<strong>不会改变</strong>；使用编号列表是，重新排列编号列表中的内容，则列表的含义会<strong>改变</strong>。</p>\n<h4>保持列表项一致</h4>\n<p>列表项一致是指列表中描述每一项都使用一样的词性、标点、句子结构（如都是主动句）。</p>\n<p>如下面句子就是列表项一致的：</p>\n<ul>\n<li>萝卜</li>\n<li>土豆</li>\n<li>卷心菜</li>\n</ul>\n<p>下面的句子就是列表项不一致的：</p>\n<ul>\n<li>萝卜</li>\n<li>土豆</li>\n<li>夏日的阳光遮掩了冬天的所有回忆。</li>\n</ul>\n<h4>创建有用的表</h4>\n<p>大家对于表的展示信息会更加的关注。</p>\n<p>使用表时，请注意以下几点：</p>\n<ul>\n<li>每一列的标题都要取的有意义，不要让读者去猜测。</li>\n<li>每个单元格中不要放入过多的内容，如果超过两行，就需要仔细想一是否需要。</li>\n<li>争取每个列之间是相关性的。</li>\n</ul>\n<h4>使用表和列表前</h4>\n<p>​\t在使用表和列表前加上一句话，告诉读者表格或者列表是要说明什么，然后用<strong>冒号</strong>来终止介绍语句。</p>\n<h3>段落</h3>\n<blockquote>\n<p>写作的工作：弄清主题各部分之间的依赖关系，并按逻辑的顺序呈现出来，使读者能够理解。</p>\n</blockquote>\n<h4>写一个好的开头</h4>\n<p>​\t\t开头句子是段落中最重要的部分，好的开头确定了段落的中心思想。</p>\n<h4>每一段都只写一个主题</h4>\n<p>​\t\t一段应只写一个主题，将每个段落都只写一个主题，不要描述之前的话题或者是之后的话题。</p>\n<h4>段落不要太长也不要太短</h4>\n<p>​\t\t段落太长让看的人第一映像是恐惧，读者更喜欢包含三到五个句子的段落，但会避免包含超过七个句子的段落。</p>\n<h4>一个段落要提供什么</h4>\n<p>​\t\t好的段落可以回答三个问题：</p>\n<ul>\n<li>你想告诉读者什么东西？</li>\n<li>读者为什么知道这点很重要？</li>\n<li>读者应该如何使用这些知识。</li>\n</ul>\n<h3>受众</h3>\n<h4>如何定义受众</h4>\n<p>我们通过简单的方式来确定受众；首先确定受众的角色，示例角色包括：</p>\n<ul>\n<li>软件工程师</li>\n<li>技术非工程师角色</li>\n<li>科学家们</li>\n<li>科学领域的专业人才</li>\n<li>本科生</li>\n<li>研究生</li>\n<li>非技术职位</li>\n</ul>\n<h4>确定受众需要学习内容</h4>\n<p>​\t\t在写文章之前最好能确定受众需要掌握什么知识才能更好的读懂本文，可以把受众需要掌握的以列表的形式列出来。</p>\n<h3>文档</h3>\n<p>​\t\t需要把所有的段落组织成一个连贯的文档。</p>\n<h4>声明文档范围</h4>\n<p>​\t\t一个好的文档应该要说明它要说明的主题，以及不会说明什么；如下：</p>\n<blockquote>\n<p>本文档描述了Project Frambus的总体设计；本文档未介绍相关技术Froobus项目的设计。</p>\n</blockquote>\n<p>​\t\t说明文档的范围不仅能使读者受益，也能让作者受益。在编写时，可以时刻参考自己定义的文档范围并修正。</p>\n<h3>Markdown</h3>\n<p>​\t\t<code class=\"language-text\">Markdown</code>是一种轻量级的标记语言，许多技术专业人员都是用它来创建和编辑技术文档，使用<code class=\"language-text\">Markdown</code>，通过插入特殊符号用来标示标题、粗体、列表等。</p>","frontmatter":{"title":"技术写作 第一课","date":"May 21, 2021","description":"本文是学习Google技术写作课程的学习笔记，它这个课程主要用于指导我们如何做好技术写作，了解如何计划和编写技术文档；"}},"previous":{"fields":{"slug":"/2021-05-19-分布式云/"},"frontmatter":{"title":"2020年十大战略技术趋势：分布式云"}},"next":{"fields":{"slug":"/2021-05-24-代码质量好坏如何评判/"},"frontmatter":{"title":"代码质量好坏如何评判"}}},"pageContext":{"id":"e0fe36ec-234b-5407-b8f7-a1a29a553f52","previousPostId":"8019f775-6e65-5464-971f-f2a5de077a30","nextPostId":"07f5bf5b-b071-5003-86a9-d98960460254"}},
    "staticQueryHashes": ["2841359383","3257411868"]}