{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-10-17-linux-Firewall/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"7856ea72-5488-5d61-8b47-b6ee3a50a642","excerpt":"主要用于一下,用于以上. Firewall FirewallD 是 iptables 的前端控制器，用于实现持久的网络流量规则。它提供命令行和图形界面，在大多数 Linux 发行版的仓库中都有。与直接控制 iptables 相比，使用 FirewallD 有两个主要区别： 1、FirewallD…","html":"<blockquote>\n<p><code class=\"language-text\">iptables</code> 主要用于<code class=\"language-text\">centos 7</code>一下,<code class=\"language-text\">Firewall</code>用于<code class=\"language-text\">centos7</code>以上.</p>\n</blockquote>\n<h1>Firewall</h1>\n<p>FirewallD 是 iptables 的前端控制器，用于实现持久的网络流量规则。它提供命令行和图形界面，在大多数 Linux 发行版的仓库中都有。与直接控制 iptables 相比，使用 FirewallD 有两个主要区别：</p>\n<p>1、FirewallD 使用区域和服务而不是链式规则。</p>\n<p>2、它动态管理规则集，允许更新规则而不破坏现有会话和连接。</p>\n<p>FirewallD 是 iptables 的一个封装，可以让你更容易地管理 iptables 规则 - 它并不是 iptables 的替代品。虽然 iptables 命令仍可用于 FirewallD，但建议使用 FirewallD 时仅使用 FirewallD 命令。</p>\n<p>本指南将向您介绍 FirewallD 的区域和服务的概念，以及一些基本的配置步骤。</p>\n<h2>安装与管理 FirewallD</h2>\n<p>CentOS 7 和 Fedora 20+ 已经包含了 FirewallD，但是默认没有激活。可以像其它的 systemd 单元那样控制它。</p>\n<p>1、 启动服务，并在系统引导时启动该服务：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> systemctl start firewalld\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> firewalld</code></pre></div>\n<p>要停止并禁用：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> systemctl stop firewalld\n<span class=\"token function\">sudo</span> systemctl disable firewalld</code></pre></div>\n<p>2、 检查防火墙状态。输出应该是 running 或者 not running。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --state</code></pre></div>\n<p>3、 要查看 FirewallD 守护进程的状态：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> systemctl status firewalld\n示例输出\n\nfirewalld.service - firewalld - dynamic firewall daemon\n   Loaded: loaded <span class=\"token punctuation\">(</span>/usr/lib/systemd/system/firewalld.service<span class=\"token punctuation\">;</span> disabled<span class=\"token punctuation\">)</span>\n   Active: active <span class=\"token punctuation\">(</span>running<span class=\"token punctuation\">)</span> since Wed <span class=\"token number\">2015</span>-09-02 <span class=\"token number\">18</span>:03:22 UTC<span class=\"token punctuation\">;</span> 1min 12s ago\n Main PID: <span class=\"token number\">11954</span> <span class=\"token punctuation\">(</span>firewalld<span class=\"token punctuation\">)</span>\n   CGroup: /system.slice/firewalld.service\n   └─11954 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid</code></pre></div>\n<p>4、 重新加载 FirewallD 配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --reload</code></pre></div>\n<h2>配置 FirewallD</h2>\n<p>FirewallD 使用 XML 进行配置。除非是非常特殊的配置，你不必处理它们，而应该使用 firewall-cmd。</p>\n<p>配置文件位于两个目录中：</p>\n<ul>\n<li><code class=\"language-text\">/usr/lib/FirewallD</code> 下保存默认配置，如默认区域和公用服务。 避免修改它们，因为每次 firewall 软件包更新时都会覆盖这些文件。</li>\n<li><code class=\"language-text\">/etc/firewalld</code> 下保存系统配置文件。 这些文件将覆盖默认配置。</li>\n</ul>\n<h2>配置集</h2>\n<p><code class=\"language-text\">FirewallD</code> 使用两个配置集：“运行时”和“持久”。 在系统重新启动或重新启动 <code class=\"language-text\">FirewallD</code> 时，不会保留运行时的配置更改，而对持久配置集的更改不会应用于正在运行的系统。</p>\n<p>默认情况下，<code class=\"language-text\">firewall-cmd</code> 命令适用于运行时配置，但使用 <code class=\"language-text\">--permanent</code> 标志将保存到持久配置中。要添加和激活持久性规则，你可以使用两种方法之一。</p>\n<p>1、 将规则同时添加到持久规则集和运行时规则集中。 </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http --permanent\n<span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http</code></pre></div>\n<p>2、 将规则添加到持久规则集中并重新加载 FirewallD。 </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http --permanent\n<span class=\"token function\">sudo</span> firewall-cmd --reload</code></pre></div>\n<p><em><code class=\"language-text\">reload</code> 命令会删除所有运行时配置并应用永久配置。因为 firewalld 动态管理规则集，所以它不会破坏现有的连接和会话。</em></p>\n<h2>防火墙的区域</h2>\n<p>“区域”是针对给定位置或场景（例如家庭、公共、受信任等）可能具有的各种信任级别的预构建规则集。不同的区域允许不同的网络服务和入站流量类型，而拒绝其他任何流量。 首次启用 FirewallD 后，public 将是默认区域。</p>\n<p>区域也可以用于不同的网络接口。例如，要分离内部网络和互联网的接口，你可以在 internal 区域上允许 DHCP，但在external 区域仅允许 HTTP 和 SSH。未明确设置为特定区域的任何接口将添加到默认区域。</p>\n<p>要找到默认区域： </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --get-default-zone</code></pre></div>\n<p>要修改默认区域：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --set-default-zone<span class=\"token operator\">=</span>internal</code></pre></div>\n<p>要查看你网络接口使用的区域：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --get-active-zones</code></pre></div>\n<p>示例输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">public\n  interfaces: eth0</code></pre></div>\n<p>要得到特定区域的所有配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --list-all</code></pre></div>\n<p>示例输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">public <span class=\"token punctuation\">(</span>default, active<span class=\"token punctuation\">)</span>\n  interfaces: ens160\n  sources:\n  services: dhcpv6-client http <span class=\"token function\">ssh</span>\n  ports: <span class=\"token number\">12345</span>/tcp\n  masquerade: no\n  forward-ports:\n  icmp-blocks:\n  rich rules:</code></pre></div>\n<p>要得到所有区域的配置： </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --list-all-zones</code></pre></div>\n<p>示例输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">block\n  interfaces:\n  sources:\n  services:\n  ports:\n  masquerade: no\n  forward-ports:\n  icmp-blocks:\n  rich rules:\n  <span class=\"token punctuation\">..</span>.\nwork\n  interfaces:\n  sources:\n  services: dhcpv6-client ipp-client <span class=\"token function\">ssh</span>\n  ports:\n  masquerade: no\n  forward-ports:\n  icmp-blocks:\n  rich rules:</code></pre></div>\n<h2>与服务一起使用</h2>\n<p><code class=\"language-text\">FirewallD</code> 可以根据特定网络服务的预定义规则来允许相关流量。你可以创建自己的自定义系统规则，并将它们添加到任何区域。 默认支持的服务的配置文件位于 <code class=\"language-text\">/usr/lib /firewalld/services</code>，用户创建的服务文件在 <code class=\"language-text\">/etc/firewalld/services</code> 中。</p>\n<p>要查看默认的可用服务：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --get-services</code></pre></div>\n<p>比如，要启用或禁用 HTTP 服务： </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http --permanent\n<span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --remove-service<span class=\"token operator\">=</span>http --permanent</code></pre></div>\n<p>允许或者拒绝任意端口/协议\n比如：允许或者禁用 12345 端口的 TCP 流量。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-port<span class=\"token operator\">=</span><span class=\"token number\">12345</span>/tcp --permanent\n<span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --remove-port<span class=\"token operator\">=</span><span class=\"token number\">12345</span>/tcp --permanent</code></pre></div>\n<p>端口转发\n下面是在同一台服务器上将 80 端口的流量转发到 12345 端口。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span><span class=\"token string\">\"public\"</span> --add-forward-port<span class=\"token operator\">=</span>port<span class=\"token operator\">=</span><span class=\"token number\">80</span>:proto<span class=\"token operator\">=</span>tcp:toport<span class=\"token operator\">=</span><span class=\"token number\">12345</span></code></pre></div>\n<p>要将端口转发到另外一台服务器上：</p>\n<p>1、 在需要的区域中激活 masquerade。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-masquerade</code></pre></div>\n<p>2、 添加转发规则。例子中是将本地的 80 端口的流量转发到 IP 地址为 ：123.456.78.9 的远程服务器上的  8080 端口。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span><span class=\"token string\">\"public\"</span> --add-forward-port<span class=\"token operator\">=</span>port<span class=\"token operator\">=</span><span class=\"token number\">80</span>:proto<span class=\"token operator\">=</span>tcp:toport<span class=\"token operator\">=</span><span class=\"token number\">8080</span>:toaddr<span class=\"token operator\">=</span><span class=\"token number\">123.456</span>.78.9</code></pre></div>\n<p>要删除规则，用 —remove 替换 —add。比如：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --remove-masquerade</code></pre></div>\n<p>用 <code class=\"language-text\">FirewallD</code> 构建规则集\n例如，以下是如何使用<code class=\"language-text\"> FirewallD</code> 为你的服务器配置基本规则（如果您正在运行 web 服务器）。</p>\n<p>将 <code class=\"language-text\">eth0</code> 的默认区域设置为 <code class=\"language-text\">dmz</code>。 在所提供的默认区域中，<code class=\"language-text\">dmz</code>（非军事区）是最适合于这个程序的，因为它只允许 <code class=\"language-text\">SSH</code> 和 <code class=\"language-text\">ICM</code>P。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --set-default-zone<span class=\"token operator\">=</span>dmz\n<span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>dmz --add-interface<span class=\"token operator\">=</span>eth0</code></pre></div>\n<p>2、 把 <code class=\"language-text\">HTTP</code> 和 <code class=\"language-text\">HTTS</code> 添加永久的服务规则到 <code class=\"language-text\">dmz</code> 区域中：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>dmz --add-service<span class=\"token operator\">=</span>http --permanent\n<span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>dmz --add-service<span class=\"token operator\">=</span>https --permanent</code></pre></div>\n<p> 3、 重新加载 <code class=\"language-text\">FirewallD</code> 让规则立即生效：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --reload</code></pre></div>\n<p> 如果你运行 <code class=\"language-text\">firewall-cmd --zone=dmz --list-all</code>， 会有下面的输出：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">dmz <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">)</span>\n  interfaces: eth0\n  sources:\n  services: http https <span class=\"token function\">ssh</span>\n  ports:\n  masquerade: no\n  forward-ports:\n  icmp-blocks:\n  rich rules:</code></pre></div>\n<p> 这告诉我们，<code class=\"language-text\">dmz</code> 区域是我们的默认区域，它被用于 <code class=\"language-text\">eth0</code> 接口中所有网络的源地址和端口。 允许传入 <code class=\"language-text\">HTTP</code>（端口 80）、<code class=\"language-text\">HTTPS</code>（端口 443）和 SSH（端口 22）的流量，并且由于没有 <code class=\"language-text\">IP</code> 版本控制的限制，这些适用于 <code class=\"language-text\">IPv4</code> 和 <code class=\"language-text\">IPv6</code>。 不允许IP 伪装以及端口转发。 我们没有 <code class=\"language-text\">ICMP</code> 块，所以 <code class=\"language-text\">ICMP</code> 流量是完全允许的。没有丰富Rich规则，允许所有出站流量。</p>\n<h2>高级配置</h2>\n<p>服务和端口适用于基本配置，但对于高级情景可能会限制较多。 丰富Rich规则和直接Direct接口允许你为任何端口、协议、地址和操作向任何区域 添加完全自定义的防火墙规则。</p>\n<h2>丰富规则</h2>\n<p>丰富规则的语法有很多，但都完整地记录在 <code class=\"language-text\">firewalld.richlanguage(5)</code> 的手册页中（或在终端中 man firewalld.richlanguage）。 使用 <code class=\"language-text\">--add-rich-rule</code>、<code class=\"language-text\">--list-rich-rules</code> 、 <code class=\"language-text\">--remove-rich-rule</code> 和 <code class=\"language-text\">firewall-cmd</code> 命令来管理它们。</p>\n<p>这里有一些常见的例子：</p>\n<p>允许来自主机 <code class=\"language-text\">192.168.0.14</code> 的所有 IPv4 流量。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-rich-rule <span class=\"token string\">'rule family=\"ipv4\" source address=192.168.0.14 accept'</span></code></pre></div>\n<p>拒绝来自主机 192.168.1.10 到 22 端口的 IPv4 的 TCP 流量。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-rich-rule <span class=\"token string\">'rule family=\"ipv4\" source address=\"192.168.1.10\" port port=22 protocol=tcp reject'</span></code></pre></div>\n<p>允许来自主机 10.1.0.3 到 80 端口的 IPv4 的 TCP 流量，并将流量转发到 6532 端口上。 </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-rich-rule <span class=\"token string\">'rule family=ipv4 source address=10.1.0.3 forward-port port=80 protocol=tcp to-port=6532'</span></code></pre></div>\n<p>将主机 172.31.4.2 上 80 端口的 IPv4 流量转发到 8080 端口（需要在区域上激活 <code class=\"language-text\">masquerade</code>）。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --zone<span class=\"token operator\">=</span>public --add-rich-rule <span class=\"token string\">'rule family=ipv4 forward-port port=80 protocol=tcp to-port=8080 to-addr=172.31.4.2'</span></code></pre></div>\n<p>列出你目前的丰富规则：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> firewall-cmd --list-rich-rules</code></pre></div>\n<p><code class=\"language-text\">iptables</code> 的直接接口\n对于最高级的使用，或对于 <code class=\"language-text\">iptables</code> 专家，<code class=\"language-text\">FirewallD</code> 提供了一个直接Direct接口，允许你给它传递原始 <code class=\"language-text\">iptables </code>命令。 直接接口规则不是持久的，除非使用 <code class=\"language-text\">--permanent</code>。</p>\n<p>要查看添加到 <code class=\"language-text\">FirewallD</code> 的所有自定义链或规则：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">firewall-cmd --direct --get-all-chains\nfirewall-cmd --direct --get-all-rules</code></pre></div>\n<p>讨论 <code class=\"language-text\">iptables</code> 的具体语法已经超出了这篇文章的范围。如果你想学习更多，你可以查看我们的 <code class=\"language-text\">iptables</code> 指南。</p>\n<h2>更多信息</h2>\n<ul>\n<li><a href=\"https://firewalld.org/\">FirewallD 官方网站</a></li>\n<li><a href=\"https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/7/html/security_guide/\">RHEL 7 安全指南：FirewallD 简介</a></li>\n</ul>\n<h1>iptables</h1>\n<ul>\n<li><code class=\"language-text\">root</code> 用户登录</li>\n<li>编辑防火墙文件</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">  <span class=\"token function\">cat</span> /etc/sysconfig/iptables</code></pre></div>\n<ul>\n<li>设置禁止进入</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"> -A INPUT -m state --state NEW -m tcp -p tcp -s <span class=\"token number\">10.1</span>.4.0/24 --dport <span class=\"token number\">5601</span> -j ACCEPT\n 解释: -s 可以访问的ip端\n       -dport <span class=\"token number\">5601</span> 可以访问此服务器上的某个端口，如果全部就不用设置这个参数 </code></pre></div>\n<ul>\n<li>命令 <code class=\"language-text\">service iptables </code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"> Usage: iptables <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>reload<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>condrestart<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>panic<span class=\"token operator\">|</span>save<span class=\"token punctuation\">}</span>\n 查询iptables状态: <span class=\"token function\">service</span> iptables status\n 重启iptables状态: <span class=\"token function\">service</span> iptables restart\n 启动iptables状态: <span class=\"token function\">service</span> iptables start\n 停止iptables状态: <span class=\"token function\">service</span> iptables stop</code></pre></div>\n<ul>\n<li>FORWAD</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">iptables -t nat -A PREROUTING -d 61.129.93.38 -p tcp -j DNAT --to-destination localhost:8080</code></pre></div>\n<p>iptables -t nat -A PREROUTING -d 61.129.93.38 -p tcp —dport 80 -j DNAT —to-destination 10.1.4.172:8080</p>","frontmatter":{"title":"linux-Firewall 配置","date":"October 17, 2018","description":null}},"previous":{"fields":{"slug":"/2018-10-17-linux-Keepalived/"},"frontmatter":{"title":"linux-Keepalived 使用"}},"next":{"fields":{"slug":"/2018-10-17-linux-recording-user-log/"},"frontmatter":{"title":"linux 记录操作记录"}}},"pageContext":{"id":"7856ea72-5488-5d61-8b47-b6ee3a50a642","previousPostId":"7994394f-2ca6-5aa6-a30b-b955f32f32d1","nextPostId":"49ad70d5-0913-567f-b6f3-a18390510a54"}},
    "staticQueryHashes": ["2841359383","3257411868"]}