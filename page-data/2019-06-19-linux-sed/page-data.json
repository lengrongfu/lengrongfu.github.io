{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2019-06-19-linux-sed/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"8d441f9e-8fed-525e-a069-61ff8b5d6144","excerpt":"Sed Command…","html":"<h1>Sed Command</h1>\n<p><code class=\"language-text\">sed</code>是一种流编辑器，它是文本处理中非常中的工具，能够完美的配合正则表达式使用，功能不同凡响。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”<code class=\"language-text\">（pattern space</code>），接着用<code class=\"language-text\">sed</code>命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。<code class=\"language-text\">Sed</code>主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。</p>\n<p><code class=\"language-text\">Sed</code>命令我目前主要是用在编写<code class=\"language-text\">dockerfile</code>时用于执行替换配置使用的，如果是这样的话，就不能用最小的<code class=\"language-text\">scratch</code>镜像，因为<code class=\"language-text\">sed</code>命令需要在有<code class=\"language-text\">sh</code>环境中执行，最小的就是<code class=\"language-text\">alpine</code>。</p>\n<p>当遇到不会使用的时在<code class=\"language-text\">Linux</code>系统上查看操作手册<code class=\"language-text\">man sed</code>.</p>\n<h2>替换文件中的内容</h2>\n<h3>文件内容如下</h3>\n<p>比如文件中的内容是<code class=\"language-text\">mysql</code>的配置，功能就是替换<code class=\"language-text\">mysql</code>的的配置。如下就是一个典型的<code class=\"language-text\">java</code>使用<code class=\"language-text\">mysql</code>的配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token comment\"># application.properties</span>\n<span class=\"token attr-name\">spring.datasource.druid.url</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">jdbc:mysql://127.0.0.1:3306/demo?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GM    T&amp;allowMultiQueries=true&amp;useSSL=false</span>\n<span class=\"token attr-name\">spring.datasource.druid.username</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">test</span>\n<span class=\"token attr-name\">spring.datasource.druid.password</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">test</span></code></pre></div>\n<h3>替换脚本如下</h3>\n<p>脚本功能就是用于替换上述数据中的<code class=\"language-text\">host</code>、<code class=\"language-text\">port</code>、<code class=\"language-text\">username</code>、<code class=\"language-text\">password</code>、<code class=\"language-text\">dbname</code>这些配置。</p>\n<p>如下是<code class=\"language-text\">Dockerfiele</code>文件内容.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">FROM alpine:3.9.4  \nENV <span class=\"token assign-left variable\">DB_USER</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token assign-left variable\">DB_HOST</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token assign-left variable\">DB_PASSWORD</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token assign-left variable\">DB_PORT</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token assign-left variable\">DB_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\nENTRYPOINT <span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/sh\"</span>,<span class=\"token string\">\"-c\"</span>,<span class=\"token string\">\"sh /docker-entrypoint.sh\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>如下就是执行的脚本<code class=\"language-text\">docker-entrypoint.sh</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token shebang important\">#! /bin/bash</span>\n<span class=\"token comment\"># 指定文件目录</span>\nAPPLICATION_NAME <span class=\"token operator\">=</span> <span class=\"token string\">\"./application.properties\"</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/\"</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/127.0.0.1:3306\\/demo/<span class=\"token variable\">${DB_HOST}</span>:<span class=\"token variable\">${DB_PORT}</span>\\/<span class=\"token variable\">${DB_NAME}</span>/g\"</span> <span class=\"token variable\">${APPLICATION_NAME}</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/spring.datasource.druid.username=test/spring.datasource.druid.username=<span class=\"token variable\">${DB_USER}</span>/g\"</span> <span class=\"token variable\">${APPLICATION_NAME}</span>\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/spring.datasource.druid.password=test/spring.datasource.druid.password=<span class=\"token variable\">${DB_PASSWORD}</span>/g\"</span> <span class=\"token variable\">${APPLICATION_NAME}</span>\n\njava -jar demo.java</code></pre></div>\n<p>如上就可以执行替换一些配置了。</p>\n<h2>使用Tips</h2>\n<ul>\n<li>可以通过命令行先进行验证。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/demo?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=GM\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">\"s/127.0.0.1:3306\\/demo/127.0.0.2:3307\\/test/g\"</span>\nspring.datasource.druid.url<span class=\"token operator\">=</span>jdbc:mysql://127.0.0.2:3307/test?autoReconnect<span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">useUnicode</span><span class=\"token operator\">=</span>true<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">characterEncoding</span><span class=\"token operator\">=</span>utf8<span class=\"token operator\">&amp;</span><span class=\"token assign-left variable\">serverTimezone</span><span class=\"token operator\">=</span>GM</code></pre></div>\n<p>验证好了在修改一下，上面的命令少了<code class=\"language-text\">-i</code>命令选项和文件名,<code class=\"language-text\">-i</code>就是用于修改本地文件的一个选项。</p>\n<ul>\n<li>匹配时尽量使用能唯一命中的</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">sed</span> <span class=\"token string\">\"s/spring.datasource.druid.password=test/spring.datasource.druid.password=<span class=\"token variable\">${DB_PASSWORD}</span>/g\"</span>\n$ <span class=\"token function\">sed</span> <span class=\"token string\">\"s/test/<span class=\"token variable\">${DB_PASSWORD}</span>/g\"</span></code></pre></div>\n<p>如上的两个匹配规则，第一个最好，第二个会把匹配到<code class=\"language-text\">test</code>的所有地方都更改调，所有最好使用唯一匹配规则。</p>\n<h2>参考</h2>\n<ul>\n<li><code class=\"language-text\">man sed</code></li>\n<li><a href=\"http://man.linuxde.net/sed\">man.net</a></li>\n</ul>","frontmatter":{"title":"linux sed","date":"June 19, 2019","description":null}},"previous":{"fields":{"slug":"/2019-06-18-Go-sync-package/"},"frontmatter":{"title":"Go sync package"}},"next":{"fields":{"slug":"/2019-07-03-Badger源码学习之-SkipList基础篇/"},"frontmatter":{"title":"Badger源码学习之-SkipList基础篇"}}},"pageContext":{"id":"8d441f9e-8fed-525e-a069-61ff8b5d6144","previousPostId":"88853dfc-d841-5d01-bb77-8c61a6352395","nextPostId":"6c780ea4-0ad8-5bcb-b7d9-d2bfe46357f6"}},
    "staticQueryHashes": ["2841359383","3257411868"]}