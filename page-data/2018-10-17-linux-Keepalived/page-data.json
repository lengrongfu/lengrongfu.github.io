{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-10-17-linux-Keepalived/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"7994394f-2ca6-5aa6-a30b-b955f32f32d1","excerpt":"Keepalived 构建一个高可用的集群 参考文档： 文档地址 github…","html":"<h1>Keepalived 构建一个高可用的集群</h1>\n<p>参考文档：</p>\n<ul>\n<li>\n<p><a href=\"http://www.keepalived.org/doc/case_study_healthcheck.html\">文档地址</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/acassen/keepalived\">github 地址</a></p>\n<p>​</p>\n</li>\n</ul>\n<h3>一、安装</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">centos</code>上安装：<code class=\"language-text\">yum install keepalived</code></p>\n</li>\n<li>\n<p>源码安装：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">wget</span> http://www.keepalived.org/software/keepalived-1.2.24.tar.gz\n<span class=\"token function\">tar</span> -zxvf keepalived-1.2.24.tar.gz\n<span class=\"token builtin class-name\">cd</span> keepalived-1.2.24\n./configure --prefix<span class=\"token operator\">=</span>/usr/local/keepalived\n<span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">keepalived</code>启动时会从<code class=\"language-text\">/etc/keepalived</code>目录下查找<code class=\"language-text\">keepalived.conf</code>配置文件，如果没有找到则使用默认的配置文件，使用源码安装时是没有<code class=\"language-text\">/etc/keepalived</code>这个文件夹的。</p>\n</li>\n<li>\n<p>需要将配置文件拷贝到系统对应的目录下</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">shell<span class=\"token operator\">></span> <span class=\"token function\">mkdir</span> /etc/keepalived\nshell<span class=\"token operator\">></span> <span class=\"token function\">cp</span> /usr/local/keepalived/etc/keepalived.conf /etc/keepalived/keepalived.conf\nshell<span class=\"token operator\">></span> <span class=\"token function\">cp</span> /usr/local/keepalived/etc/rc.d/init.d/keepalived /etc/rc.d/init.d/keepalived\nshell<span class=\"token operator\">></span> <span class=\"token function\">cp</span> /usr/local/keepalived/etc/sysconfig/keepalived /etc/sysconfig/keepalived</code></pre></div>\n</li>\n<li>\n<p>使用命令介绍</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">[</span>root@dev_file keepalived<span class=\"token punctuation\">]</span><span class=\"token comment\"># service keepalived</span>\n用法：/etc/init.d/keepalived <span class=\"token punctuation\">{</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>condrestart<span class=\"token operator\">|</span>try-restart<span class=\"token operator\">|</span>reload<span class=\"token operator\">|</span>force-reload<span class=\"token punctuation\">}</span>\nstart:启用\nstop:停止\nstatus:状态\nrestart:重启</code></pre></div>\n</li>\n<li>\n<p><strong>另外需要注意的一点是，<code class=\"language-text\">keepalived</code>启动时不会检查配置文件的语法是否正确，所以我们在编写配置文件时要特别小心，别写错了，否则会出现一些意想不到的现象</strong></p>\n</li>\n<li>\n<p><code class=\"language-text\">service keepalived start</code> 执行后服务会加载<code class=\"language-text\">/etc/keepalived/keepalived.conf</code>下的配置文件，可使用<code class=\"language-text\">-f</code> 参数指定配置文件的位置。</p>\n</li>\n</ul>\n<h3>二、使用<code class=\"language-text\">Keepalived</code>实现一个故障转移的高可用服务</h3>\n<h4>１、需求</h4>\n<ul>\n<li>一个<code class=\"language-text\">golang</code>的服务部署多个节点，之前只有一个节点，现在为了高可用需要部署两个节点</li>\n<li>不打算使用<code class=\"language-text\">nginx</code></li>\n</ul>\n<h4>２、准备工作</h4>\n<ul>\n<li>三个节点最少两台服务器</li>\n<li>三台安装了<code class=\"language-text\">keepalived</code>的机器</li>\n</ul>\n<h4>３、使用,<code class=\"language-text\">Keepalived</code>的所有功能都是由配置文件配置的</h4>\n<ul>\n<li><code class=\"language-text\">keepalived</code>启动之后的日志路径：<code class=\"language-text\">/var/log/messages</code></li>\n<li><code class=\"language-text\">vip</code> 虚ip地址在三台服务器中只会有一台有，<code class=\"language-text\">ip a</code> 查看是否有虚<code class=\"language-text\">ips</code>是否生成</li>\n<li>如下为<code class=\"language-text\">MASTER</code> 配置</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">vrrp_instance VI_1 <span class=\"token punctuation\">{</span> <span class=\"token comment\">#vrrp实例名</span>\n\tstate MASTER <span class=\"token comment\"># 实例状态,只有MASTER和BACKUP两种状态，并且需要全部大写，抢占模式下，其中MASTER为工作状态，BACKUP为备用状态，当MASTER服务失效时，BACKUP所在的服务会自动把它的状态由BACKUP切换到MASTER状态,当失效的MASTER所在的服务恢复时，BACKUP从MASTER恢复到BACKUP状态</span>\n\tinterface eth0 <span class=\"token comment\"># 对外提供服务的网卡,即vip绑定的网卡接口,如:eth0,eth1</span>\n    virtual_router_id 01 <span class=\"token comment\">#虚拟路由的ID号，每个节点设置必须一样，可选择IP最后一段使用，相同的 VRID 为一个组,一个keepalived集群这个值必须一样</span>\n\tpriority <span class=\"token number\">100</span> <span class=\"token comment\">#节点优先级，取值范围0～254，MASTER要比BACKUP高,值越大，优先级越高</span>\n\tadvert_int <span class=\"token number\">1</span> <span class=\"token comment\"># MASTER与BACKUP节点间同步检查的时间间隔，单位为秒</span>\n\tnopreempt <span class=\"token comment\"># 禁止抢占服务。默认情况，当MASTER服务挂掉之后，BACKUP自动升级为MASTER并接替它的任务，当MASTER服务恢复后，升级为MASTER的BACKUP服务又自动降为BACKUP，把工作权交给原MASTER。当配置了nopreempt，MASTER从挂掉到恢复，不再将服务抢占过来。</span>\n\tauthentication <span class=\"token punctuation\">{</span>      <span class=\"token comment\">#传递信息的认证方式，密码仅支持8位</span>\n    \t\tauth_type PASS <span class=\"token comment\"># 类型主要有 PASS、AH 两种</span>\n    \t\tauth_pass <span class=\"token number\">1111</span> <span class=\"token comment\"># 同一vrrp 实例MASTER与BACKUP使用相同的密码才能正常通信</span>\n\t<span class=\"token punctuation\">}</span>\n\tvirtual_ipaddress <span class=\"token punctuation\">{</span> <span class=\"token comment\">#虚拟IP地址池，可以有多个IP，每个IP占一行，不需要指定子网掩码。注意：这个IP必须与我们的设定的vip保持一致。</span>\n\t\t<span class=\"token number\">255.255</span>.10.99\n\t\t<span class=\"token comment\">### 可以配置多个</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nvirtual_server <span class=\"token number\">255.255</span>.10.99 <span class=\"token number\">80</span> <span class=\"token punctuation\">{</span>　<span class=\"token comment\">#虚拟服务器virtual_server定义块</span>\n\tdelay_loop <span class=\"token number\">10</span> <span class=\"token comment\">#健康检查时间间隔，单位：秒 </span>\n\tlb_algo wrr <span class=\"token comment\"># 负载均衡调度算法，互联网应用常用方式为wlc或rr</span>\n\tlb_kind NAT <span class=\"token comment\"># 负载均衡转发规则。包括DR、NAT、TUN3种，一般使用路由（DR）转发规则，DR和NAT效率最高，但是有使用场景限制</span>\n\tpersistence_timeout <span class=\"token number\">50</span> <span class=\"token comment\"># http服务会话保持时间，单位：秒 </span>\n    protocol TCP <span class=\"token comment\"># 转发协议，分为TCP和UDP两种</span>\n   \t<span class=\"token comment\"># 下面的配置用户检测服务故障，然后剔除到vrrp集群中</span>\n\treal_server <span class=\"token number\">255.255</span>.10.203 <span class=\"token number\">8081</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">#真实服务器IP和端口，可以定义多个</span>\n\t\tweight <span class=\"token number\">2</span>　<span class=\"token comment\"># 负载权重，值越大，转发的优先级越高 </span>\n\t\tHTTP_GET <span class=\"token punctuation\">{</span> <span class=\"token comment\"># 使用HTTP_GET来检查服务的状态，也可以使用 TCP_CHECK</span>\n\t\t\turl <span class=\"token punctuation\">{</span>\n\t\t\t\tpath /beat\n\t\t\t\tdigest 7bd3d5f5b3cdb13aed632121206e729c <span class=\"token comment\"># 这个值是一个md5的求和，安装keepalived之后有一个工具用来求和，</span>\n\t\t\t\t<span class=\"token comment\"># genhash -s 255.255.10.203 -p 8081 -u /beat 执行这个命令就可以算出digest值</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tconnect_timeout <span class=\"token number\">3</span> <span class=\"token comment\">#服务连接超时时长，单位：秒 </span>\n            retry <span class=\"token number\">3</span> <span class=\"token comment\"># 重试次数</span>\n            delay_before_retry <span class=\"token number\">2</span> <span class=\"token comment\">#重试连接间隔</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\treal_server <span class=\"token number\">255.255</span>.10.204 <span class=\"token number\">8081</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">#另一个节点</span>\n                weight <span class=\"token number\">2</span>\n                HTTP_GET <span class=\"token punctuation\">{</span>\n                        url <span class=\"token punctuation\">{</span>\n                                path /beat\n                                digest 7bd3d5f5b3cdb13aed632121206e729c\n                        <span class=\"token punctuation\">}</span>\n                        connect_timeout <span class=\"token number\">3</span>\n                        retry <span class=\"token number\">3</span>\n                        delay_before_retry <span class=\"token number\">2</span>\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>如下为<code class=\"language-text\">BACKUP</code>的配置</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">vrrp_instance VI_1 <span class=\"token punctuation\">{</span>\n        state  BACKUP <span class=\"token comment\"># BACKUP</span>\n\t\tinterface eth0\n        virtual_router_id 01\n        priority <span class=\"token number\">99</span>　<span class=\"token comment\"># 比master下</span>\n        advert_int <span class=\"token number\">1</span>\n\t\tnopreempt\n        authentication <span class=\"token punctuation\">{</span>      //传递信息的认证方式，密码仅支持8位\n                auth_type PASS\n                auth_pass <span class=\"token number\">1111</span>\n        <span class=\"token punctuation\">}</span>\n        virtual_ipaddress <span class=\"token punctuation\">{</span>\n                <span class=\"token number\">255.255</span>.10.99\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nvirtual_server <span class=\"token number\">255.255</span>.10.99 <span class=\"token number\">8000</span> <span class=\"token punctuation\">{</span>\n        delay_loop <span class=\"token number\">6</span>\n        lb_algo wrr\n        lb_kind NAT\n        persistence_timeout <span class=\"token number\">50</span>\n        protocol TCP\n\n        real_server <span class=\"token number\">255.255</span>.10.204 <span class=\"token number\">8081</span> <span class=\"token punctuation\">{</span>\n                weight <span class=\"token number\">1</span>\n\t\t\t\tHTTP_GET <span class=\"token punctuation\">{</span>\n\t\t\t\t\turl <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tpath /beat\n\t\t\t\t\t\tdigest 7bd3d5f5b3cdb13aed632121206e729c\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\tconnect_timeout <span class=\"token number\">3</span>\n            \t\tretry <span class=\"token number\">3</span>\n            \t\tdelay_before_retry <span class=\"token number\">2</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\t\treal_server <span class=\"token number\">255.255</span>.10.203 <span class=\"token number\">8081</span> <span class=\"token punctuation\">{</span>\n                weight <span class=\"token number\">2</span>\n                HTTP_GET <span class=\"token punctuation\">{</span>\n                        url <span class=\"token punctuation\">{</span>\n                                path /beat\n                                digest 7bd3d5f5b3cdb13aed632121206e729c\n                        <span class=\"token punctuation\">}</span>\n                        connect_timeout <span class=\"token number\">3</span>\n                        retry <span class=\"token number\">3</span>\n                        delay_before_retry <span class=\"token number\">2</span>\n                <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>​</p>\n</li>\n<li>\n<p>日志查看，停止<code class=\"language-text\">255.255.10.204 8081</code> 上的服务，就会打印如下的日志</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Mar <span class=\"token number\">30</span> <span class=\"token number\">18</span>:36:01 dev_file Keepalived_healthcheckers<span class=\"token punctuation\">[</span><span class=\"token number\">23744</span><span class=\"token punctuation\">]</span>: Error connecting server <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.204<span class=\"token punctuation\">]</span>:8081.\nMar <span class=\"token number\">30</span> <span class=\"token number\">18</span>:36:01 dev_file Keepalived_healthcheckers<span class=\"token punctuation\">[</span><span class=\"token number\">23744</span><span class=\"token punctuation\">]</span>: Removing <span class=\"token function\">service</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.204<span class=\"token punctuation\">]</span>:8081 from VS <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.99<span class=\"token punctuation\">]</span>:80</code></pre></div>\n</li>\n<li>\n<p>日志查看，启动<code class=\"language-text\">255.255.10.204 8081</code>服务，打印如下日志</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Mar <span class=\"token number\">30</span> <span class=\"token number\">18</span>:36:49 dev_file Keepalived_healthcheckers<span class=\"token punctuation\">[</span><span class=\"token number\">23744</span><span class=\"token punctuation\">]</span>: MD5 digest success to <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.204<span class=\"token punctuation\">]</span>:8081 url<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>.\nMar <span class=\"token number\">30</span> <span class=\"token number\">18</span>:36:59 dev_file Keepalived_healthcheckers<span class=\"token punctuation\">[</span><span class=\"token number\">23744</span><span class=\"token punctuation\">]</span>: Remote Web server <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.204<span class=\"token punctuation\">]</span>:8081 succeed on service.\nMar <span class=\"token number\">30</span> <span class=\"token number\">18</span>:36:59 dev_file Keepalived_healthcheckers<span class=\"token punctuation\">[</span><span class=\"token number\">23744</span><span class=\"token punctuation\">]</span>: Adding <span class=\"token function\">service</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.204<span class=\"token punctuation\">]</span>:8081 to VS <span class=\"token punctuation\">[</span><span class=\"token number\">255.255</span>.10.99<span class=\"token punctuation\">]</span>:80</code></pre></div>\n</li>\n</ul>\n<h2>参考文档</h2>\n<ul>\n<li><a href=\"http://www.linuxvirtualserver.org/zh/lvs1.html\">Linux服务器集群系统</a></li>\n<li><a href=\"http://www.linuxvirtualserver.org/docs/ha/keepalived.html\">keepalived+lvs</a></li>\n<li><a href=\"http://www.linuxvirtualserver.org/zh/\">官方中文文档</a></li>\n</ul>","frontmatter":{"title":"linux-Keepalived 使用","date":"October 17, 2018","description":null}},"previous":{"fields":{"slug":"/2018-10-17-new-spring-boot-stater/"},"frontmatter":{"title":"自定义 spring-boot-stater"}},"next":{"fields":{"slug":"/2018-10-17-linux-Firewall/"},"frontmatter":{"title":"linux-Firewall 配置"}}},"pageContext":{"id":"7994394f-2ca6-5aa6-a30b-b955f32f32d1","previousPostId":"102591c3-13ea-5192-81b9-6e8b774f5b48","nextPostId":"7856ea72-5488-5d61-8b47-b6ee3a50a642"}},
    "staticQueryHashes": ["2841359383","3257411868"]}