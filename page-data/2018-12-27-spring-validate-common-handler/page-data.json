{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-12-27-spring-validate-common-handler/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"a72fa1d8-7cc6-5c82-9432-4c88899926ff","excerpt":"统一处理的校验 在开发业务系统的过程中都会设计到一些接口请求参数的校验，之前都是单个接口进行处理，现在介绍一种方法统一处理这个校验。…","html":"<h1>统一处理<code class=\"language-text\">validate</code>的校验</h1>\n<p>在开发业务系统的过程中都会设计到一些接口请求参数的校验，之前都是单个接口进行处理，现在介绍一种方法统一处理这个校验。</p>\n<h2>1、实现</h2>\n<p>通过继承<code class=\"language-text\">ResponseEntityExceptionHandler</code>这个类并实现<code class=\"language-text\">handleMethodArgumentNotValid</code>这个方法，就可以统一处理所以经过<code class=\"language-text\">Valid</code>注解过的接口，方法中的实现根据业务来，此处我写了一个统一返回类<code class=\"language-text\">ResponeVo</code>,主要用这个类和前端进行<code class=\"language-text\">REST FULL</code>交互，只要出现校验命中的就会来进入此方法执行，并且携带具体的错误信息；如下的处理逻辑是：返回和前端约定的固定<code class=\"language-text\">code</code>，<code class=\"language-text\">msg</code>字段用于返回校验时填入的信息，<code class=\"language-text\">data</code>中返回请求的值。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span></span>JSON<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>vo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponeVo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpHeaders</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FieldError</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MethodArgumentNotValidException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ControllerAdvice</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebRequest</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>mvc<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseEntityExceptionHandler</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@ControllerAdvice</span>\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ValidateCommonHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ResponseEntityExceptionHandler</span> <span class=\"token punctuation\">{</span>\n\n\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">protected</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">handleMethodArgumentNotValid</span><span class=\"token punctuation\">(</span>\n\t\t\t<span class=\"token class-name\">MethodArgumentNotValidException</span> ex<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpHeaders</span> headers<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span> status<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token class-name\">WebRequest</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">ResponeVo</span> vo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponeVo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvo<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"400\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">FieldError</span> fieldError <span class=\"token operator\">:</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">getBindingResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFieldErrors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token class-name\">String</span> defaultMessage <span class=\"token operator\">=</span> fieldError<span class=\"token punctuation\">.</span><span class=\"token function\">getDefaultMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvo<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span>defaultMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">Object</span> value <span class=\"token operator\">=</span> fieldError<span class=\"token punctuation\">.</span><span class=\"token function\">getRejectedValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">String</span> data <span class=\"token operator\">=</span> <span class=\"token string\">\"请求参数值为:\"</span><span class=\"token operator\">+</span>JSON<span class=\"token punctuation\">.</span><span class=\"token function\">toJSONString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvo<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">(</span>vo<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>2、Controller类书写</h2>\n<p>如下的接口中<code class=\"language-text\">addStudent</code>添加了<code class=\"language-text\">Valid</code>注解。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>alibaba<span class=\"token punctuation\">.</span>fastjson<span class=\"token punctuation\">.</span></span>JSON<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Girlfriend</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>vo<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponeVo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PathVariable</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PostMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestBody</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Valid</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoController</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"/student\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">ResponeVo</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">addStudent</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">Student</span> student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstudentsMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>student<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponeVo</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>解释如下的几个东西，这个类没有写<code class=\"language-text\">get</code>和<code class=\"language-text\">set</code>方法，因为使用了<code class=\"language-text\">@Data</code>注解，更多功能请参考 <a href=\"http://jnb.ociweb.com/jnb/jnbJan2010.html\">官网</a>,其他的呢就都是正常的注解，其中<code class=\"language-text\">idCard</code>和<code class=\"language-text\">phone</code>因为没有官方的注解，所以通过正则表达式来进行匹配，这种方法也是支持的。然后就是<code class=\"language-text\">backCard</code>银行卡校验有点问题，感觉规则和中国的不太一样，所以最好是自己用正则去校验。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fasterxml<span class=\"token punctuation\">.</span>jackson<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JsonFormat</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CreditCardNumber</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Length</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Valid</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Email</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Future</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Max</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Min</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotEmpty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotNull</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Pattern</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token annotation punctuation\">@Length</span><span class=\"token punctuation\">(</span>min <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"姓名不能为空\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"姓名不能为空\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"年龄不能为空\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Min</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"年龄不能小于18岁\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Max</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"年龄不能大于56岁\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"邮箱不能为空\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Email</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"邮箱地址无效\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> email<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotEmpty</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"身份证号不能为空\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"^[1-9]\\\\d{5}[1-9]\\\\d{3}((0\\\\d)|(1[0-2]))(([0|1|2]\\\\d)|3[0-1])\\\\d{3}([0-9]|X)$\"</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的身份证号\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> idCard<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotEmpty</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"手机号码不能为空\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Pattern</span><span class=\"token punctuation\">(</span>regexp <span class=\"token operator\">=</span> <span class=\"token string\">\"^1(3|4|5|7|8)\\\\d{9}$\"</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的手机号码\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> phone<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入合法的时间\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Future</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入合法的时间\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@JsonFormat</span><span class=\"token punctuation\">(</span>pattern<span class=\"token operator\">=</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Date</span> inSchoolDate<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的银行卡号\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@CreditCardNumber</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入正确的银行卡号\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> backCard<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//嵌套校验</span>\n    <span class=\"token annotation punctuation\">@NotEmpty</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请填写女朋友信息\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span><span class=\"token annotation punctuation\">@Valid</span> <span class=\"token class-name\">Girlfriend</span><span class=\"token operator\">></span> girlfriends<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>demo<span class=\"token punctuation\">.</span>validatecommondemo<span class=\"token punctuation\">.</span>entity</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>hibernate<span class=\"token punctuation\">.</span>validator<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Range</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Digits</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotEmpty</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>validation<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NotNull</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Data</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Girlfriend</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token annotation punctuation\">@NotEmpty</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入姓名\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入年龄\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Range</span><span class=\"token punctuation\">(</span>min <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>max <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"对不起，年龄不在合适的范围内\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n\t<span class=\"token annotation punctuation\">@NotNull</span><span class=\"token punctuation\">(</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"请输入性别\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token annotation punctuation\">@Digits</span><span class=\"token punctuation\">(</span>integer <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>fraction <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>message <span class=\"token operator\">=</span> <span class=\"token string\">\"只接受女性为女朋友\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> gender<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>3、请求</h2>\n<p>请求参数：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"l\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"email\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"1@qq.com\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"phone\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"77777777777\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"idCard\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"44444444444444444\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"backCard\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"44444\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"inSchoolDate\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"2019-10-10 10:10:10\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token property\">\"girlfriends\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>响应参数:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"code\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"400\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请输入性别\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请求参数值为:null\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如下说明校验生效了。</p>\n<h1>支持的校验标签</h1>\n<h2>1、javax.validation 包下</h2>\n<table>\n<thead>\n<tr>\n<th>meta-data</th>\n<th>comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>AssertFalse</td>\n<td>布尔，为False</td>\n</tr>\n<tr>\n<td>AssertTrue</td>\n<td>布尔，为True</td>\n</tr>\n<tr>\n<td>DecimalMax</td>\n<td>数字，最大为value</td>\n</tr>\n<tr>\n<td>DecimalMin</td>\n<td>数字，最小为value</td>\n</tr>\n<tr>\n<td>Digits</td>\n<td>数字，是否等于某个值</td>\n</tr>\n<tr>\n<td>Email</td>\n<td>邮箱</td>\n</tr>\n<tr>\n<td>Future</td>\n<td>是否是未来时间</td>\n</tr>\n<tr>\n<td>FutureOrPresent</td>\n<td>时间是否是将来或者现在</td>\n</tr>\n<tr>\n<td>Max</td>\n<td>数字，最大为value</td>\n</tr>\n<tr>\n<td>Min</td>\n<td>数字，最小为value</td>\n</tr>\n<tr>\n<td>Negative</td>\n<td>数字，是否是负数</td>\n</tr>\n<tr>\n<td>NegativeOrZero</td>\n<td>数字，负数或0</td>\n</tr>\n<tr>\n<td>NotBlank</td>\n<td>字符串，不为空字符串</td>\n</tr>\n<tr>\n<td>NotEmpty</td>\n<td>集合，不为空,对于List类型或者是数组类型</td>\n</tr>\n<tr>\n<td>NotNull</td>\n<td>对象，不为空</td>\n</tr>\n<tr>\n<td>Null</td>\n<td>对象，为空</td>\n</tr>\n<tr>\n<td>Past</td>\n<td>日期，过去的日期</td>\n</tr>\n<tr>\n<td>PastOrPresent</td>\n<td>过去或者现在</td>\n</tr>\n<tr>\n<td>Pattern</td>\n<td>字符串，正则校验</td>\n</tr>\n<tr>\n<td>Positive</td>\n<td>数字，正数</td>\n</tr>\n<tr>\n<td>PositiveOrZero</td>\n<td>数字，正数或0</td>\n</tr>\n<tr>\n<td>Size</td>\n<td>min&#x3C;=value&#x3C;=max</td>\n</tr>\n</tbody>\n</table>\n<h1>源码</h1>\n<ul>\n<li><code class=\"language-text\">Github</code>:<code class=\"language-text\">https://github.com/lengrongfu/validate-common-demo</code></li>\n</ul>","frontmatter":{"title":"spring boot validate 统一处理","date":"December 27, 2018","description":null}},"previous":{"fields":{"slug":"/2018-12-12-Kubernetes-Setup/"},"frontmatter":{"title":"Kubernetes 入门学习"}},"next":{"fields":{"slug":"/2019-01-04-2018-2019/"},"frontmatter":{"title":"18年的回顾,19年的展望"}}},"pageContext":{"id":"a72fa1d8-7cc6-5c82-9432-4c88899926ff","previousPostId":"73910cf6-057f-5a0b-822a-cfc8bfbf1e80","nextPostId":"18bc7adc-12b9-554b-9d64-db3797f0e472"}},
    "staticQueryHashes": ["2841359383","3257411868"]}