{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-11-24-docker-Compose-user/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"eea82286-7d57-5432-aea7-fca5b9819cc9","excerpt":"Docker Compose 是什么  是一个用来定义和运行多个应用的工具，通过 可以在一个文件中定一个多个容器，然后通过一个命令启动你的应用程序。 github.com/docker/compose Docker Compose 命令 Command Purpose build Build or rebuild…","html":"<h1>Docker Compose 是什么</h1>\n<blockquote>\n<p><code class=\"language-text\">Docker Compose</code> 是一个用来定义和运行多个<code class=\"language-text\">Docker</code>应用的工具，通过<code class=\"language-text\">Compose</code> 可以在一个文件中定一个多个容器，然后通过一个命令启动你的应用程序。</p>\n</blockquote>\n<ul>\n<li><a href=\"github.com/docker/compose\">github.com/docker/compose</a></li>\n</ul>\n<h1>Docker Compose 命令</h1>\n<table>\n<thead>\n<tr>\n<th>Command</th>\n<th>Purpose</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>build</td>\n<td>Build or rebuild services</td>\n</tr>\n<tr>\n<td>help</td>\n<td>Get help on a command</td>\n</tr>\n<tr>\n<td>kill</td>\n<td>Kill containers</td>\n</tr>\n<tr>\n<td>logs</td>\n<td>View output from containers</td>\n</tr>\n<tr>\n<td>port</td>\n<td>Print the public port for a port binding</td>\n</tr>\n<tr>\n<td>ps</td>\n<td>List containers</td>\n</tr>\n<tr>\n<td>pull</td>\n<td>Pulls service images</td>\n</tr>\n<tr>\n<td>restart</td>\n<td>Restart services</td>\n</tr>\n<tr>\n<td>rm</td>\n<td>Remove stopped containers</td>\n</tr>\n<tr>\n<td>run</td>\n<td>Run a one-off command</td>\n</tr>\n<tr>\n<td>scale</td>\n<td>Set number of containers for a service</td>\n</tr>\n<tr>\n<td>start</td>\n<td>Start services</td>\n</tr>\n<tr>\n<td>stop</td>\n<td>Stop services</td>\n</tr>\n<tr>\n<td>up</td>\n<td>Create and start containers</td>\n</tr>\n</tbody>\n</table>\n<h1>第一个应用</h1>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.6'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> db\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">8</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> employees\n      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> supersecret\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 3306<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> arungupta/docker<span class=\"token punctuation\">-</span>javaee<span class=\"token punctuation\">:</span>dockerconeu17\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>\n      <span class=\"token punctuation\">-</span> 9990<span class=\"token punctuation\">:</span><span class=\"token number\">9990</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db</code></pre></div>\n<ul>\n<li>文件讲解</li>\n</ul>\n<p>1、此<code class=\"language-text\">Compose</code>文件定义了两个服务，一个是<code class=\"language-text\">db</code>,还有一个是<code class=\"language-text\">web</code>.\n2、使用<code class=\"language-text\">image</code>属性定义服务运行的镜像名。\n3、<code class=\"language-text\">environment</code>环境变量用来设置服务中写<code class=\"language-text\">dockerfile</code>时的环境变量。\n4、<code class=\"language-text\">web</code>服务需要使用<code class=\"language-text\">db</code>服务。\n5、<code class=\"language-text\">ports</code>是服务暴露的端口和转发到容器中的端口上。\n6、<code class=\"language-text\">depends_on</code>属性是用于设置有依赖关系服务的，此处<code class=\"language-text\">web</code>需要依赖<code class=\"language-text\">db</code>先启动，所以需要如此设置。</p>\n<h1>开始运行</h1>\n<p>创建和启动<code class=\"language-text\">Compose</code>命令：<code class=\"language-text\">docker-compose up -d</code>，如果<code class=\"language-text\">compose</code>的文件名不是默认的，可以通过指定<code class=\"language-text\">-f a-compose.yml</code>一个自定义的文件名。\n运行之后如果本地没有这个镜像，那么会先去拉取镜像，然后运行，等运行完后，查看<code class=\"language-text\">docker-compose ps</code>.</p>\n<h1>查看日志</h1>\n<p><code class=\"language-text\">docker-compose logs</code> 可以查看多个服务的日志。</p>\n<h1>停止服务</h1>\n<p><code class=\"language-text\">docker-compose kill</code>会停止服务，但是不会删除，感觉和<code class=\"language-text\">docker-compose stop</code>的作用差不多，通过执行<code class=\"language-text\">docker-compose start</code> 命令可以再次启动服务。如果想要停止并删除服务，就需要执行<code class=\"language-text\">docker-compose down</code>命令。</p>\n<h1>自定义网络</h1>\n<p>使用<code class=\"language-text\">compose</code>启动的服务都会启动一个自定义的网络，一般命名是项目名加上网络名，如果未命名网络名，就使用<code class=\"language-text\">default</code>来定义。\n比如：如下我创建了一个网络名为<code class=\"language-text\">com-demo</code>的<code class=\"language-text\">bridge</code>网络模型。</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'3.6'</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> db\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">8</span>\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> employees\n      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> mysql\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> supersecret\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 3306<span class=\"token punctuation\">:</span><span class=\"token number\">3306</span>\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> com<span class=\"token punctuation\">-</span>demo\n  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> arungupta/docker<span class=\"token punctuation\">-</span>javaee<span class=\"token punctuation\">:</span>dockerconeu17\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span>\n      <span class=\"token punctuation\">-</span> 9990<span class=\"token punctuation\">:</span><span class=\"token number\">9990</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> db\n    <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span> \n      <span class=\"token punctuation\">-</span> com<span class=\"token punctuation\">-</span>demo\n<span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">com-demo</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">driver</span><span class=\"token punctuation\">:</span> bridge</code></pre></div>","frontmatter":{"title":"docker Compose 使用","date":"November 24, 2018","description":null}},"previous":{"fields":{"slug":"/2018-11-16-es-xpack-machinelean/"},"frontmatter":{"title":"es-xpack-machinelean"}},"next":{"fields":{"slug":"/2018-11-25-docker-network-concept/"},"frontmatter":{"title":"docker 网络概念"}}},"pageContext":{"id":"eea82286-7d57-5432-aea7-fca5b9819cc9","previousPostId":"92abb954-5c96-541f-997b-f717f5a31920","nextPostId":"eb6e54fc-fbb2-5f58-a9cc-e8e1a2810b12"}},
    "staticQueryHashes": ["2841359383","3257411868"]}