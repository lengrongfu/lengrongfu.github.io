{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2018-12-12-Kubernetes-Setup/",
    "result": {"data":{"site":{"siteMetadata":{"title":"LRF"}},"markdownRemark":{"id":"73910cf6-057f-5a0b-822a-cfc8bfbf1e80","excerpt":"Kubernetes创建一个集群 Kubernetes 集群 是一个计算机资源的协调器，将这些计算机连接起来作为一个工作单元。以更有效的方式自动化跨集群分发和调度应用程序容器。主要由两部分组成，协调集群，是应用程序的工作节点。 module_01_cluster…","html":"<h1>Kubernetes创建一个集群</h1>\n<h3>Kubernetes 集群</h3>\n<p><code class=\"language-text\">Kubernetes</code>是一个计算机资源的协调器，将这些计算机连接起来作为一个工作单元。<code class=\"language-text\">Kubernetes</code>以更有效的方式自动化跨集群分发和调度应用程序容器。<code class=\"language-text\">Kubernetes</code>主要由两部分组成，<code class=\"language-text\">Master</code>协调集群，<code class=\"language-text\">Nodes</code>是应用程序的工作节点。</p>\n<p><img src=\"module_01_cluster.svg\" alt=\"module_01_cluster\"></p>\n<p><code class=\"language-text\">Master</code>是负责管理集群的，<code class=\"language-text\">Noes</code>是虚拟机或者是物理机，用作<code class=\"language-text\">Kubernetes</code>中的工作节点。每一个<code class=\"language-text\">Node</code>节点都有一个<code class=\"language-text\">Kubelet</code>。\n<code class=\"language-text\">Minikube</code>是一种轻量级<code class=\"language-text\">Kubernetes</code>实现，可在本地计算机上创建VM并部署仅包含一个节点的简单集群.可以在<code class=\"language-text\">Linux</code>或者<code class=\"language-text\">Macos</code>上通过<a href=\"https://kubernetes.io/docs/tasks/tools/install-minikube/\">Minikube</a>部署一个只有单节点的<code class=\"language-text\">k8s</code>集群。</p>\n<h3>使用minikube创建一个k8s集群</h3>\n<p>1、先查看本地是否安装<code class=\"language-text\">minikube</code>,执行命令:<code class=\"language-text\">minikube version</code>,如果本地安装就能看到结果。\n2、启动集群，使用命令</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 执行启动之后就能看到如下的日志</span>\n$ minikube start\nStarting <span class=\"token builtin class-name\">local</span> Kubernetes v1.10.0 cluster<span class=\"token punctuation\">..</span>.\nStarting VM<span class=\"token punctuation\">..</span>.\nGetting VM IP address<span class=\"token punctuation\">..</span>.\nMoving files into cluster<span class=\"token punctuation\">..</span>.\nSetting up certs<span class=\"token punctuation\">..</span>.\nConnecting to cluster<span class=\"token punctuation\">..</span>.\nSetting up kubeconfig<span class=\"token punctuation\">..</span>.\nStarting cluster components<span class=\"token punctuation\">..</span>.\nKubectl is now configured to use the cluster.\nLoading cached images from config file.</code></pre></div>\n<p>3、查看启动的<code class=\"language-text\">k8s</code>集群：<code class=\"language-text\">kubectl version</code>,执行这条命令之后会看到客户端和服务端的版本，客户端版本是<code class=\"language-text\">kubectl</code>的，服务端版本是<code class=\"language-text\">Kubernetes</code>的版本，\n4、查看集群详细信息：<code class=\"language-text\">kubectl cluster-info</code>\n5、查看拥有节点：<code class=\"language-text\">kubectl get nodes</code>，即可得出所有的可用节点，状态为<code class=\"language-text\">Ready</code>,标示已经准备好可以处理应用。</p>\n<h1>使用kubectl去部署一个应用</h1>","frontmatter":{"title":"Kubernetes 入门学习","date":"December 12, 2018","description":null}},"previous":{"fields":{"slug":"/2018-12-05-Container-Networking-Standards/"},"frontmatter":{"title":"Container Networking 标准"}},"next":{"fields":{"slug":"/2018-12-27-spring-validate-common-handler/"},"frontmatter":{"title":"spring boot validate 统一处理"}}},"pageContext":{"id":"73910cf6-057f-5a0b-822a-cfc8bfbf1e80","previousPostId":"3fde9505-a374-52f7-920f-a8808a63848f","nextPostId":"a72fa1d8-7cc6-5c82-9432-4c88899926ff"}},
    "staticQueryHashes": ["2841359383","3257411868"]}