<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lengrongfu.github.io/blog</id>
    <title>My Site Blog</title>
    <updated>2025-01-12T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lengrongfu.github.io/blog"/>
    <subtitle>My Site Blog</subtitle>
    <icon>https://lengrongfu.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[把小爱音箱接入大语言模型]]></title>
        <id>https://lengrongfu.github.io/blog/migpu</id>
        <link href="https://lengrongfu.github.io/blog/migpu"/>
        <updated>2025-01-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[最近发现了一个好玩的项目，可以把小爱音箱接入大语言模型，让它用强大的人工智能模型来回答问题。]]></summary>
        <content type="html"><![CDATA[<p>最近发现了一个好玩的项目，可以把小爱音箱接入大语言模型，让它用强大的人工智能模型来回答问题。</p>
<p><img decoding="async" loading="lazy" alt="alt text" src="https://lengrongfu.github.io/assets/images/screenshot-20250112-154539-0e659062caff906f3539ad37082d7e4d.png" width="1542" height="932" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="准备事项">准备事项<a href="https://lengrongfu.github.io/blog/migpu#%E5%87%86%E5%A4%87%E4%BA%8B%E9%A1%B9" class="hash-link" aria-label="Direct link to 准备事项" title="Direct link to 准备事项">​</a></h3>
<ol>
<li>先确认你的音箱是否支持：undefined</li>
</ol>
<p><img decoding="async" loading="lazy" alt="loading" src="https://lengrongfu.github.io/assets/images/image12-b0a273892b4c485489df2197f35ec8a7.png" width="1338" height="938" class="img_ev3q"></p>
<ol>
<li>准备小爱音箱并接入米家，获取米家账号登录 ID 和 密码，后续需要使用。</li>
<li>接入 AI 环境，目前支持的 AI 厂商较多，有些是要收费，有些事免费的</li>
</ol>
<table><thead><tr><th>服务名称</th><th>免费额度</th><th>超出免费额度的收费价格</th><th>备注</th></tr></thead><tbody><tr><td><strong>ChatGPT[1]</strong></td><td>无</td><td>最低 0.5 美元 / 1.5 美元 / 每百万 token</td><td>支持第三方中转服务</td></tr><tr><td><strong>Groq[2]</strong></td><td>众多开源模型（Llama、Gemma 等）免费使用。注意：它免费提供 70B 参数规模的 Llama3 模型，而在硅基流动中这个模型是收费且最贵的。</td><td>无收费模型</td><td>完全免费的服务，强烈推荐</td></tr><tr><td><strong>硅基流动[3]</strong></td><td>众多开源模型（Yi、Qwen、Llama、Gemma 等）免费使用。另赠送 14 元体验金，有效期未知</td><td>另外几个付费模型中，最低 0.7 元 / 0.7 元 / 每百万 token</td><td>完全免费的服务，强烈推荐</td></tr><tr><td><strong>智谱 AI[4]</strong></td><td>一次性赠送 2000 万 token，有效期 30 天</td><td>最低 0.1 元 / 0.1 元 / 每百万 token</td><td></td></tr><tr><td><strong>豆包[5]</strong></td><td>6 个模型每个都赠送 50 万 token，8 月 30 日前额外给每个模型赠送 5 亿 token，均不会过期</td><td>最低 0.3 元 / 0.6 元 / 每百万 token</td><td></td></tr><tr><td><strong>通义千问[6]</strong></td><td>一次性赠送 100 万 tokens，有效期 30 天</td><td>最低 0.5 元 / 2 元 / 每百万 token</td><td></td></tr><tr><td><strong>DeepSeek[7]</strong></td><td>一次性赠送 10 元体验金，有效期 30 天</td><td>最低 1 元 / 2 元 / 每百万 token</td><td></td></tr><tr><td><strong>零一万物[8]</strong></td><td>一次性赠送 36 元体验金，不会过期</td><td>最低 2.5 元 / 2.5 元 / 每百万 token</td><td></td></tr><tr><td><strong>百川智能（百小应）[9]</strong></td><td>一次性赠送 80 元体验金，有效期 90 天</td><td>最低 8 元 / 8 元 / 每百万 token</td><td></td></tr><tr><td><strong>Moonshot (Kimi)[10]</strong></td><td>一次性赠送 15 元体验金，不会过期</td><td>最低 12 元 / 12 元 / 每百万 token</td><td></td></tr></tbody></table>
<p>因为硅基流动完全免费，所以选用硅基流动。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="创建-ai-账号">创建 AI 账号<a href="https://lengrongfu.github.io/blog/migpu#%E5%88%9B%E5%BB%BA-ai-%E8%B4%A6%E5%8F%B7" class="hash-link" aria-label="Direct link to 创建 AI 账号" title="Direct link to 创建 AI 账号">​</a></h3>
<ol>
<li>创建硅基流动账号和登录：undefined</li>
<li>创建 API 密钥</li>
</ol>
<p>​       在账户管理 → API 密钥 → 新建 API 密钥.</p>
<ol>
<li>进入模型广场选择使用的模型，记住模型名字，后续要用到。公开的模型都不需要部署，只需要记住这个模型名字即可。</li>
</ol>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="启动-migpt-gui">启动 MiGPT GUI<a href="https://lengrongfu.github.io/blog/migpu#%E5%90%AF%E5%8A%A8-migpt-gui" class="hash-link" aria-label="Direct link to 启动 MiGPT GUI" title="Direct link to 启动 MiGPT GUI">​</a></h3>
<ol>
<li>安装Docker: <a href="https://orbstack.dev/" target="_blank" rel="noopener noreferrer"><strong>https://orbstack.dev/</strong></a>  这里我推荐使用 Orbstack 来代替 Docker Desktop，安装之后和使用之前的 Docker 是一样的。</li>
<li>下载镜像</li>
</ol>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ docker pull docker.m.daocloud.io/lmk123/migpt-server</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>在终端运行：</li>
</ol>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ docker run -d --name migpt-server -p 36592:36592 docker.m.daocloud.io/lmk123/migpt-server</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>打开 <a href="http://localhost:36592/" target="_blank" rel="noopener noreferrer">http://localhost:36592</a>
<ul>
<li>如果你是部署在服务器里的 Docker，请使用服务器的 IP 地址替换 localhost，例如 <a href="http://192.168.1.1:36592/" target="_blank" rel="noopener noreferrer">http://192.168.1.1:36592</a></li>
</ul>
</li>
</ol>
<p><img decoding="async" loading="lazy" alt="loading" src="https://lengrongfu.github.io/assets/images/image13-44b957324df6b081895789d7ae032895.png" width="1736" height="1328" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="配置-migpt">配置 MiGPT<a href="https://lengrongfu.github.io/blog/migpu#%E9%85%8D%E7%BD%AE-migpt" class="hash-link" aria-label="Direct link to 配置 MiGPT" title="Direct link to 配置 MiGPT">​</a></h3>
<ol>
<li>配置音箱，主要是选择音箱型号、小米账号ID 、小米账号密码这三个信息。</li>
</ol>
<p><img decoding="async" loading="lazy" alt="loading" src="https://lengrongfu.github.io/assets/images/image14-e82d5657d4ca708fc73542c3c2e7f6ef.png" width="1824" height="1116" class="img_ev3q"></p>
<ol>
<li>配置 AI 服务信息，主要是填写接口地址，这里以硅基流动为例<!-- -->
<ul>
<li>地址固定值：<a href="https://api.siliconflow.cn/v1" target="_blank" rel="noopener noreferrer">https://api.siliconflow.cn/v1</a></li>
<li>密钥：前面创建的 API Key</li>
<li>模型：把从模型广场选择的模型名字填进去就行。</li>
</ul>
</li>
</ol>
<p><img decoding="async" loading="lazy" alt="loading" src="https://lengrongfu.github.io/assets/images/image15-91e7319050e2fe8d6ba1c2c4de4cf28c.png" width="1800" height="658" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="使用">使用<a href="https://lengrongfu.github.io/blog/migpu#%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="Direct link to 使用" title="Direct link to 使用">​</a></h3>
<p>demo 视频。</p>
<video src="./static/img/2025-01/migpt.mp4"></video>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资料">参考资料<a href="https://lengrongfu.github.io/blog/migpu#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 参考资料" title="Direct link to 参考资料">​</a></h3>
<p>[1]ChatGPT: <em><a href="https://migptgui.com/docs/apply/chatgpt" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/chatgpt</a></em></p>
<p>[2]Groq: <em><a href="https://migptgui.com/docs/apply/groq" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/groq</a></em></p>
<p>[3]硅基流动: <em><a href="https://migptgui.com/docs/apply/siliconflow" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/siliconflow</a></em></p>
<p>[4]智谱 AI: <em><a href="https://migptgui.com/docs/apply/zhipu" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/zhipu</a></em></p>
<p>[5]豆包: <em><a href="https://migptgui.com/docs/apply/doubao" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/doubao</a></em></p>
<p>[6]通义千问: <em><a href="https://migptgui.com/docs/apply/tongyi" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/tongyi</a></em></p>
<p>[7]DeepSeek: <em><a href="https://migptgui.com/docs/apply/deepseek" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/deepseek</a></em></p>
<p>[8]零一万物: <em><a href="https://migptgui.com/docs/apply/lingyi" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/lingyi</a></em></p>
<p>[9]百川智能（百小应）: <em><a href="https://migptgui.com/docs/apply/baichuan" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/baichuan</a></em></p>
<p>[10]Moonshot (Kimi): <em><a href="https://migptgui.com/docs/apply/moonshot" target="_blank" rel="noopener noreferrer">https://migptgui.com/docs/apply/moonshot</a></em></p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Other" term="Other"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序员干的是夕阳产业吗？]]></title>
        <id>https://lengrongfu.github.io/blog/github-workspace</id>
        <link href="https://lengrongfu.github.io/blog/github-workspace"/>
        <updated>2025-01-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[今天试用了 GitHub 的 copilot-workspace，效果太炸裂了，第一次感觉离失业这么近。这里不介绍 copilot-workspace 是什么，可以干什么，感兴趣的可以去官网查看。下面就展开说说我让他帮我干了啥。]]></summary>
        <content type="html"><![CDATA[<p>今天试用了 GitHub 的 copilot-workspace，效果太炸裂了，第一次感觉离失业这么近。这里不介绍 copilot-workspace 是什么，可以干什么，感兴趣的可以去官网查看。下面就展开说说我让他帮我干了啥。</p>
<p>我让它帮我写一个家庭图书管理小程序，可以实现图书的录入、删除、搜索等能力；</p>
<p>下面就是一个演示效果，写完代码之后我在本地进行了部署，使用手机进行试用；我添加了一本书之后在本地进行了显示。</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image11-ad0a55578acdc84cbd481ad879735564.png" width="1170" height="2532" class="img_ev3q">
下面说一下我是怎么做的；<a href="https://copilot-workspace.githubnext.com/" target="_blank" rel="noopener noreferrer">https://copilot-workspace.githubnext.com/</a></p>
<p>进入这个网站之后，我写了如下的 Promot；</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">I need implement a WeChat applet, the main purpose is to implement a family library management system to record paper books purchased by the family. The core functions include users being able to manually enter, search, and exit the library. Each book can scan the ISBN and then call the Douban service API to query the book's information, which needs to include detailed information about the book and the price entered by the user.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后它会生成多个 Task，我们可以选择添加task，每个task 又有多个步骤。</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image10-5cc20280ed4fd48ffa08d92c88c8fa5a.png" width="1280" height="622" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image9-d44f885ec4393135451c19154f2d286c.png" width="1280" height="419" class="img_ev3q"></p>
<p>总共生成了三个计划，我先把三个任务都添加进去，不去看有什么任务细节。</p>
<p>然后我再生成更详细的任务，此时它就会生成以功能维度的任务，提示需要创建哪些任务文件等，每个文件需要实现些功能等。</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image8-cd3eea20422ee77b658a9454eae67ad7.png" width="1129" height="1280" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image7-1a07ed23ad65cac65abbd5da6781b7af.png" width="2048" height="951" class="img_ev3q"></p>
<p>列出了很多具体执行的计划任务，比如需要实现多少个js文件，每个js文件都做些什么事情。 我先不管任务是否有问题，我直接点击 Implement selected files. 然后它就开始哐哐哐的给我写代码了；这里一分钟左右，16个文件就写好了。</p>
<p>写完之后我发现一些代码有问题，告诉它修改给我进行修改，比如：</p>
<ol>
<li>发现调用豆瓣的api需要 apikey；重新输入描述，让它修改代码：</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image6-09c0899cd2326ddf4023b93ce9307485.png" width="1280" height="709" class="img_ev3q"></p>
<ol>
<li>发现调用豆瓣的API走不通；我就先让它帮我把代码删除，然后改为直接从输入框读；也帮我改正确了。</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image5-2c990a5040008f83c051e88a8e3976ca.png" width="2048" height="518" class="img_ev3q"></p>
<ol>
<li>帮我把存储改为本地存储；逻辑也正确，可以正确的存储数据和展示。</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image4-b888957fe72980e4815d4e14a4d10ae3.png" width="2048" height="617" class="img_ev3q"></p>
<ol>
<li>我觉得页面太丑，又给了它一个图片进行参考，让它帮我按照这个进行修改。基本做到了神似，但是</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image3-edc0a9357965896f347c92ceb318457f.png" width="2048" height="805" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image2-1baabf821c2ee87e5a8cdd8236dbd235.png" width="750" height="1428" class="img_ev3q"></p>
<p>如下是给的原图。</p>
<p><img decoding="async" loading="lazy" alt="20250107-174853.jpeg" src="https://lengrongfu.github.io/assets/images/image1-5c74a0e257521fbd0add8c89d7f3a324.png" width="1080" height="2337" class="img_ev3q"></p>
<p>这一套操作下来，我强烈的感觉到在未来，只需要UI设计和产品设计就可以做一个项目了，可能大量的程序员会面临失业的问题。</p>
<p>那程序员应该怎么应对呢？</p>
<ol>
<li>一定要去学习 Prompt, 提示词很重要；假如未来两个研发，一个会 prompt ，另外一个不会；那不会的一定被淘汰。因为 prompt 执行之后，还需要人工 review 代码，所以会写prompt和不会写prompt；差别很大。</li>
<li>减少CRUD、基本业务代码的开发，多抽时间去学习更加重要的东西。</li>
<li>可以加入到 LLM 的基础设施，未来 LLM 到处使用之后，基础平台一定很多、很重要；这里面有很多事情可以做。</li>
</ol>
<p>如果还想做程序员这一行业的话，按照我的经验，我能想到的就这三个方面。</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Other" term="Other"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[GPU热挂载到Kubernetes的原理]]></title>
        <id>https://lengrongfu.github.io/blog/gpu-dynamic-mount</id>
        <link href="https://lengrongfu.github.io/blog/gpu-dynamic-mount"/>
        <updated>2025-01-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本文主要基于 GPUMounter 这个项目的代码来进行分析，项目代码比较多，里面最核心的就两个地方，这里以动态挂载为例来说明。]]></summary>
        <content type="html"><![CDATA[<p>本文主要基于 GPUMounter 这个项目的代码来进行分析，项目代码比较多，里面最核心的就两个地方，这里以动态挂载为例来说明。</p>
<p>众所周知容器的核心两大技术就是 cgroup 和 namespace，cgroup 主要是提供资源限制、namespace 主要是提供资源隔离。device 也是其中的一种资源，所以动态挂载核心就是对 cgroup 和 namespace 的操作。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cgroups">Cgroups<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#cgroups" class="hash-link" aria-label="Direct link to Cgroups" title="Direct link to Cgroups">​</a></h2>
<p>Cgroups是 control groups 的缩写，是Linux内核提供的一种可以限制、记录、隔离进程组（process groups）所使用的物理资源（如：cpu,memory,IO等等）的机制。最初由google的工程师提出，后来被整合进Linux内核。Cgroups也是LXC为实现虚拟化所使用的资源管理手段，可以说没有cgroups就没有LXC。</p>
<p>Cgroups 提供了如下的一些功能：</p>
<ol>
<li>限制进程组可以使用的资源数量（Resource limiting）比如：memory子系统可以为进程组设定一个memory使用上限，一旦进程组使用的内存达到限额再申请内存，就会出发OOM（out of memory）。</li>
<li>进程组的优先级控制（Prioritization ）。比如：可以使用cpu子系统为某个进程组分配特定cpu share。</li>
<li>记录进程组使用的资源数量（Accounting），比如：可以使用cpuacct子系统记录某个进程组使用的cpu时间</li>
<li>进程组隔离（Isolation），比如：使用ns子系统可以使不同的进程组使用不同的namespace，以达到隔离的目的，不同的进程组有各自的进程、网络、文件系统挂载空间。</li>
<li>进程组控制（Control）。比如：使用freezer子系统可以将进程组挂起和恢复。</li>
</ol>
<p>Cgroups 提供了较多子系统，目前存在有 v1 和 v2 两个版本，device 在 v1 版本中是一个独立的子系统，在 v2 中被移除了，下面我将分两个版本来讲解。</p>
<p>我们通过如下的命令来查看当前操作系统 Cgroups 版本：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ mount |grep cgroup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cgroup on /sys/fs/cgroup/systemd type cgroup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># v1 版本数据</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ mount |grep cgroup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cgroup2 on /sys/fs/cgroup type cgroup2 (rw,nosuid,nodev,noexec,relatime)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># v2 版本数据</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="v1">V1<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#v1" class="hash-link" aria-label="Direct link to V1" title="Direct link to V1">​</a></h3>
<p>在 Cgroups V1 中，使用 devices 子系统可以允许或者拒绝 cgroup 中的进程访问设备。</p>
<p>devices子系统有三个控制文件：</p>
<ul>
<li>devices.allow：devices.allow用于指定cgroup中的进程可以访问的设备</li>
<li>devices.deny：devices.deny用于指定cgroup中的进程不能访问的设备</li>
<li>devices.list：devices.list用于报告cgroup中的进程访问的设备。</li>
</ul>
<p>devices.allow文件中包含若干条目，每个条目有四个字段：type、major、minor 和 access。type、major 和 minor 字段中使用的值对应 Linux 分配的设备。</p>
<p>type字段指定设备类型：</p>
<ul>
<li>a 应用所有设备，可以是字符设备，也可以是块设备</li>
<li>b 指定块设备</li>
<li>c 指定字符设备</li>
</ul>
<p>major和minor指定设备的主次设备号，可以通过命令获取：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ls -l /dev/nvidia0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">crw-rw-rw- 1 root root 195, 0 Dec 24 14:32 /dev/nvidia0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 195 major</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 0 minor</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>access 则指定相应的权限：</p>
<ul>
<li>r 允许任务从指定设备中读取</li>
<li>w 允许任务写入指定设备</li>
<li>m 允许任务生成还不存在的设备文件</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="v2">V2<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#v2" class="hash-link" aria-label="Direct link to V2" title="Direct link to V2">​</a></h3>
<p>Cgroups V2 大部分和 V1 是一样的，但是 device 这部分是不一样的，这部分在 V2 中移除了。</p>
<p><a href="https://www.kernel.org/doc/html/v5.10/admin-guide/cgroup-v2.html#device-controller" target="_blank" rel="noopener noreferrer">https://www.kernel.org/doc/html/v5.10/admin-guide/cgroup-v2.html#device-controller</a></p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image-5a016713bbf30af57d9605e761087032.png" width="2048" height="531" class="img_ev3q"></p>
<p>在 Linux Kernel 中提到 Device controller 需要使用 BPF 来进行 filter 控制设备。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="namespace">Namespace<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#namespace" class="hash-link" aria-label="Direct link to Namespace" title="Direct link to Namespace">​</a></h2>
<p>Linux Namespaces机制提供一种资源隔离方案,PID,IPC,Network等系统资源不再是全局性的，而是属于特定的Namespace。每个Namespace里面的资源对其他Namespace都是透明的。不同container内的进程属于不同的Namespace，彼此透明，互不干扰。</p>
<p>查看当前机器支持哪些 Namespace：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ls -l /proc/self/ns</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 cgroup -&gt; cgroup:[4026531835]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 ipc -&gt; ipc:[4026531839]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 mnt -&gt; mnt:[4026531841]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 net -&gt; net:[4026531840]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 pid -&gt; pid:[4026531836]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 pid_for_children -&gt; pid:[4026531836]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 time -&gt; time:[4026531834]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 time_for_children -&gt; time:[4026531834]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 user -&gt; user:[4026531837]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">lrwxrwxrwx 1 root root 0 Jan  2 22:07 uts -&gt; uts:[4026531838]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里我们不讨论怎么创建出 ns，我们是在创建出的 ns 之上进行使用，device 也是文件，所以也遵循 mount ns的隔离机制。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="demo">Demo<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#demo" class="hash-link" aria-label="Direct link to Demo" title="Direct link to Demo">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cgroups-v1">Cgroups V1<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#cgroups-v1" class="hash-link" aria-label="Direct link to Cgroups V1" title="Direct link to Cgroups V1">​</a></h3>
<p>这里我们用 k8s 来进行这个功能演示，首先我们需要一个正常的 K8s 集群，并且需要提前安装好 Nvidia 的所有组件。</p>
<ol>
<li>安装好之后我们可以使用如下的 Pod 进行测试是否能正常运行，如果能 running 则说明依赖组件都安装成功。</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: gpu-pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nodeSelector:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gpu-mounter-enable: enable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - name: cuda-container</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      image: docker.samzong.me/chrstnhntschl/gpu_burn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      resources:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        limits:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          nvidia.com/gpu: '1'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="2">
<li>创建一个没有使用 GPU 的Pod；</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: gpu-pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nodeSelector:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    gpu-mounter-enable: enable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - name: cuda-container</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      image: docker.samzong.me/chrstnhntschl/gpu_burn</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      command:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - sleep</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      args:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - '100000000'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      env:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       - name: NVIDIA_VISIBLE_DEVICES</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         value: "none"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="3">
<li>启动成功之后我们确定 Pod UID、ContainerID、PID 这三个变量：</li>
</ol>
<ul>
<li>UID</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get pod gpu-pod -o jsonpath='{.metadata.uid}’</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ace81d74-99ca-4b34-b60e-a60ec1442875</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>ContainerID</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get pod gpu-pod -o jsonpath='{.status.containerStatuses[0].containerID}’</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">containerd://4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>PID: 1145716</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ctr -n k8s.io task ls |grep 4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04    1145716    RUNNING</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>往 cgroupPath 中写入 device.allow 文件</li>
</ol>
<p>k8s 的 cgroupPath 由多个部分组成：<code>/sys/fs/cgroup/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-pod{UID}.slice/cri-containerd-{ContainerID}.scope</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># /sys/fs/cgroup/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-podace81d74_99ca_4b34_b60e_a60ec1442875.slice/cri-containerd-4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04.scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ echo 'c 195:0 rw' &gt; /sys/fs/cgroup/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-podace81d74_99ca_4b34_b60e_a60ec1442875.slice/cri-containerd-4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04.scope/devices.allow</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>写入之后 cgroup 就配置成功了，还需要配置 namespace 才可以使用。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cgroups-v2">Cgroups V2<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#cgroups-v2" class="hash-link" aria-label="Direct link to Cgroups V2" title="Direct link to Cgroups V2">​</a></h3>
<p>因为 cgroups v2的 device 不是写文件，是通过 ebpf 进行操作，所以需要借助一些工具才能写入 ebpf 的filter 规则。</p>
<p>这里就不讨论如何写入了，描述如何查看是否写入成功，我们可以借助 CLI 工具写入 ebpf rule.</p>
<ol>
<li>首先我们安装工具</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ apt update &amp;&amp; apt install bpftool -y</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>查看 cgroup 路径下是否设置了 device</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#bpftool cgroup tree {cgroupPath}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ bpftool cgroup tree /sys/fs/cgroup/kubepods.slice/kubepods-besteffort.slice/kubepods-besteffort-podace81d74_99ca_4b34_b60e_a60ec1442875.slice/cri-containerd-4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04.scope</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">ID       AttachType      AttachFlags     Name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">14962    device          multi</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>AttachType 为 device 表示设备过滤器。</li>
<li>Name 是挂载的 BPF 程序的名称。</li>
</ul>
<ol>
<li>查看详细的 BPF 程序信息</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#bpftool prog show id &lt;program_id&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ bpftool prog show id 14962</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">14962: cgroup_device  tag c394c0e22708d632</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  loaded_at 2025-01-04T11:29:58+0800  uid 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  xlated 3840B  jited 2172B  memlock 4096B</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Type: cgroup_device 表示该程序是设备过滤器。</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="namespace-1">Namespace<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#namespace-1" class="hash-link" aria-label="Direct link to Namespace" title="Direct link to Namespace">​</a></h3>
<p>我们通过 Cgroups 设置了 GPU 的资源限制之后，就需要在 Namespace中把设备隔离打开，否则看不见设备。</p>
<p>我们使用 Cgroups V1 中的容器环境，启动成功之后我们确定 PID 这个变量：</p>
<ul>
<li>PID: 1145716</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ctr -n k8s.io task ls |grep 4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">4b5ef4c625208800283bb58e9da3ccb69ce92bd840f3cf885931c513a901ab04    1145716    RUNNING</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>执行 nsenter 命令，进入指定进程的 namespace中</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ nsenter --target 1145716 --mount sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>使用 <code>mknod</code> 命令创建一个字符设备节点</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ mknod /dev/nvidia0 c 195 0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>/dev/nvidia0：这是设备文件路径，0 是设备编号，如果要挂载 1号设备，就用  /dev/nvidia1</li>
<li>c: 这是设备类型</li>
<li>195：这是设备 major</li>
<li>0: 这是设备 minor</li>
</ul>
<ol>
<li>修改权限</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ chmod 666 /dev/nvidia0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cli">CLI<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#cli" class="hash-link" aria-label="Direct link to CLI" title="Direct link to CLI">​</a></h2>
<p>上述都是需要一步一步的手动操作，这样便于理解这里面的细节，都在操作什么，理解完之后可以直接使用 CLI 命令来进行操作。</p>
<p><a href="https://raw.githubusercontent.com/lengrongfu/blogs/refs/heads/main/blog/static/img/2025-01/nvcli-linux?token=GHSAT0AAAAAACOWSLCYVTTXKF2F75XPW5ACZ3YXBIQ" target="_blank" rel="noopener noreferrer">nvcli-linux</a></p>
<p>nvcli 提供了两个字命令，mount 和 unmount 子命令；通过设置 —v 可以查看更详细的执行日志。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> $ ./nvcli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Support GPU hot loading and unloading to a Pod command line tool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nvcli [command]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Available Commands:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  help        Help about any command</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  mount       dynamic mount nvidia gpu device to pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  unmount     dynamic unmount nvidia gpu device to pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  version     Print the version number of Hugo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -h, --help                help for nvcli</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --kubeconfig string   kubeconfig file (default "/root/.kube/config")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --name string         pod name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --namespace string    namespace (default "default")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --v string            Log level for klog (0-10) (default "2")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Use "nvcli [command] --help" for more information about a command.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="mount">mount<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#mount" class="hash-link" aria-label="Direct link to mount" title="Direct link to mount">​</a></h3>
<p>mount 提供了一个 <code>—-mount</code> 的参数，主要是指定宿主机上 GPU 的 index，然后会被加载到容器中，可以接受一个数组。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./nvcli mount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nvcli mount [flags]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -h, --help                help for mount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --mount stringArray   mount nvidia gpu device index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Global Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --kubeconfig string   kubeconfig file (default "/root/.kube/config")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --name string         pod name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --namespace string    namespace (default "default")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --v string            Log level for klog (0-10) (default "2")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如下是一个参数 demo，指定 pod 的name，pod namespace 默认是defaule, <code>--kubeconfig</code> 默认读区当前根目录下的文件。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./nvcli mount --name=gpu-pod --mount=0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unmount">unmount<a href="https://lengrongfu.github.io/blog/gpu-dynamic-mount#unmount" class="hash-link" aria-label="Direct link to unmount" title="Direct link to unmount">​</a></h3>
<p><code>unmount</code> 提供了一个 <code>—-mount</code> 的参数，主要是指定宿主机上 GPU 的 index，然后会被从容器中卸载，可以接受一个数组。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./nvcli unmount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Usage:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  nvcli unmount [flags]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -h, --help                  help for unmount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --unmount stringArray   unmount nvidia gpu device index</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Global Flags:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --kubeconfig string   kubeconfig file (default "/root/.kube/config")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --name string         pod name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --namespace string    namespace (default "default")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      --v string            Log level for klog (0-10) (default "2")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如下是一个参数 demo，指定 pod 的name，pod namespace 默认是defaule, <code>--kubeconfig</code> 默认读区当前根目录下的文件。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./nvcli unmount --name=gpu-pod --unmount=0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes DRA" term="Kubernetes DRA"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubernetes 1.32 DRA 原理解析]]></title>
        <id>https://lengrongfu.github.io/blog/k8s-dra</id>
        <link href="https://lengrongfu.github.io/blog/k8s-dra"/>
        <updated>2024-11-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[我们通过 KEP 来了解 DRA 的最新工作原理。]]></summary>
        <content type="html"><![CDATA[<p>我们通过 KEP 来了解 DRA 的最新工作原理。</p>
<p>原文：</p>
<p><a href="https://mp.weixin.qq.com/s/KvgQSnPaTKDDjIzISaQopA" target="_blank" rel="noopener noreferrer">kubernetes 1.32 DRA 原理解析</a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="概述">概述<a href="https://lengrongfu.github.io/blog/k8s-dra#%E6%A6%82%E8%BF%B0" class="hash-link" aria-label="Direct link to 概述" title="Direct link to 概述">​</a></h3>
<p>新版本架构图</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/components-cdd8236535605340dbffe6cf495c5e1a.png" width="1047" height="460" class="img_ev3q"></p>
<p>核心设计了四个 CRD：</p>
<ul>
<li>DeviceClass：这是一个供应商提供的 device class，类似于 StorageClass。</li>
<li>ResourceSlice: 主要记录节点上可用的设备</li>
<li>ResourceClaim：定义需要多少设备以及它们必须具备哪些功能</li>
<li>ResourceClaimTemplate: 创建ResourceClaim的模版定义</li>
</ul>
<p>kube-controller-manager 中的新控制器可根据 ResourceClaimTemplates 创建 ResourceClaims，当 ResourceClaim 不再保留时，它会清除分配，从而使底层资源再次可用。</p>
<p>kube-scheduler 插件需要检测 Pod 的引用 ResourceClaim（直接或通过 ResourceClaimTemplates ），并确保在 Pod 调度之前分配资源。</p>
<p>DRA 驱动程序需要有如下功能：</p>
<ul>
<li><em>admission webhook</em>（可选）：一个中心组件，用于在创建 <code>ResourceClaims</code>、ResourceClaimTemplates 和 DeviceClasses 时检查其中的不透明配置参数。如果没有它，则只能在 Pod 即将在节点上运行时检测到无效参数。</li>
<li><em>kubelet插件</em>（必选）：发布设备信息，与kubelet配合准备节点上设备的使用。</li>
</ul>
<p>下面我们来看下 <a href="http://resource.k8s.io/" target="_blank" rel="noopener noreferrer">**resource.k8s.io</a>** 这个资源组中定义的几个 CRD。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resourceslice">ResourceSlice<a href="https://lengrongfu.github.io/blog/k8s-dra#resourceslice" class="hash-link" aria-label="Direct link to ResourceSlice" title="Direct link to ResourceSlice">​</a></h3>
<p>对于每个节点，都会创建一个或多个 ResourceSlice 对象。节点上的驱动程序会以节点为所有者发布这些对象，因此当节点发生故障时，这些对象会被删除，然后被移除。</p>
<p>所有列表类型都是原子的，因为这样可以更轻松地跟踪服务器端应用 (SSA) 的所有者。无需修补单个列表元素，并且只有一个所有者。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">type ResourceSliceSpec struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 驱动程序名字</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Driver string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Pool 描述的是此 ResourceSlice 所属的池。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Pool ResourcePool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // NodeName 标识在此池中提供资源的节点。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    NodeName string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // NodeSelector 定义哪些节点可以访问这个资源池</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    NodeSelector *core.NodeSelector</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 表示所有节点都可以访问Pool中的资源，这个感觉是给网络设备使用的</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AllNodes bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 定义节点上的所有device</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Devices []Device</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// ResourcePool describes the pool that ResourceSlices belong to.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ResourcePool struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // pool的唯一名字，在节点级别通常是节点name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 没懂这个字段</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Generation int64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ResourceSliceCount 是此 Generation 时池中的 ResourceSlice 总数</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ResourceSliceCount int64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resourceclaim"><strong>ResourceClaim</strong><a href="https://lengrongfu.github.io/blog/k8s-dra#resourceclaim" class="hash-link" aria-label="Direct link to resourceclaim" title="Direct link to resourceclaim">​</a></h3>
<ul>
<li><code>scheduler</code> 程序必须在 ResourceClaim 中设置终结器 <code>Finalizer = "resource.kubernetes.io/delete-protection"</code>，然后才能添加分配。</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">type DeviceClaim struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 请求代表对不同设备的单独请求，这些请求必须全部满足。如果为空，则无需分配任何内容。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Requests []DeviceRequest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 分配给声明的设备集必须满足这些约束。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Constraints []DeviceConstraint</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 此字段保存可满足此声明中的请求的多个潜在驱动程序的配置。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Config []DeviceClaimConfiguration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Score *SomeScoringStruct</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type DeviceRequest struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // pod.spec.containers[].resources.claims 的引用名称</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Name string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // DeviceClass</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    DeviceClassName string</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 选择器定义特定设备必须满足的条件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Selectors []DeviceSelector</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // AllocationMode 分配模式</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // - ExactCount: 此请求针对特定数量的设备。这是默认值。确切数量在计数字段中提供。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // - All: 此请求针对池中的所有匹配设备。如果某些设备已分配，则分配将失败，除非请求 adminAccess。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AllocationMode DeviceAllocationMode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 当模式是ExactCount，需要指定请求的数量; 默认值是1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Count int64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // AdminAccess 表示这是对设备的管理访问权的声明</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AdminAccess bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type DeviceSelector struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // CEL 包含用于选择设备的 CEL 表达式。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CEL *CELDeviceSelector</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">type ResourceClaimStatus struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 一旦claim被成功分配，就会设置分配。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Allocation *AllocationResult</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ReservedFor 表示当前允许使用声明的实体</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ReservedFor []ResourceClaimConsumerReference</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deviceclass"><strong>DeviceClass</strong><a href="https://lengrongfu.github.io/blog/k8s-dra#deviceclass" class="hash-link" aria-label="Direct link to deviceclass" title="Direct link to deviceclass">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">type DeviceClassSpec struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 每个选择器都必须由通过此类声明的设备来满足。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Selectors []DeviceSelector</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // Config 定义适用于通过此类声明的每个设备的配置参数。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Config []DeviceClassConfiguration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resourceclaimtemplate"><strong>ResourceClaimTemplate</strong><a href="https://lengrongfu.github.io/blog/k8s-dra#resourceclaimtemplate" class="hash-link" aria-label="Direct link to resourceclaimtemplate" title="Direct link to resourceclaimtemplate">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// ResourceClaimTemplateSpec 包含 ResourceClaim 的元数据和字段。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">type ResourceClaimTemplateSpec struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    metav1.ObjectMeta</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // ResourceClaimSpec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Spec ResourceClaimSpec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="管理资源"><strong>管理资源</strong><a href="https://lengrongfu.github.io/blog/k8s-dra#%E7%AE%A1%E7%90%86%E8%B5%84%E6%BA%90" class="hash-link" aria-label="Direct link to 管理资源" title="Direct link to 管理资源">​</a></h3>
<p>kubelet 必须确保在运行使用特定资源实例的第一个 Pod 之前，资源在节点上可用，并在最后一个使用该资源的 Pod 终止后，使资源在其他地方再次可用。对于这两个操作，kubelet 都会调用 kubelet 插件的两个方法 <code>NodeUnprepareResources</code>  和 <code>NodePrepareResources</code>。</p>
<p>如果这是节点上使用特定资源实例的最后一个 Pod，则必须在允许删除 Pod 之前成功调用 <code>NodeUnprepareResource</code>（见下文）。这确保了网络连接资源再次可用于其他 Pod，包括那些可能被调度到其他节点的 Pod。它还指示解除分配和删除 ResourceClaim 是安全的。</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/kubelet-690b9f266ea83de09273b90bfca89a85.png" width="569" height="753" class="img_ev3q"></p>
<p><strong>NodePrepareResource</strong></p>
<p>当想要使用指定资源的 Pod 被调度到节点上时，kubelet 会调用此 RPC。插件应假定此 RPC 将在将使用资源的节点上执行。</p>
<p>插件应确保分配的资源有 CDI 格式的 json 文件。在创建使用该资源的容器之前，运行时应使用这些文件来更新运行时配置。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">message NodePrepareResourcesRequest {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     // 需要准备的 ResourceClaims 列表。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     repeated Claim claims = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">message NodePrepareResourcesResponse {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 已完成准备的 ResourceClaims</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    map&lt;string, NodePrepareResourceResponse&gt; claims = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">message NodePrepareResourceResponse {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 设备列表</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    repeated Device devices = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    //  错误信息</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    string error = 2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">message Device {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 声明中与此设备关联的请求。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    repeated string request_names = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 包含设备的池</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    string pool_name = 2;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 设备本身</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    string device_name = 3;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 单个设备实例可能映射到多个 CDI 设备 ID。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    repeated string cdi_device_ids = 4 [(gogoproto.customname) = "CDIDeviceIDs"];</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>此处<code>的request_names</code>允许 kubelet 为使用特定请求中的设备而不是声明的所有设备的容器找到正确的 CDI ID。</p>
<p><strong>NodeUnprepareResources</strong></p>
<p>Kubelet 插件必须实现此 RPC 调用。此 RPC 是&nbsp;<code>NodePrepareResource</code>&nbsp;的反向操作。此 RPC 必须撤消相应&nbsp;<code>NodePrepareResource</code>&nbsp;的工作。对于每个成功的&nbsp;<code>NodePrepareResource，kubelet</code>&nbsp;至少应调用一次此 RPC。插件应假定此 RPC 将在使用资源的节点上执行。</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">message NodeUnprepareResourcesRequest {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 需要释放的 ResourceClaims 列表。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    repeated Claim claims = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">message NodeUnprepareResourcesResponse {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 已撤销准备的 ResourceClaims。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    map&lt;string, NodeUnprepareResourceResponse&gt; claims = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">message NodeUnprepareResourceResponse {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    // 如果有错误</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    string error = 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>参考：<a href="https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/4381-dra-structured-parameters#design-details" target="_blank" rel="noopener noreferrer">https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/4381-dra-structured-parameters#design-details</a></p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes DRA" term="Kubernetes DRA"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubernetes 1.31 DRA Nvidia GPU测试]]></title>
        <id>https://lengrongfu.github.io/blog/k8s-nvidia-dra-test</id>
        <link href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test"/>
        <updated>2024-11-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[我们通过使用 Nvidia 来验证 DRA 相关的能力。]]></summary>
        <content type="html"><![CDATA[<p>我们通过使用 <code>Nvidia</code> 来验证 DRA 相关的能力。</p>
<p>原文：(kubernetes 1.31 DRA Nvidia GPU测试)[<a href="https://mp.weixin.qq.com/s/PZ6FYLlr9eveqL0M0q4rmg" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/PZ6FYLlr9eveqL0M0q4rmg</a>]</p>
<p>操作系统：ubuntu 22.04</p>
<p>runtime：docker</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="安装-docker">安装 docker<a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#%E5%AE%89%E8%A3%85-docker" class="hash-link" aria-label="Direct link to 安装 docker" title="Direct link to 安装 docker">​</a></h3>
<ol>
<li>使用便捷脚本来安装 docker</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> $ curl -fsSL https://get.docker.com -o get-docker.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> $ sudo sh get-docker.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="安装-kind">安装 <code>kind</code><a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#%E5%AE%89%E8%A3%85-kind" class="hash-link" aria-label="Direct link to 安装-kind" title="Direct link to 安装-kind">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># For AMD64 / x86_64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">[ $(uname -m) = x86_64 ] &amp;&amp; curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chmod +x ./kind</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo mv ./kind /usr/local/bin/kind</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="通过-apt-安装-nvidia-container-toolkit">通过 apt 安装 NVIDIA Container Toolkit<a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#%E9%80%9A%E8%BF%87-apt-%E5%AE%89%E8%A3%85-nvidia-container-toolkit" class="hash-link" aria-label="Direct link to 通过 apt 安装 NVIDIA Container Toolkit" title="Direct link to 通过 apt 安装 NVIDIA Container Toolkit">​</a></h3>
<ol>
<li>配置 repository</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  &amp;&amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>更新 package</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get update</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>安装 NVIDIA Container Toolkit</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo apt-get install -y nvidia-container-toolkit</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="配置docker-运行时">配置docker 运行时<a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#%E9%85%8D%E7%BD%AEdocker-%E8%BF%90%E8%A1%8C%E6%97%B6" class="hash-link" aria-label="Direct link to 配置docker 运行时" title="Direct link to 配置docker 运行时">​</a></h3>
<ol>
<li>将 NVIDIA 容器运行时配置为<strong>默认</strong>Docker 运行时.</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo nvidia-ctk runtime configure --runtime=docker --set-as-default</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>重新启动 Docker 以应用更改</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo systemctl restart docker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>配置 NVIDIA 容器运行时使用卷挂载来选择要注入容器的设备.</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># /etc/nvidia-container-runtime/config.toml</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo nvidia-ctk config --in-place --set accept-nvidia-visible-devices-as-volume-mounts=true</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h1>安装 k8s 集群和 Nvidia DRA</h1>
<ol>
<li>克隆此存储库并安装集群</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git clone https://github.com/NVIDIA/k8s-dra-driver.git</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cd k8s-dra-driver</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>使用<code>kind</code>创建一个集群来运行演示</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./demo/clusters/kind/create-cluster.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>安装 <code>kubectl</code> 命令和 <code>helm</code></li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 安装kubectl</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 安装helm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ chmod 700 get_helm.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./get_helm.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>构建 nvidia dra 图像</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 如果上面的命令执行错误，就先执行这个命令</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ make build-image</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./demo/clusters/kind/build-dra-driver.sh</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 把构建出来的镜像load到kind中</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ k8s-dra-driver-cluster-image nvcr.io/nvidia/cloud-native/k8s-dra-driver:v0.1.0-ubuntu20.04 --name k8s-dra-driver-cluster</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>安装 DRA 到集群中</li>
</ol>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ ./demo/clusters/kind/install-dra-driver.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>安装成功之后，应该显示<code>nvidia-dra-driver</code>命名空间中运行的两个 pod：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl get pods -n nvidia-dra-driver</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">NAME                                         READY   STATUS    RESTARTS   AGE</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nvidia-k8s-dra-driver-kubelet-plugin-t5qgz   1/1     Running   0          44s</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h1>运行Demo</h1>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="case1-同一个pod的两个容器共享一个设备">Case1: 同一个Pod的两个容器共享一个设备<a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#case1-%E5%90%8C%E4%B8%80%E4%B8%AApod%E7%9A%84%E4%B8%A4%E4%B8%AA%E5%AE%B9%E5%99%A8%E5%85%B1%E4%BA%AB%E4%B8%80%E4%B8%AA%E8%AE%BE%E5%A4%87" class="hash-link" aria-label="Direct link to Case1: 同一个Pod的两个容器共享一个设备" title="Direct link to Case1: 同一个Pod的两个容器共享一个设备">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply --filename=demo/specs/quickstart/gpu-test2.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="case2-创建两个pod共用同一张卡">Case2: 创建两个Pod共用同一张卡<a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#case2-%E5%88%9B%E5%BB%BA%E4%B8%A4%E4%B8%AApod%E5%85%B1%E7%94%A8%E5%90%8C%E4%B8%80%E5%BC%A0%E5%8D%A1" class="hash-link" aria-label="Direct link to Case2: 创建两个Pod共用同一张卡" title="Direct link to Case2: 创建两个Pod共用�同一张卡">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl apply --filename=demo/specs/quickstart/gpu-test3.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="case3-两个pod共享同一类型的卡指定型号">Case3: 两个Pod共享同一类型的卡，指定型号<a href="https://lengrongfu.github.io/blog/k8s-nvidia-dra-test#case3-%E4%B8%A4%E4%B8%AApod%E5%85%B1%E4%BA%AB%E5%90%8C%E4%B8%80%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8D%A1%E6%8C%87%E5%AE%9A%E5%9E%8B%E5%8F%B7" class="hash-link" aria-label="Direct link to Case3: 两个Pod共享同一类型的卡，指定型号" title="Direct link to Case3: 两个Pod共享同一类型的卡，指定型号">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: gpu-test3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: resource.k8s.io/v1alpha3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: ResourceClaim</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  namespace: gpu-test3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: single-gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  devices:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    requests:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    - name: gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      deviceClassName: gpu.nvidia.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      selectors:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - cel:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          expression: |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            device.attributes['gpu.nvidia.com'].productName=='Tesla T4'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  namespace: gpu-test3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: pod1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  labels:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    app: pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - name: ctr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    image: ubuntu:22.04</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    command: ["bash", "-c"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    args: ["nvidia-smi -L; trap 'exit 0' TERM; sleep 9999 &amp; wait"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resources:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      claims:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - name: shared-gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resourceClaims:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - name: shared-gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resourceClaimName: single-gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">---</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">metadata:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  namespace: gpu-test3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name: pod2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  labels:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    app: pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">spec:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  containers:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - name: ctr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    image: ubuntu:22.04</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    command: ["bash", "-c"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    args: ["nvidia-smi -L; trap 'exit 0' TERM; sleep 9999 &amp; wait"]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resources:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      claims:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - name: shared-gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  resourceClaims:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - name: shared-gpu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    resourceClaimName: single-gpu</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes DRA" term="Kubernetes DRA"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[开发 Kubernetes debug 的几种手段]]></title>
        <id>https://lengrongfu.github.io/blog/k8s-debug</id>
        <link href="https://lengrongfu.github.io/blog/k8s-debug"/>
        <updated>2024-09-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[我们在开发 Kubernetes 遇到最大的难题就是如何调试组件，因为它涉及到的组件较多，工作流程较长，如果是较小的代码改动，我们可以通过添加单元测试、E2E  等手段进行功能验证。]]></summary>
        <content type="html"><![CDATA[<p>我们在开发 <code>Kubernetes</code> 遇到最大的难题就是如何调试组件，因为它涉及到的组件较多，工作流程较长，如果是较小的代码改动，我们可以通过添加单元测试、E2E  等手段进行功能验证。</p>
<p>但是如果遇到较大功能的功能，还是需要进行测试，乃至于进行 debug，但是存在如下几个问题：</p>
<ul>
<li>通常开发都是基于最新代码开发的，就导致版本较新；那依赖的组件版本也需要比较高才行；比如开发 <code>Kubelet</code> , 那依赖的 <code>kube-apiserver</code> 版本就需要接近最新，具体可以看 <code>kubernetes</code> 官网的<a href="https://kubernetes.io/releases/version-skew-policy/" target="_blank" rel="noopener noreferrer">版本匹配</a>文档。</li>
<li><code>Kubernetes</code> 组件启动通常会依赖其它服务，以及集群配置，解决起来比较麻烦。</li>
<li>使用 <code>IDE</code> 进行 <code>debug</code> 有难度，需要解决服务依赖问题。</li>
</ul>
<p>下面从本人的开发 <code>debug</code> 经验中总结了常用的两种方式，一种是通过打印日志然后部署服务来分析执行逻辑、一种是直接通过 <code>IDE</code> 进行 <code>DEBUG</code>.</p>
<p>要开发一个 <code>Kubernetes</code> 的需求，通常需要有准备工作、实现需求和测试三个步骤；</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="准备工作">准备工作<a href="https://lengrongfu.github.io/blog/k8s-debug#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C" class="hash-link" aria-label="Direct link to 准备工作" title="Direct link to 准备工作">​</a></h2>
<ol>
<li>一台 <code>Linux</code> 服务器，最好是安装 <code>Ubuntu22.04</code> 的操作系统，或者根据需求来决定需要安装什么。资源最少 <code>8</code> 核 CPU <code>16G</code> 的内存 <code>150G</code> 的磁盘。</li>
<li><code>Linux</code> 服务器机器安装好最新的 <code>golang</code> 版本，开通 <code>ssh</code> 端口，修改使其可以通过 <code>root</code> 进行远程登录。</li>
<li>部署一个最新的 <code>Kubernetes</code> 集群，最好使用二进制启动 <code>k8s</code> 的核心组件，这样便于调试；单节点足够。</li>
</ol>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="安装-kubernetes-集群">安装 Kubernetes 集群<a href="https://lengrongfu.github.io/blog/k8s-debug#%E5%AE%89%E8%A3%85-kubernetes-%E9%9B%86%E7%BE%A4" class="hash-link" aria-label="Direct link to 安装 Kubernetes 集群" title="Direct link to 安装 Kubernetes 集群">​</a></h3>
<p>这里介绍一个工具 <a href="https://github.com/lengrongfu/kubeasz/blob/master/docs/setup/quickStart.md" target="_blank" rel="noopener noreferrer"><code>kubeasz</code></a> , 可以快速的安装出一个 <code>kubernetes</code> 单机集群，并且以二进制的形式启动核心组件。</p>
<p>我们为什么不用 <code>kubeadm</code> 呢？因为它启动的核心 <code>pod</code> 的方式是通过 <code>static</code> 的形式启动的，这样就导致不能进行调试，而且需要编译镜像才能进行日志调试。</p>
<p>安装步骤：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ export release=3.6.5</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ wget https://github.com/lengrongfu/kubeasz/releases/download/${release}/ezdown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ chmod +x ./ezdown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./ezdown -D</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ./ezdown -S</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ docker exec -it kubeasz ezctl start-aio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ source ~/.bashrc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ kubectl version</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="实现需求">实现需求<a href="https://lengrongfu.github.io/blog/k8s-debug#%E5%AE%9E%E7%8E%B0%E9%9C%80%E6%B1%82" class="hash-link" aria-label="Direct link to 实现需求" title="Direct link to 实现需求">​</a></h2>
<p>因为 <code>Kubernetes</code> 大多数都是在 <code>Linux</code> 上运行，很多逻辑需要 <code>Linux</code> 操作系统下才可以编辑，通常大家的本地开机都是 <code>MacOS</code> ，导致不能编写 <code>Linux</code>  相关的逻辑。</p>
<p>下面我以本人经常使用的两种方案来介绍，一种是在本地开发，一种是在远程开发。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="本地开发-k8s">本地开发 K8s<a href="https://lengrongfu.github.io/blog/k8s-debug#%E6%9C%AC%E5%9C%B0%E5%BC%80%E5%8F%91-k8s" class="hash-link" aria-label="Direct link to 本地开发 K8s" title="Direct link to 本地开发 K8s">​</a></h3>
<p>我们在本机上启动一个 <code>Linux</code> 操作系统的容器，或者是用  <code>Multipass</code> 来启动 <code>Ubuntu</code> 虚拟机.</p>
<p><code>Multipass</code> 功能很强大，就是使用比较繁琐，之前小编也用过，但是后面发现启动一个容器也够用了，就一直沿用到现在。</p>
<p>构建一个包含环境的镜像，首先通过如下的 <code>Dockerfile</code>:</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">FROM ubuntu</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">22.04</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">get update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">get install </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">y openssh</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN sed </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">i 's</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">#PermitRootLogin prohibit</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">password</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">PermitRootLogin yes</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">' </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">etc</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">ssh</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">sshd_config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN sed </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">i 's</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">PermitRootLogin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token operator" style="color:#393A34">*</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">PermitRootLogin yes</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">' </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">etc</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">ssh</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">sshd_config</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN echo 'root</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">123456</span><span class="token plain">' </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> chpasswd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">get install </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">y git vim curl wget cmake</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt install software</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">properties</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">common </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN add</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">apt</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">repository ppa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">longsleep</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">golang</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">backports</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN apt install golang</span><span class="token operator" style="color:#393A34">-</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">y</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">etc</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">init</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">d</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">ssh start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后进行构建：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ docker build -t golang-env:dev -f Dockerfile .</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>启动容器，并且把本地的 <code>golang</code> 目录挂载到容器目录中，这样避免修改的代码丢失：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ docker run  </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">d </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">p </span><span class="token number" style="color:#36acaa">50024</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">22</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">v </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">Users</span><span class="token operator" style="color:#393A34">/</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">local</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">goworspace</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">code</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">src</span><span class="token punctuation" style="color:#393A34">:</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">root</span><span class="token operator" style="color:#393A34">/</span><span class="token keyword" style="color:#00009f">go</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">src golang</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">env</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">dev </span><span class="token operator" style="color:#393A34">/</span><span class="token plain">usr</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">sbin</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">sshd </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">D</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后继续参考远程开发 <code>k8s</code> 部分，用本地开发的好处是可以给 <code>Docker</code> 配置本地的代理、可以登录 <code>Github Copilot</code> 等插件。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="远程开发-k8s">远程开发 K8s<a href="https://lengrongfu.github.io/blog/k8s-debug#%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91-k8s" class="hash-link" aria-label="Direct link to 远程开发 K8s" title="Direct link to 远程开发 K8s">​</a></h3>
<p>这里我们通过连接远程 <code>Linux</code> 服务器或者是本地的容器来构建一个开发环境。</p>
<ol>
<li>首先需要下载一个 <code>jetbrains</code> ****家最新的任意一个编辑器，打开编辑器之后不要打开项目，在编辑器首页有一个 <code>Remote Development</code> 的菜单。</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/remote-dev-05d2e8465355e4bfbdc0e24b263f4a91.png" width="426" height="626" class="img_ev3q"></p>
<ol>
<li>点击 <code>SSH</code> 进行创建 Project 和配置；这里填写用户名、主机地址和端口</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/remote-ssh-7aae9e9ad27302191128f2a08ac35337.png" width="3802" height="584" class="img_ev3q"></p>
<ol>
<li>连接之后点击 + 号添加项目</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/remote-add-47740e2e36625a3b323a59ca68412aab.png" width="3364" height="162" class="img_ev3q"></p>
<ol>
<li>之后选择好 IDE version 和 项目目录，点击右下角的 Start IDE and Connect. 按钮即可。</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/remote-connect-e5640f17f0da3b30f2d79019bd285f79.png" width="2000" height="162" class="img_ev3q"></p>
<p>成功之后将打开 <code>Golang</code> 编辑器的界面，和在本地开发一样；剩下的就是编写代码。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="测试需求">测试需求<a href="https://lengrongfu.github.io/blog/k8s-debug#%E6%B5%8B%E8%AF%95%E9%9C%80%E6%B1%82" class="hash-link" aria-label="Direct link to 测试需求" title="Direct link to 测试需求">​</a></h2>
<p>这里我们以测试 <code>Kubelet</code> 为例来说明，使用 <code>kubeaze</code> 安装的 <code>Kubernetes</code> 集群核心组件都是使用 <code>systemctl</code> 启动的，所以我们测试的时候可以使其停止，然后启动自己修改代码的服务即可。</p>
<p>假如我们通过打印日志的方式来进行测试， 只需要把本地代码提价到服务器上即可。然后执行 <code>make all</code> 或者 <code>make all WHAT=cmd/kubelet GOFLAGS=-v</code> 只编译指定项目。</p>
<p>编译生成的二进制文件在&nbsp;<code>_output/bin/</code>&nbsp;目录下，这个是网络上通常的说法，但是很奇怪我的编译后不再这个目录下，在 <code>~/go/bin</code> 目录下，可以都找找看。</p>
<p>然后查看下编译后的版本信息 <code>~/go/bin/kubelet —version</code> .</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="命令行测试">命令行测试<a href="https://lengrongfu.github.io/blog/k8s-debug#%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="Direct link to 命令行测试" title="Direct link to 命令行测试">​</a></h3>
<ol>
<li>通过 <code>ps</code> 获取 <code>kubelet</code> 启动命令，需要先找到启动参数。</li>
<li>停止之前的 <code>kubelet</code> 服务 <code>systemctl stop kubelet.service</code></li>
<li>使用编译后的二进制启动以及添加默认的参数。</li>
</ol>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ide-debug">IDE debug<a href="https://lengrongfu.github.io/blog/k8s-debug#ide-debug" class="hash-link" aria-label="Direct link to IDE debug" title="Direct link to IDE debug">​</a></h3>
<ol>
<li>通过 <code>ps</code> 获取 <code>kubelet</code> 启动命令，需要先找到启动参数。</li>
<li>停止之前的 <code>kubelet</code> 服务 <code>systemctl stop kubelet.service</code></li>
<li>把启动参数填写进去即可进行 Debug.</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/remote-debug-902aae2f40f1b51b694455f29446971d.png" width="1600" height="1360" class="img_ev3q"></p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Developer Env" term="Developer Env"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubelet源码分析：PodAdmit]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-podadmit</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-podadmit"/>
        <updated>2024-09-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[之前讲过 Kubelet 结构体中的 syncLoopIteration 方法接收多个 channel 数据源的信息，并调用相应的 handler 处理，其中 configCh 是 kubelet 获取 pod 的数据源，比如通过 informer 从 api 中拉取到一个新的 Pod ，对应的 handler 为 HandlePodAdditions .]]></summary>
        <content type="html"><![CDATA[<p>之前讲过 <code>Kubelet</code> 结构体中的 <code>syncLoopIteration</code> 方法接收多个 <code>channel</code> 数据源的信息，并调用相应的 <code>handler</code> 处理，其中 <code>configCh</code> 是 <code>kubelet</code> 获取 <code>pod</code> 的数据源，比如通过 <code>informer</code> 从 <code>api</code> 中拉取到一个新的 <code>Pod</code> ，对应的 <code>handler</code> 为 <code>HandlePodAdditions</code> .</p>
<p><code>configCh</code> 的数据来源有三个，其中一个就是 <code>api</code> ，通过配置 <code>spec.nodeName FieldSelector</code> 的 <code>ListOptions</code> 来向 <code>api</code> 获取所有 <code>ns</code> 下指定 <code>nodeName</code> 的 <code>pod</code>.</p>
<p><code>HandlePodAdditions</code> 接下来通过 <code>canAdmitPod</code> 方法判断该 <code>Po</code> d是否可以被 <code>kubelet</code> 创建，其通过 <code>kubelet</code> 对象的 <code>admitHandlers</code> 获取注册好的 <code>handler</code> 对象，并逐一调用这些对象的 <code>Admit</code>方法检查 <code>pod</code> .</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// pods为kubelet中 正在运行的 &amp;&amp; 已经被admit确认过没问题的 &amp;&amp; 不是terminated的 pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kl </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Kubelet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">canAdmitPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pods </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// the kubelet will invoke each pod admit handler in sequence</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// if any handler rejects, the pod is rejected.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// TODO: move out of disk check into a pod admitter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// TODO: out of resource eviction should have a pod admitter call-out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	attrs </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> OtherPods</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> pods</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果开启原地更新，还需要把 pod 的资源进行用新数据更新一下。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> utilfeature</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultFeatureGate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Enabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">features</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InPlacePodVerticalScaling</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Use allocated resources values from checkpoint store (source of truth) to determine fit</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		otherPods </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pods</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> pods </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			op </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">DeepCopy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateContainerResourceAllocation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">op</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			otherPods </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">otherPods</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> op</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OtherPods </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> otherPods</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podAdmitHandler </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> podAdmitHandler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Admit </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Pod admission denied"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"podUID"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"reason"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reason</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"message"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reason</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Message</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/pod-admit-dfdaffa7a2853d42eeb146a2cd2ad0ce.png" width="686" height="976" class="img_ev3q"></p>
<p>而 <code>kubelet</code> 对象的 <code>admitHandlers</code> 是在如下 <code>NewMainKubelet</code> 方法中注册，总计注册了六个 <code>Admit</code> .</p>
<ul>
<li>Eviction Admit</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">evictionAdmitHandler</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>System Allowlist Admit</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sysctlsAllowlist</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Allocate Resources Admit</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">containerManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetAllocateResourcesPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Predicate Admit</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewPredicateAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getNodeAnyWay</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> criticalPodAdmissionHandler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">containerManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UpdatePluginResources</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>AppArmor Admit</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewAppArmorAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">appArmorValidator</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Shutdown Admit</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">klet</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admitHandlers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddPodAdmitHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shutdownAdmitHandler</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="admit-接口">Admit 接口<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#admit-%E6%8E%A5%E5%8F%A3" class="hash-link" aria-label="Direct link to Admit 接口" title="Direct link to Admit 接口">​</a></h3>
<p><code>Admit</code> 评估一个 <code>pod</code> 是否可以被接纳。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> PodAdmitHandler </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> PodAdmitResult</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>Admit</code> 的参数结构如下：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> PodAdmitAttributes </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 当前正则评估的 Pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 除去评估之外 kubelet 接收的所有 Pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	OtherPods </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>Admit</code>  的返回值如下：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// PodAdmitResult provides the result of a pod admission decision.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> PodAdmitResult </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果true，则评估通过</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Admit </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 简短地说明为什么该 Pod 不能被接纳.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Reason </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 一条简短消息，解释为什么该 Pod 无法进入</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Message </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="eviction-admit">Eviction Admit<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#eviction-admit" class="hash-link" aria-label="Direct link to Eviction Admit" title="Direct link to Eviction Admit">​</a></h3>
<p>如果为了节点稳定性而不允许进入，则 <code>Admit</code> 会拒绝该 <code>pod</code>。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">managerImpl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RLock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RUnlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// node 没有 condition 就直接通过，可以不用判定 Readay 的 Condition 吗？</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nodeConditions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 即使在资源压力下也要接纳关键 pod，因为它们是系统稳定性所必需的。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 判定pod是否是static pod、高优先级pod，需要 &gt;= 2000000000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> kubelettypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsCriticalPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 除内存压力之外的其他条件会拒绝所有 Pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nodeOnlyHasMemoryPressureCondition </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hasNodeCondition</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nodeConditions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NodeMemoryPressure</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nodeConditions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> nodeOnlyHasMemoryPressureCondition </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		notBestEffort </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodQOSBestEffort </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> v1qos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetPodQOS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> notBestEffort </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// When node has memory pressure, check BestEffort Pod's toleration:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// admit it if tolerates memory pressure taint, fail for other tolerations, e.g. DiskPressure.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> corev1helpers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">TolerationsTolerateTaint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Tolerations</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Taint</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">    v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TaintNodeMemoryPressure</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Effect</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TaintEffectNoSchedule</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  Reason</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nodeConditionMessageFmt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">nodeConditions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="system-allowlist-admit">System Allowlist Admit<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#system-allowlist-admit" class="hash-link" aria-label="Direct link to System Allowlist Admit" title="Direct link to System Allowlist Admit">​</a></h3>
<p>主要是看用户写的 <code>Sysctls</code> 是否是准入的操作：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">patternAllowlist</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	pod </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果没有设置SecurityContext 或者 SecurityContext.Sysctls 字段，则直接通过</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SecurityContext </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SecurityContext</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Sysctls</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SecurityContext</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Sysctls </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">validateSysctl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">HostNetwork</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">HostIPC</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  ForbiddenReason</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"forbidden sysctl: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>设置的固定 <code>Sysctls</code> 的 <code>Key</code>, 或者也可以通过配置的 <code>prefix</code> 来进行判定，比如: <code>net.ipv6.neigh.*</code> 这种。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> safeSysctls </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">sysctl</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"kernel.shm_rmid_forced"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net.ipv4.ip_local_port_range"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net.ipv4.tcp_syncookies"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net.ipv4.ping_group_range"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net.ipv4.ip_unprivileged_port_start"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token string" style="color:#e3116c">"net.ipv4.ip_local_reserved_ports"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kernel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> utilkernel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">IPLocalReservedPortsNamespacedKernelVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token string" style="color:#e3116c">"net.ipv4.tcp_keepalive_time"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kernel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> utilkernel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TCPKeepAliveTimeNamespacedKernelVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token string" style="color:#e3116c">"net.ipv4.tcp_fin_timeout"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kernel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> utilkernel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TCPFinTimeoutNamespacedKernelVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token string" style="color:#e3116c">"net.ipv4.tcp_keepalive_intvl"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kernel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> utilkernel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TCPKeepAliveIntervalNamespacedKernelVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token string" style="color:#e3116c">"net.ipv4.tcp_keepalive_probes"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kernel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> utilkernel</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TCPKeepAliveProbesNamespacedKernelVersion</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="allocate-resources-admit">Allocate Resources Admit<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#allocate-resources-admit" class="hash-link" aria-label="Direct link to Allocate Resources Admit" title="Direct link to Allocate Resources Admit">​</a></h3>
<p>主要进行资源分配准入，比如设备插件、cpu、memory等，核心实现在 <code>topologyManager</code> 中：</p>
<ul>
<li>添加设备插件 <code>Allocate</code> 准入校验</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">deviceManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> devicemanager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewManagerImpl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">machineInfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Topology</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">topologyManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">topologyManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddHintProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">deviceManager</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>添加 <code>CPU</code> 准入校验</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cpuManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cpumanager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewManager</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUManagerPolicy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUManagerPolicyOptions</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CPUManagerReconcilePeriod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		machineInfo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NodeAllocatableConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ReservedSystemCPUs</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetNodeAllocatableReservation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">KubeletRootDir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">topologyManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">topologyManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddHintProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cpuManager</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>添加 <code>Memory</code> 准入校验</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">memoryManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> memorymanager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewManager</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExperimentalMemoryManagerPolicy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			machineInfo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetNodeAllocatableReservation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExperimentalMemoryManagerReservedMemory</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			nodeConfig</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">KubeletRootDir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">topologyManager</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">topologyManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddHintProvider</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">memoryManager</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>因为 <code>topologyManager</code> 有三种 <code>topology</code> 策略配置, 分别是 <code>none</code> <code>pod</code> <code>container</code> . 此处这里就不展开讲，我们默认按照 <code>none</code> 的维度来讨论。</p>
<p>每个容器（initContainer 和 containers ）每个都需要进行资源准入校验，每个容器都需要最少进行 <code>cpu</code> 和 <code>memory</code> 校验，如果还涉及到 <code>device-plugin</code> 的话也需要校验。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">scope</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">allocateAlignedResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> container </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Container</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> provider </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hintProviders </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> provider</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Allocate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> container</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里涉及到的具体每个资源分配校验就不再进行展开，核心就是看用户请求的资源能不能分配成功，如果分配失败就会拒绝；</p>
<p>得出一个结论 <code>Pod</code> 的资源分配是在 <code>kubelet</code> 接收到之后进入 <code>syncLoopIteration</code> 之后就会同步进行分配，其次在 <code>syncPod</code> 的处理逻辑中会有一次补偿机制。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="predicate-admit">Predicate Admit<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#predicate-admit" class="hash-link" aria-label="Direct link to Predicate Admit" title="Direct link to Predicate Admit">​</a></h3>
<p>预选 <code>Admit</code> ，主要再次判定调度器预选的数据是否满足。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">predicateAdmitHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> PodAdmitResult </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	node</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getNodeAnyWayFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ErrorS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Cannot get Node info"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">"InvalidNodeInfo"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Kubelet cannot get node info."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	admitPod </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// node select 相关的这些label，进行判定是否满足，如果不满足，就进行拒绝。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rejectPodAdmissionBasedOnOSSelector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> node</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 判定 pod.Spec.OS.Name 这个字段是否满足要求</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rejectPodAdmissionBasedOnOSField</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	pods </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OtherPods</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nodeInfo </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> schedulerframework</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewNodeInfo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pods</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nodeInfo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">SetNode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// TODO: Remove this after the SidecarContainers feature gate graduates to GA.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">utilfeature</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultFeatureGate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Enabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">features</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SidecarContainers</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token comment" style="color:#999988;font-style:italic">// 如果没有开启Sidecar容器，就检查init容器的重启策略是否设置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> admitPod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InitContainers </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsRestartableInitContainer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				message </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Init container %q may not have a non-default restartPolicy"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to admit pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"message"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">"InitContainerRestartPolicyForbidden"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 确保节点具有足够的插件资源，以满足 Pod 所需的资源</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">pluginResourceUpdateFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nodeInfo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		message </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Update plugin resources failed due to %v, which is unexpected."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to admit pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"message"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">"UnexpectedAdmissionError"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Remove the requests of the extended resources that are missing in the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// node info. This is required to support cluster-level resources, which</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// are extended resources unknown to nodes.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Caveat: If a pod was manually bound to a node (e.g., static pod) where a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// node-level extended resource it requires is not found, then kubelet will</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// not fail admission while it should. This issue will be addressed with</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// the Resource Class API in the future.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	podWithoutMissingExtendedResources </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">removeMissingExtendedResources</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nodeInfo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	reasons </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generalFilter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podWithoutMissingExtendedResources</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nodeInfo</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	fit </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">reasons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">fit </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		reasons</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">admissionFailureHandler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandleAdmissionFailure</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> reasons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		fit </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">reasons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			message </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Unexpected error while attempting to recover from admission failure: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to admit pod, unexpected error while attempting to recover from admission failure"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"err"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   fit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">"UnexpectedAdmissionError"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">fit </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> reason </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> message </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">reasons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			message </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"GeneralPredicates failed due to unknown reason, which is unexpected."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to admit pod: GeneralPredicates failed due to unknown reason, which is unexpected"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   fit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">"UnknownReason"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// If there are failed predicates, we only return the first one as a reason.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		r </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> reasons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> re </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">type</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PredicateFailureError</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			reason </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PredicateName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			message </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Predicate failed on Pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"err"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">InsufficientResourceError</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			reason </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"OutOf%s"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResourceName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			message </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> re</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Predicate failed on Pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"err"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			reason </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"UnexpectedPredicateFailureType"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			message </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"GeneralPredicates failed due to %v, which is unexpected."</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Failed to admit pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">admitPod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"err"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   fit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  reason</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> message</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="apparmor-admit">AppArmor Admit<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#apparmor-admit" class="hash-link" aria-label="Direct link to AppArmor Admit" title="Direct link to AppArmor Admit">​</a></h3>
<p>AppArmor 是 Linux 内核安全模块，允许系统管理员通过每个程序的配置文件限制程序的功能。</p>
<p>如果是 <code>Linux</code> 操作系统，则需要进行准入校验</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">appArmorAdmitHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> PodAdmitResult </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果pod是 running or terminated, 则不需要判定。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Status</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Phase </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodPending </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Validate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  </span><span class="token string" style="color:#e3116c">"AppArmor"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Cannot enforce AppArmor: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown-admit">Shutdown Admit<a href="https://lengrongfu.github.io/blog/kubelet-podadmit#shutdown-admit" class="hash-link" aria-label="Direct link to Shutdown Admit" title="Direct link to Shutdown Admit">​</a></h3>
<p>节点停机管理，如果 <code>node</code> 已经 <code>shutdown</code> 则拒绝所有的 <code>Pod</code>.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">managerImpl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Admit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> attrs </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitAttributes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nodeShuttingDown </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ShutdownStatus</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> nodeShuttingDown </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">   </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Reason</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  nodeShutdownNotAdmittedReason</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Message</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodeShutdownNotAdmittedMessage</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lifecycle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodAdmitResult</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Admit</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubelet 源码分析 devicemanager]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-devicemanage</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-devicemanage"/>
        <updated>2024-09-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[device-plugin  是 Kubernetes 用来扩展除 CPU Memory  之外的硬件设备，比如常见的 Nvidia GPU .]]></summary>
        <content type="html"><![CDATA[<p><code>device-plugin</code>  是 <code>Kubernetes</code> 用来扩展除 <code>CPU</code> <code>Memory</code>  之外的硬件设备，比如常见的 <code>Nvidia GPU</code> .</p>
<p>下面主要来分析一下在 <code>Kubelet</code> 中是如何调用 <code>device-plugin</code> 的，以及如何生成 <code>OCI Spec</code> 内容。</p>
<p><code>device-plugin</code> 也存在一些限制，因为它不感知 <code>Pod</code> 和 <code>Container</code> ，就导致没办法做一些动态的资源分配，比如根据用户设置选用某个 <code>GPU</code> 型号或者是指定使用某个设备的 <code>UUID</code> ；目前社区主要是在推进 <code>DRA</code> 来解决这些问题。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="kubelet-调用流程">kubelet 调用流程<a href="https://lengrongfu.github.io/blog/kubelet-devicemanage#kubelet-%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B" class="hash-link" aria-label="Direct link to kubelet 调用流程" title="Direct link to kubelet 调用流程">​</a></h2>
<p><code>device plugin</code> 的工作原理其实不复杂。主要有以下步骤：</p>
<ul>
<li>首先 <code>device plugin</code> 可以通过 <code>daemonset</code> 部署到需要的节点上。</li>
<li>为了让 <code>Kubernetes</code> 发现 <code>device plugin</code>，需要向 <code>kubelet</code> 的 <code>unix socket</code>。 进行注册，注册的信息包括 <code>device plugin</code> 的 <code>unix socket</code> <code>API Version</code> <code>ResourceName</code></li>
<li><code>kubelet</code> 通过 <code>grpc</code> 向 <code>device plugin</code> 调用 <code>ListAndWatch</code>， 获取当前节点上的资源。</li>
<li><code>kubelet</code> 向 <code>api server</code> 更新节点状态来通知资源变更。</li>
<li>用户创建 <code>pod</code>，请求资源并调度到节点上后, <code>kubelet</code> 调用 <code>device plugin</code> 的 <code>Allocate</code> 进行资源分配。</li>
</ul>
<p>时序图如下:</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/image-e526919fba362e3d08f171b6b4fc3672.png" width="1442" height="578" class="img_ev3q"></p>
<p><code>device-plugin</code> 源码模块在 <code>pkg/kubelet/cm/devicemanager</code> 目录下，是 <code>ContainerManager</code> 模块的一部分，主要是用来在创建 <code>Container</code> 过程中，生成 <code>OCI Spec</code> 内容的。</p>
<p>下面按照两个流程来讲解源码，一个是注册流程和获取节点设备，还有一个是分配流程；</p>
<p>注册和获取可用设备流程：</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F0d36a640-61c1-4773-ab12-29c5ff176a94.svg?alt=media&amp;token=c5d24a2f-911c-4fc3-b73a-d11a700438fa" alt="" class="img_ev3q"></p>
<p>资源分配流程</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F411db6c6-133a-4029-a3f2-913498df5331.svg?alt=media&amp;token=7a942296-b51f-40e9-aa16-91b8cbe537e3" alt="" class="img_ev3q"></p>
<p>从 <code>ContainerManager</code> 的 <code>GetResources</code> 方法进入 <code>devicemanager</code> 模块中，开始获取分配的设备，最后返回一个 <code>DeviceRunContainerOptions</code> 对象：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> DeviceRunContainerOptions </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// The environment variables list.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Envs </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EnvVar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// The mounts for the container.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Mounts </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Mount</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// The host devices mapped into the container.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Devices </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DeviceInfo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// The Annotations for the container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Annotations </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Annotation</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// CDI Devices for the container</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	CDIDevices </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CDIDevice</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果启用了 <code>CDI</code> 则 <code>CDIDevices</code> 这个字段非空，此时需要挂载哪些设备就需要等容器运行时解析 <code>CDI</code> 文件然后 <code>Merge</code> 到 <code>OCI Spec</code> 文件中了。</p>
<p>下面主要讲一下几个函数的实现逻辑；</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="listandwatch">ListAndWatch<a href="https://lengrongfu.github.io/blog/kubelet-devicemanage#listandwatch" class="hash-link" aria-label="Direct link to ListAndWatch" title="Direct link to ListAndWatch">​</a></h3>
<p><code>ListAndWatch</code> 主要在启动的时候发送 <code>Send</code> 一次设备，之后进入监听本地设备的环节，如果出现设备不健康，则重新 <code>Send</code> 所有健康的设备。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="allocate">Allocate<a href="https://lengrongfu.github.io/blog/kubelet-devicemanage#allocate" class="hash-link" aria-label="Direct link to Allocate" title="Direct link to Allocate">​</a></h3>
<p>在用户创建的 <code>Pod</code> 请求资源时，<code>Kubernetes</code> 的调度器会进行调度，并通过 <code>kubelet</code> 向 <code>device plugin</code> 发出 <code>Allocate</code> 调用，这一步的调用主要是为了让 <code>device plugin</code> 为容器调度资源。 在调度成功后向 <code>kubelet</code> 返回调度结果即可。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="getdevicepluginoption">GetDevicePluginOption<a href="https://lengrongfu.github.io/blog/kubelet-devicemanage#getdevicepluginoption" class="hash-link" aria-label="Direct link to GetDevicePluginOption" title="Direct link to GetDevicePluginOption">​</a></h3>
<p>主要返回与 <code>Device Manager</code> 通信的一些可选参数设置，主要返回如下结构：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> DevicePluginOptions </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 每个容器启动前是否需要调用 PreStartContainer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    PreStartRequired </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// GetPreferredAllocationAvailable: 是否提供优选方法</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    GetPreferredAllocationAvailable </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="prestartcontainer">PreStartContainer<a href="https://lengrongfu.github.io/blog/kubelet-devicemanage#prestartcontainer" class="hash-link" aria-label="Direct link to PreStartContainer" title="Direct link to PreStartContainer">​</a></h3>
<p>如果设备插件在注册阶段设置 <code>PreStartRequired=true</code> 了要调用，则在每个容器启动之前调用 <code>PreStartContainer</code>。 设备插件可以运行设备特定的操作，例如在使设备可供容器使用之前重置设备。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="getpreferredallocation">GetPreferredAllocation<a href="https://lengrongfu.github.io/blog/kubelet-devicemanage#getpreferredallocation" class="hash-link" aria-label="Direct link to GetPreferredAllocation" title="Direct link to GetPreferredAllocation">​</a></h3>
<p>如果设备插件在注册阶段设置 <code>PreStartRequired=true</code> 了要调用，可以针对指定的设备列表做二次最优分配。</p>
<p>官方的 <code>nvidia-device-plugin</code> 在 <code>GetPreferredAllocation</code> 内部实现了节点内多卡最优选择的逻辑，通过确定多卡之间的拓扑信息来决定通信量。</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubelet源码分析 Configmap/Secret volume]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-configmap</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-configmap"/>
        <updated>2024-09-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在 Pod 经常会出现将 Configmap/Secret 挂载到 Pod 中，今天我们来分析 Kubelet  是如何实现这个能力，特别是在 Configmap/Secret 内容发送改变、被删除等操作的时候如何影响 Pod 内挂载好的文件。]]></summary>
        <content type="html"><![CDATA[<p>在 <code>Pod</code> 经常会出现将 <code>Configmap/Secret</code> 挂载到 <code>Pod</code> 中，今天我们来分析 <code>Kubelet</code>  是如何实现这个能力，特别是在 <code>Configmap/Secret</code> 内容发送改变、被删除等操作的时候如何影响 <code>Pod</code> 内挂载好的文件。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="configmap的manager">ConfigMap的Manager<a href="https://lengrongfu.github.io/blog/kubelet-configmap#configmap%E7%9A%84manager" class="hash-link" aria-label="Direct link to ConfigMap的Manager" title="Direct link to ConfigMap的Manager">​</a></h3>
<p><code>Configmap</code> 管理这块代码实现主要在 <code>pkg/kubelet/configmap</code> 目录下，提供了一个统一的管理接口 <code>Manager</code> ,下面我们来看下它定义的方法：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Manager </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Get configmap by configmap namespace and name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">GetConfigMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">namespace</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ConfigMap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// RegisterPod registers all configmaps from a given pod.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">RegisterPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// UnregisterPod unregisters configmaps from a given pod that are not</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// used by any other registered pod.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">UnregisterPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个 <code>Manager</code>  接口会根据配置的 <code>ConfigMapAndSecretChangeDetectionStrategy</code> 类型来决定使用那种方式管理，它提供了三种，分别是：</p>
<ul>
<li><code>GET</code> :  不会缓存，直接从 <code>apiserver</code> 出获取。</li>
<li><code>Cache</code> : 会通过 <code>apiserver</code> 直接获取对象，并通过 <code>TTL</code> 缓存起来。</li>
<li><code>Watch</code>: 会通过 <code>list-watch</code> 的方式监视资源的变更，并通过 <code>TTL</code> 缓存起来。</li>
</ul>
<p>下图描述了对这三个方法调用的上层函数：</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F1f53ecf5-6f63-4d06-a159-fee904341383.svg?alt=media&amp;token=9bddba43-f6c5-48d7-ac89-ea5aead3396b" alt="" class="img_ev3q"></p>
<p><code>Secret</code>  管理这块代码实现主要在 <code>pkg/kubelet/secret</code> 目录下，提供了一个统一的管理接口 <code>Manager</code> ,下面我们来看下它定义的方法：</p>
<p>它的定义和使用的原理都差不多。</p>
<p>下面我们来分析它是如何保存到宿主机上的，如何自动更新到容器中的；</p>
<p>首先我们要清楚容器里面的文件不是 <code>kubelet</code> 挂载到容器内部，是由容器运行时如 <code>Containerd</code> 这些组件在启动容器的时候 <code>Mount</code> 到容器内部的。</p>
<p><code>Kubelet</code> 这边能做到就是修改 <code>runtime spec</code> 中的内容， 就是描述容器运行时启动时的 <code>json</code> 文件。</p>
<p>所以热更新这里面涉及到两个东西，一个是把修改到 <code>ETCD</code> 中的 <code>Configmap</code> 或者 <code>Secret</code> 文件更新到容器所在的节点；第二个就是把更新到节点上的文件更新到容器里面。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="热更新到node">热更新到Node<a href="https://lengrongfu.github.io/blog/kubelet-configmap#%E7%83%AD%E6%9B%B4%E6%96%B0%E5%88%B0node" class="hash-link" aria-label="Direct link to 热更新到Node" title="Direct link to 热更新到Node">​</a></h3>
<p>这块主要是 <code>VolumeManager</code> 和 <code>ConfigMap Manager</code> 协调处理的结果，但是最终实现更新还是由 <code>SyncPod</code> 触发的。</p>
<p>![]<a href="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Fcf250449-1337-455b-9459-55962081d92f.svg?alt=media&amp;token=e5434e4c-3173-42b0-90ec-2e91600e4796" target="_blank" rel="noopener noreferrer">https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Fcf250449-1337-455b-9459-55962081d92f.svg?alt=media&amp;token=e5434e4c-3173-42b0-90ec-2e91600e4796</a></p>
<p>从这个流程上可以看出即使 <code>ConfigMap</code> 更新了也不会马上更新到宿主机上，主要还是受 <code>SyncPod</code> 的周期影响，每执行一次 <code>SyncPod</code> 就会让 <code>reconciler</code> 有一次更新的机会。</p>
<p>在 <code>WaitForAttachAndMount</code> 中主要就是把 <code>processedPods</code> 中的一个处理标志改为 <code>false</code> . <code>Map</code> 的 <code>Key</code> 是 <code>Pod UID</code>.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vm </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">volumeManager</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">WaitForAttachAndMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	 vm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">desiredStateOfWorldPopulator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReprocessPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uniquePodName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dswp </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">desiredStateOfWorldPopulator</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">markPodProcessingFailed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	podName volumetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniquePodName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	dswp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pods</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Lock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	dswp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pods</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">processedPods</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">podName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	dswp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pods</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <a href="http://reconciler.run/" target="_blank" rel="noopener noreferrer"><code>reconciler.Run</code></a> 中定时进行协调，代码中配置的是 <code>100ms</code> 且不可修改，它会不断遍历 <code>desiredStateOfWorld</code> 和 <code>actualStateOfWorld</code> ，然后执行一系列的 <code>attach/detach</code> 和 <code>mount(remount)/unmount</code>等操作。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rc </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">reconciler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stopCh </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">reconstructVolumes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Reconciler: start to sync state"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	wait</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Until</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">reconcile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> 100ms</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stopCh</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rc </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">reconciler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">reconcile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Next we mount required volumes. This function could also trigger</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// attach if kubelet is responsible for attaching volumes.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// If underlying PVC was resized while in-use then this function also handles volume</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// resizing.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">mountOrAttachVolumes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>接下来，我们挂载所需的卷。如果 <code>kubelet</code> 负责 <code>Attach</code> 卷，则此函数还可以触发 <code>Attach</code> 。如果在使用过程中调整了底层 <code>PVC</code> 的大小，则此函数还会处理卷大小调整。</p>
<p><code>VolumesToMount</code> 会被 <a href="http://desiredstateofworldpopulator.run/" target="_blank" rel="noopener noreferrer"><code>DesiredStateOfWorldPopulator.Run</code></a> 方法改变，这个方法执行过程会被 <code>processedPods</code> 影响，它主要找出 <code>desiredStateOfWorld</code> 期望处理的 <code>Volume</code> 和实际 <code>actualStateOfWorld</code> 状态的 <code>Volume</code> 。</p>
<p>之后调用 <code>PodExistsInVolume</code> 函数，根据返回的 <code>err</code> 来决定后续流程，如果是更新 <code>Mounte</code> 流程就进入 <code>mountAttachedVolumes</code> 方法中。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rc </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">reconciler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">mountOrAttachVolumes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Ensure volumes that should be attached/mounted are attached/mounted.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> volumeToMount </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">desiredStateOfWorld</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetVolumesToMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		volMounted</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> devicePath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">actualStateOfWorld</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PodExistsInVolume</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DesiredPersistentVolumeSize</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SELinuxLabel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DevicePath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> devicePath</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsSELinuxMountMismatchError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// The volume is mounted, but with an unexpected SELinux context.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// It will get unmounted in unmountVolumes / unmountDetachDevices and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// then removed from actualStateOfWorld.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">desiredStateOfWorld</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddErrorToPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsVolumeNotAttachedError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">waitForVolumeAttach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">volMounted </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsRemountRequiredError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">mountAttachedVolumes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsFSResizeRequiredError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			fsResizeRequiredErr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FsResizeRequiredError</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			rc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expandVolume</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fsResizeRequiredErr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CurrentSize</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里面创建了一个 <code>NestedPendingOperations</code> 执行器，它会启动一个协程调用 <a href="http://generatedoperations.run/" target="_blank" rel="noopener noreferrer"><code>generatedOperations.Run</code></a> 方法来处理 <code>Mount</code>.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">grm </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">nestedPendingOperations</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	volumeName v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniqueVolumeName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	podName volumetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniquePodName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nodeName types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NodeName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	generatedOperations volumetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">GeneratedOperations</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	opExists</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> previousOpIndex </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> grm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isOperationExists</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opKey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> opExists </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">//已经存在操作，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Create a new operation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		grm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">operations </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">grm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">operations</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			operation</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">              opKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				operationPending</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				operationName</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">    generatedOperations</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OperationName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				expBackoff</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">       exponentialbackoff</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExponentialBackoff</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 启动协程</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">eventErr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> detailedErr </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Handle unhandled panics (very unlikely)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> k8sRuntime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandleCrash</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Handle completion of and error, if any, from operationFunc()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> grm</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">operationComplete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">detailedErr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> generatedOperations</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>GeneratedOperations</code> 的结构体中定义了三个函数, <code>OperationFunc</code> 这是操作调用函数, <code>EventRecorderFunc</code> 事件记录函数, <code>CompleteFunc</code> 完成函数。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> GeneratedOperations </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Name of operation - could be used for resetting shared exponential backoff</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	OperationName     </span><span class="token builtin">string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	OperationFunc     </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">context OperationContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	EventRecorderFunc </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	CompleteFunc      </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">CompleteFuncParam</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">o </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">GeneratedOperations</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">eventErr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> detailedErr </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> context OperationContext</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CompleteFunc </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		c </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> CompleteFuncParam</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Err</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">      </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DetailedErr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			Migrated</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Migrated</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">CompleteFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EventRecorderFunc </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">EventRecorderFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">eventErr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Handle panic, if any, from operationFunc()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RecoverFromPanic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">detailedErr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	context </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> o</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">OperationFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EventErr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DetailedErr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面我们看下这三个函数是怎么定义的：</p>
<ul>
<li><code>eventRecorderFunc</code> : 主要就是把 <code>Mount</code> 的错误信息发送到 <code>Pod</code> 的事件记录中去。</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">eventRecorderFunc </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err </span><span class="token operator" style="color:#393A34">*</span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			og</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">recorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Eventf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EventTypeWarning</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> kevents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FailedMountVolume</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>CompleteFunc</code>: 主要就是记录一些 <code>Metric</code></li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">OperationCompleteHook</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plugin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> operationName </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CompleteFuncParam</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	requestTime </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	opComplete </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CompleteFuncParam</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		timeTaken </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Since</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">requestTime</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Seconds</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Create metric with operation name and plugin name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		status </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> statusSuccess</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// TODO: Establish well-known error codes to be able to distinguish</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// user configuration errors from system errors.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			status </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> statusFailUnknown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		migrated </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Migrated </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			migrated </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Migrated</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		StorageOperationMetric</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithLabelValues</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plugin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> operationName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> status</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> strconv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FormatBool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">migrated</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Observe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">timeTaken</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> opComplete</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>OperationFunc</code> : 这个函数里面逻辑很复杂，下面会删除很多不重要的代码，核心的就是调用 <code>Volume</code> 的 <code>SetUp</code> 方法。</li>
</ul>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">mountVolumeFunc </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> volumetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OperationContext </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Get mounter plugin</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		volumePlugin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> og</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volumePluginMgr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FindPluginBySpec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeSpec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		volumeMounter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newMounterErr </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> volumePlugin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewMounter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeSpec</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Execute mount</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		mountErr </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> volumeMounter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">SetUp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MounterArgs</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			FsUser</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">              util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FsUserFrom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			FsGroup</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">             fsGroup</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			DesiredSize</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">         volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DesiredSizeLimit</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			FSGroupChangePolicy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> fsGroupChangePolicy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			SELinuxLabel</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">        volumeToMount</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SELinuxLabel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> volumetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewOperationContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> migrated</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>SetUp</code>这个方法每个存储类型都有实现，这里我们重点看下 <code>Configmap</code> 是如何实现的；</p>
<p>在讨论实现之前我们先分析一下它存储在宿主机上什么位置？代码主要由下面的函数实现，它主要是由各种值组合而成，最后得到的存储路径是：</p>
<p><code>/var/lib/kubelet/pods/&lt;pod的UUI&gt;/volumes/kubernetes.io~configmap/&lt;卷名&gt;</code></p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sv </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">configMapVolume</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> sv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">plugin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">host</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetPodVolumeDir</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">podUID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> utilstrings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">EscapeQualifiedName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">configMapPluginName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> sv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最后我们再来看 <code>SetUpAt</code> 的实现</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">configMapVolumeMounter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SetUpAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dir </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mounterArgs volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MounterArgs</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Infof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Setting up volume %v for pod %v at %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dir</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	configMap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getConfigMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Namespace</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">source</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	totalBytes </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">totalBytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">configMap</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	payload</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MakePayload</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">source</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Items</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> configMap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">source</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultMode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> optional</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	setupSuccess </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">setupSuccess </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		  </span><span class="token comment" style="color:#999988;font-style:italic">// setup 失败就清理目录</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			unmounter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unmountCreateErr </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">plugin</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewUnmounter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">podUID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			tearDownErr </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> unmounter</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">TearDown</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	writerContext </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"pod %v/%v volume %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Namespace</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 这里创建了一个原子 Writer 对象，可以保证修改宿主机上的configmap文件是原子的。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	writer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> volumeutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewAtomicWriter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> writerContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	setPerms </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// This may be the first time writing and new files get created outside the timestamp subdirectory:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// change the permissions on the whole volume and not only in the timestamp directory.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">SetVolumeOwnership</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> dir</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mounterArgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FsGroup</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/*fsGroupChangePolicy*/</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> volumeutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FSGroupCompleteHook</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">plugin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> writer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">payload</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setPerms</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	setupSuccess </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>AtomicWriter</code> 的实现代码路径 <code>atomic_writer.go</code> , 这里面保证了原子更新 <code>Configmap</code> ; 这里不再赘述具体实现，详细可以看代码注释；这里简单总结一下；</p>
<ol>
<li>在<code>/var/lib/kubelet/pods/&lt;pod的UUI&gt;/volumes/kubernetes.io~configmap/&lt;卷名&gt;</code> 目录下看到的文件是软链到 <code>..data/</code> 目录下的真实文件；</li>
<li><code>Write</code> 在写的时候会写入到一个 <code>..data_tmp</code>  目录下；</li>
<li>然后执行 <code>os.Rename</code> 操作，把 <code>..data_tmp</code> 重命名为 <code>..data</code> ; 因为这个动作是原子的，所以能保证 <code>Mount</code> 的 <code>Configmap</code> 的文件是原子更新的。</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F54d877c6-73d0-4169-9368-d3b3b14a7eee.svg?alt=media&amp;token=a473ed92-3dee-4b8f-8155-2afd06db647c" alt="" class="img_ev3q"></p>
<p>只要更新到宿主机的 <code>mount</code> 目录下之后，容器内部就会自动获取最新的文件内容。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="热更新到容器">热更新到容器<a href="https://lengrongfu.github.io/blog/kubelet-configmap#%E7%83%AD%E6%9B%B4%E6%96%B0%E5%88%B0%E5%AE%B9%E5%99%A8" class="hash-link" aria-label="Direct link to 热更新到容器" title="Direct link to 热更新到容器">​</a></h3>
<p>把宿主机上的文件热更新到容器内部这是容器运行时具备的能力，这里先不深入赘述；下面我们以一个例子来说明这一功能。</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Fa6fe7a11-6563-4c60-ae26-4f3ead66413e.svg?alt=media&amp;token=d747c3e4-93bd-4262-90f7-c0280fbf54ac" alt="" class="img_ev3q"></p>
<p>按上图来看我们启动一个容器，把宿主机上的 <code>/tmp/test.json</code> 文件挂载到容器的 <code>/config/test.json</code> 文件上；</p>
<p>然后我们通过修改宿主机上的文件可以观察到容器内部的文件自动发送了改变。</p>
<ul>
<li><code>/tmp/test.json</code></li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ cat /tmp/test.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "name":"test"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>启动容器</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ nerdctl run -it --mount type=bind,source=/tmp/test.json,target=/config/test.json docker.io/library/ubuntu:22.04 /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cat /config/test.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "name":"test"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>修改宿主机上的文件</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ vim /tmp/test.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "name":"abc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>再次查看容器中文件</li>
</ul>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ cat /config/test.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "name":"abc"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上面只是以 <code>ConfigMap</code> 为例讲了原理，但是 <code>Secret</code> 也是一样的实现；</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="configmap-在env使用">ConfigMap 在Env使用<a href="https://lengrongfu.github.io/blog/kubelet-configmap#configmap-%E5%9C%A8env%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="Direct link to ConfigMap 在Env使用" title="Direct link to ConfigMap 在Env使用">​</a></h3>
<p><code>ConfigMap</code> 和 <code>Secret</code> 除了可以在 <code>Volume</code> 中使用，还可以在 <code>Env</code> 中使用，当时区别就是在 <code>Env</code> 中使用不能实现热更新。</p>
<p>它在生成运行时的 <code>Option</code> 的时候就会读取 <code>ConfigMap</code> 的值替换到 <code>Env</code> 变量中去，具体的看 <code>makeEnvironmentVariables</code> 这个方法就清楚了。</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubelet 源码分析 volumeManager]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-volumemanager</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-volumemanager"/>
        <updated>2024-09-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[VolumeManager 运行一组异步循环，根据该节点上调度的 pod 确定需要 attached/mounted/unmounted/detached 哪些卷，并执行此操作。]]></summary>
        <content type="html"><![CDATA[<p><code>VolumeManager</code> 运行一组异步循环，根据该节点上调度的 <code>pod</code> 确定需要 <code>attached/mounted/unmounted/detached</code> 哪些卷，并执行此操作。</p>
<p>下面我们来分析 <code>VolumeManager</code> 定义的接口，</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> VolumeManager </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Starts the volume manager and all the asynchronous loops that it controls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 启动这个volume manager和异步循环控制器</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> sourcesReady config</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SourcesReady</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// WaitForAttachAndMount 处理指定 pod 中引用的卷并阻塞，直到它们全部连接并挂载（反映在实际状态中）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果未在 podAttachAndMountTimeout 定义的持续时间内连接并挂载所有卷，则会返回错误。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">WaitForAttachAndMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// WaitForUnmount 处理指定 pod 中引用的卷并阻塞，直到它们全部卸载（反映在实际状态中）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果未在 podAttachAndMountTimeout 定义的持续时间内卸载所有卷，则会返回错误。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">WaitForUnmount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// GetMountedVolumesForPod 返回一个 VolumeMap，其中包含指定 pod 引用的已成功附加和挂载的卷。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 映射中的键是 OuterVolumeSpecName（即 pod.Spec.Volumes[x].Name）。如果 pod 没有卷，则返回一个空的 VolumeMap。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">GetMountedVolumesForPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podName types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniquePodName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> container</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// GetPossiblyMountedVolumesForPod 返回一个 VolumeMap，其中包含指定 pod 引用的卷，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 这些卷要么已成功连接并挂载，要么“不确定”，即卷插件可能正在挂载它们。映射中的键是 OuterVolumeSpecName（即 pod.Spec.Volumes[x].Name）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 如果 pod 没有卷，则返回一个空的 VolumeMap。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">GetPossiblyMountedVolumesForPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podName types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniquePodName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> container</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeMap</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// GetExtraSupplementalGroupsForPod 返回 Pod 的额外补充组列表。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 这些额外的补充组来自 Pod 所依赖的持久卷上的注释。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">GetExtraSupplementalGroupsForPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">int64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// GetVolumesInUse 返回所有实现 volume.Attacher 接口的卷的列表，这些卷当前根据缓存的实际状态和期望状态处于使用状态。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 卷一旦添加到期望的状态，即被视为“正在使用”，表明它*应该*连接到此节点并保持“正在使用”状态，直到它从期望的状态和实际的状态中移除，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 或者它已被卸载（如实际的世界状态所示）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">GetVolumesInUse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniqueVolumeName</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 仅当 kubelet 启动后协调器中的实际状态至少同步一次后，ReconcilerStatesHasBeenSynced 才会返回 true，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 以便可以安全地更新从实际状态检索到的已挂载卷列表。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">ReconcilerStatesHasBeenSynced</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 如果给定的卷已附加到此节点，则 VolumeIsAttached 返回 true。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">VolumeIsAttached</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumeName v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniqueVolumeName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 将指定卷标记为已在节点的卷状态中成功报告为“正在使用”。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">MarkVolumesAsReportedInUse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volumesReportedAsInUse </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UniqueVolumeName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>启动 <code>VolumeManager</code> 是在 <code>Kubelet.go</code> 的 <code>Run</code> 方法中：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kl </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Kubelet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">updates </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodUpdate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volumeManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sourcesReady</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>WaitForAttachAndMount</code> 是在 <code>Pod</code> 同步的时候会调用，如果当前同步的 <code>Pod</code> 没有 <code>Attach</code> 和 <code>Mount</code> 成功，则会进行返回继续让 <code>podWorkerLoop</code> 进行执行。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kl </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Kubelet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SyncPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> updateType kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SyncPodType</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mirrorPod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podStatus </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodStatus</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">isTerminal </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Wait for volumes to attach/mount</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volumeManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WaitForAttachAndMount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">wait</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Interrupted</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">recorder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Eventf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EventTypeWarning</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FailedMountVolume</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Unable to attach or mount volumes: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ErrorS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Unable to attach or mount volumes for pod; skipping pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pod"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">KObj</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>WaitForUnmount</code> 是在 <code>Pod</code> 已终止时进行调用，需要等待 <code>Unmount</code> . 这里会阻塞进行等待，直到成功或者错误，但是在 <code>SyncTerminatedPod</code> 并没有处理返回错误的类型，也就意味着即使 <code>Unmount</code> 失败了也会执行 <code>Pod</code> 删除。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">kl </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Kubelet</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">SyncTerminatedPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podStatus </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodStatus</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> kl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">volumeManager</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WaitForUnmount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面我们来分析下 <code>volumeManager</code> 结构体的定义，和具体的 <code>VolumeManager</code> 的实现</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> volumeManager </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// volumePluginMgr 是用于访问卷插件的卷插件管理器。它必须预先初始化。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	volumePluginMgr </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumePluginMgr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// desireStateOfWorld 是一个数据结构，包含管理器所定义的期望状态：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 即应附加哪些卷以及哪些 pod 正在引用这些卷。数据结构由 kubelet pod 管理器使用的状态填充器填充。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	desiredStateOfWorld cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DesiredStateOfWorld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// actualStateOfWorld 是一个数据结构，包含管理器所定义的实际状态：</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 即哪些卷连接到此节点以及这些卷挂载到哪些 pod。协调器触发的挂载、分离、挂载和卸载操作成功完成后，将填充该数据结构。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	actualStateOfWorld cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ActualStateOfWorld</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// operationExecutor 用于启动异步附加、分离、挂载和卸载操作。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	operationExecutor operationexecutor</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">OperationExecutor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// reconciler runs an asynchronous periodic loop to reconcile the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// desiredStateOfWorld with the actualStateOfWorld by triggering attach,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// detach, mount, and unmount operations using the operationExecutor.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	reconciler reconciler</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reconciler</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// desireStateOfWorldPopulator 运行一个异步周期循环，使用 kubelet PodManager 填充 desireStateOfWorld。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	desiredStateOfWorldPopulator populator</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DesiredStateOfWorldPopulator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// csiMigratedPluginManager 跟踪插件的 CSI 迁移状态</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	csiMigratedPluginManager csimigration</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PluginManager</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// intreeToCSITranslator 将树内卷规范转换为 CSI</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	intreeToCSITranslator csimigration</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">InTreeToCSITranslator</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在调用 <code>volumeManager.run</code>  之后会启动三个协程，分别是 <code>List-Watch</code> 资源 <code>CSIDrivers</code> , 一个是启动一个 <code>dswp</code> 的协程，去更新 <code>desiredStateOfWorld</code> 和 <code>actualStateOfWorld</code> , 一个是协调协程，它会根据当前 <code>Pod</code> 期望的 <code>Volume</code> 状态和实际状态进行处理，决定是需要 <code>Mount</code> 还是 <code>UnMount</code>.</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Fe27e3b5b-dbcb-40eb-b33c-0cefa08335b9.svg?alt=media&amp;token=8aaa9c51-1cce-4905-acff-6644eb79ac32" alt="" class="img_ev3q"></p>
<p><code>volumePluginMgr</code> 需要通过注册的 <code>Volume</code> 插件进行初始化，默认注册的插件如下：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">featureGate featuregate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">FeatureGate</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumePlugin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumePlugin</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> emptydir</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> git_repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hostpath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeConfig</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nfs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">volume</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">VolumeConfig</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> secret</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> iscsi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> downwardapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> configmap</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> projected</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> local</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> csi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> featureGate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Enabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">features</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ImageVolume</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		allPlugins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ProbeVolumePlugins</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> allPlugins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>每个插件都需要实现 <code>VolumePlugin</code>  接口中的方法，特别是 <code>Init</code> 方法需要在初始化 <code>VolumePluginMgr</code> 时候调用 <code>InitPlugins</code> 循环的把所有注册的插件都初始化。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> VolumePlugin </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Init initializes the plugin.  This will be called exactly once</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// before any New* calls are made - implementations of plugins may</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// depend on this.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">Init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">host VolumeHost</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// NewMounter creates a new volume.Mounter from an API specification.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Ownership of the spec pointer in *not* transferred.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// - spec: The v1.Volume spec</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// - pod: The enclosing pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">NewMounter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spec </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podRef </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Mounter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// NewUnmounter creates a new volume.Unmounter from recoverable state.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// - name: The volume name, as per the v1.Volume spec.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// - podUID: The UID of the enclosing pod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">NewUnmounter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podUID types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Unmounter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>总结：</p>
<p><code>volumeManager</code> 通过 <code>actualStateOfWorld</code> 和 <code>desiredStateOfWorld</code> 来表明当前的 <code>volume</code> 挂载状态和期望的 <code>volume</code> 挂载状态。然后由 <code>desiredStateOfWorldPopulator</code> 维护 <code>desireedStateOfWorld</code> 和 <code>podManager</code> 的一致性；</p>
<p>由 <code>reconcile</code> 维护 <code>actualStateOfWorld</code> 和 <code>desiredStateOfWorld</code> 的一致性及磁盘 <code>volume</code> 挂载和 <code>actualStateOfWorld</code> 的一致性。通过这些机制，<code>volumeManager</code> 完成了 <code>volume</code> 挂载生命周期的管理。</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubelet源码分析 podManager和podWorkers、workQueue]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-five-analyze</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-five-analyze"/>
        <updated>2024-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在 Kubelet 源码分析工作原理中介绍过, Kubelet 中有两个核心的数据结构字段, podManager 和 podWorkers, 现在我们来一探究竟。]]></summary>
        <content type="html"><![CDATA[<p>在 <code>Kubelet</code> 源码分析工作原理中介绍过, <code>Kubelet</code> 中有两个核心的数据结构字段, <strong><code>podManager</code></strong> 和 <strong><code>podWorkers</code></strong>, 现在我们来一探究竟。</p>
<p><strong><code>podManager</code></strong> 和 <strong><code>podWorkers</code></strong> 里面保存的 <code>Pod</code> 内容可能不一样，比如：</p>
<ul>
<li>强制删除 <code>Pod</code> 时，会把 <strong><code>podManager</code></strong>  中的记录删除掉，但是**<code>podWorkers</code>**  中的 <code>Pod</code> 会执行正常的删除流程；此时就出现 <strong><code>podManager</code></strong> 不存在**，<code>podWorkers</code>** 存在的问题**。**</li>
<li>新创建的 <code>Pod</code> 会先保存到 <code>podManager</code> 中，启动时再保存到 <code>podWorkers</code> 中。</li>
</ul>
<p>它们要做的就是无限趋近于一样。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="mirrorpod">MirrorPod<a href="https://lengrongfu.github.io/blog/kubelet-five-analyze#mirrorpod" class="hash-link" aria-label="Direct link to MirrorPod" title="Direct link to MirrorPod">​</a></h2>
<p>在 <code>PodManager</code> 中存在 <code>podByFullName</code> 和 <code>mirrorPodByFullName</code> 的两个字段，分别保存 <code>Pod</code> 信息和 <code>MirrorPod</code> 的。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">	podByFullName       </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	mirrorPodByFullName </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>pod</code> 来源分为 <code>file</code>  <code>http</code>  <code>apiserver</code> 三个 <code>source</code> , 其中 <code>apiserver</code> 中的 <code>pod</code> 称为普通<code>pod</code>，其他来源的 <code>pod</code> 称为 <code>static pod</code>, 为了管理 <code>pod</code> 方便, <code>kubelet</code> 会在 <code>apiserver</code> 上为<code>static pod</code> 生成对应的 <code>pod</code>，这类型 <code>pod</code> 称为 <code>mirror pod</code> .</p>
<p>即可以理解是这个 <code>pod</code> 的替身, 基本上跟 <code>static pod</code>一模一样，只有 <code>uid</code> 不一样和 <code>annotations</code> 里多了 <code>kubernetes.io/config.mirror</code> .</p>
<p><code>mirror pod</code> 是保存在 <code>apiserver</code> 中的 <code>static pod</code> 的一个镜像，但是操作 <code>mirror pod</code> 对 <code>static pod</code> 的影响是不一样的。</p>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/mirror-delete-pod-35079e6f8ad51f2f5e61e1b69c42566f.png" width="1025" height="382" class="img_ev3q"></p>
<p>如果要删除 <code>static pod</code> ,比如是从文件创建的，则需要删除文件才能删除这个 <code>static pod</code> 和 <code>mirror pod</code> .</p>
<p><strong>static pod移除流程:</strong></p>
<ol>
<li><code>podConfig</code> 感知到 <code>static</code> 文件的移除，触发 <code>SyncLoop REMOVE</code></li>
<li><code>podWoker</code> 执行 <code>syncTerminatingPod</code>（执行停止容器和 <code>sandbox</code>）</li>
<li><code>PLEG</code> 感知到 <code>sanbox</code> 和 <code>container</code> 的退出</li>
<li><code>podWoker</code> 执行 <code>syncTerminatedPod</code>（移除 <code>cgroup</code>，更新 <code>mirror pod</code>的 <code>status</code>，等待pod 的 <code>volume umount</code> 完成）</li>
<li>感知到 <code>mirror pod</code> 的 <code>status</code> 更新</li>
<li><code>housekeeping</code> 触发，执行清理工作（ <code>podWorker</code> 的移除 <code>mirror pod</code> 的删除 <code>pod volume</code> 目录移除）</li>
<li>感知到 <code>mirror pod</code> 的删除和从 <code>apiserver</code>上移除</li>
<li><code>garbageCollector</code> 执行 <code>sandbox</code> 和容器的清理，并移除 <code>pod</code> 日志目录</li>
</ol>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/static-delete-pod-376d5405cb5a938fb9dcdd8e5a6019a8.png" width="1495" height="513" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="podmanager">podManager<a href="https://lengrongfu.github.io/blog/kubelet-five-analyze#podmanager" class="hash-link" aria-label="Direct link to podManager" title="Direct link to podManager">​</a></h2>
<p><code>podManager</code> 主要是存储应该在 <code>kubelet</code> 上运行的 <code>Pod</code> 的集合，它包括 <code>admitted pods</code> 和 <code>mirror pods</code> .</p>
<p><code>podManager</code> 的数据由 <code>kubelet</code> 写入，主要是接收不同来源  <code>API</code> <code>URL</code> <code>Static Fiel</code> ，最后写入到 <strong><code>podUpdateCh</code></strong> 这个 <strong><code>chan</code>.</strong></p>
<p>我们把 <code>Manager</code> 这个接口的方法按功能划分</p>
<ul>
<li>
<p>读</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">GetPodByFullName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podFullName </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetPodByName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">namespace</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetPodByUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetPodByMirrorPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetMirrorPodByPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetPodAndMirrorPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mirrorPod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wasMirror </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetPods</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetPodsAndMirrorPods</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">allPods </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> allMirrorPods </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> orphanedMirrorPodFullnames </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">TranslatePodUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uid types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResolvedPodUID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">GetUIDTranslations</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podToMirror </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResolvedPodUID</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MirrorPodUID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mirrorToPod </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MirrorPodUID</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResolvedPodUID</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>写</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">SetPods</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pods </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> #已经未使用了，不分析</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">AddPod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">UpdatePod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">RemovePod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<p>我们主要来分析下写的这几个操作流程：</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F22b7bc7d-7fc7-4db3-be5e-edefe4f87cfd.svg?alt=media&amp;token=a917d00f-1d65-4b82-8fa6-d0f33595f64d" alt="a" class="img_ev3q"></p>
<p>它从 <code>PodUpdate</code> 接收到操作之后会按照 <code>PodOperation</code> 类型来区分操作方法，目前使用了五种操作方法，最终对应到 <code>podManager</code> 上有三个操作方法。</p>
<p>主执行上述四种方法的时候会执行 <code>podWorkers</code> 的 <code>UpdatePod</code> 方法,就是调用不同的 <code>UpdatePodOptions</code> 操作类型，分别对应四种 <code>Option</code> , 其中需要根据这个 <code>Pod</code> 是否是 <code>MirrorPod</code> 来决定它的操作类型。</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F2fed5e50-56ef-4e06-9e72-4f107bd08551.svg?alt=media&amp;token=96e8476f-98a9-43ce-97c9-239599e59c1e" alt="a" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="podworkers">podWorkers<a href="https://lengrongfu.github.io/blog/kubelet-five-analyze#podworkers" class="hash-link" aria-label="Direct link to podWorkers" title="Direct link to podWorkers">​</a></h2>
<p><code>podWorkers</code> 简单说就是通过控制 <code>Pod</code> 的生命周期来更新 <code>Pod</code> 的真实状态，每个 <code>Pod</code> 会有一个协程执行 <code>podWorkerLoop</code> 。</p>
<p>我们来分析下 <code>PodWorkers</code> 的方法：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> PodWorkers </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 通过 podworker pod 发送改变，然后pod会按照FIFO的顺序进入自己的协程处理，podUID是协程的key，</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 然后进入 syncPod 方法会直到被kubelet驱逐或者是标记deleted、Succeeded、Failed，一旦发生驱逐或者delete</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// syncTerminatingPod 方法将被调用，后续的UpdatePod调用都将被忽略，直到它成功，终止的pod不会被启动。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">UpdatePod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options UpdatePodOptions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>UpdatePodOptions</code> 结构体分析：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> UpdatePodOptions </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">//更新类型(create, update, sync, kill).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	UpdateType kubetypes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">SyncPodType</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Pod to update. Required.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Pod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// MirrorPod is the mirror pod if Pod is a static pod. Optional when UpdateType</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// is kill or terminated.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	MirrorPod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// RunningPod 不再存在的运行时 pod，只有执行PodCleanup的时候才会不为空</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	RunningPod </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// KillPodOptions 用于覆盖 pod 的默认终止行为或在操作完成后更新 pod 状态。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	KillPodOptions </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">KillPodOptions</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们来分析 <code>podWorkers</code> 的结构体：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> podWorkers </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	podUpdates </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">]</span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">struct</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// WorkQueue 允许使用时间戳对项目进行排队。如果时间戳已过期，则项目将被视为已准备好进行处理。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	workQueue queue</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">WorkQueue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// 这个函数名字就叫podSyncer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	podSyncer podSyncer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Fd3660f8b-b079-48a3-935f-f409c3745cfc.svg?alt=media&amp;token=2c2cf998-a701-41f9-a923-78e7d6757c63" alt="a" class="img_ev3q"></p>
<p><code>syncPod</code> 是整个 <code>kubelet</code> 的核心，pod 的创建与删除都由它来处理。由于 <code>syncPod()</code> 涉及到太多的 <code>kubelet</code> 中功能包，所以等 <code>volumeManager</code>, <code>podManager</code> 等介绍完毕再详细分析。现在只需知道 <code>syncPod()</code> 会处理传进来的 <code>pod</code>，维护物理机上的 <code>pod</code> 和 <code>etcd</code> 中的 <code>pod</code> 的一致性。</p>
<p>存在一个疑问：Pod 是被夺协程并行的处理的，那针对资源分配是否会存在竞争关系。这个留到后面去分析。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="workqueue">workQueue<a href="https://lengrongfu.github.io/blog/kubelet-five-analyze#workqueue" class="hash-link" aria-label="Direct link to workQueue" title="Direct link to workQueue">​</a></h2>
<p><code>workQueu</code> 是一个允许使用时间戳对项目进行排队的 <code>Queue</code> , 如果时间戳已过期，则项目将被视为已准备好进行处理。</p>
<p><code>WorkQueue</code> 只包括两个核心的方法, <code>GetWork()</code> 返回的是所有已经准备好的 <code>Worker</code> .</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> WorkQueue </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// GetWork dequeues and returns all ready items.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">GetWork</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Enqueue inserts a new item or overwrites an existing item.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">Enqueue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">item types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> delay time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>basicWorkQueue</code> 的内部结构是一个 <code>Map</code>: <code>key</code> 是一个 <code>UID</code>, <code>value</code> 时一个 <code>Time</code>.</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> basicWorkQueue </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	clock clock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Clock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	lock  sync</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Mutex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	queue </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Time</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubelet源码分析 syncLoopIteration（三） probeCH]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-fore-analyze</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-fore-analyze"/>
        <updated>2024-08-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在代码中是没有 probeCh 这个 chan 的，主要是由 livenessManager readinessManager startupManager 这三个探针的 chan 构成的。]]></summary>
        <content type="html"><![CDATA[<p>在代码中是没有 <code>probeCh</code> 这个 <code>chan</code> 的，主要是由 <code>livenessManager</code> <code>readinessManager</code> <code>startupManager</code> 这三个探针的 <code>chan</code> 构成的。</p>
<p>它们的核心实现在  <code>probeManager prober.Manager</code> 上。</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2Ff8dcda60-944c-4a62-8c8f-61fcd9f9dfcd.svg?alt=media&amp;token=c0378f71-cc9c-4c0a-b023-86555e7fbe37" alt="probch.png" class="img_ev3q"></p>
<p><code>probeCh</code> 是分别代表三个  <code>chan</code> ,分别是 <code>livenessCh</code> <code>readinessCh</code> <code>startupCh</code> ,在图中进行了统一，但是 <code>code</code> 中是三个通道。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="probemanager">ProbeManager<a href="https://lengrongfu.github.io/blog/kubelet-fore-analyze#probemanager" class="hash-link" aria-label="Direct link to ProbeManager" title="Direct link to ProbeManager">​</a></h3>
<p>Manager会为每个指定了探测的容器创建一个探测“worker”（AddPod方法）。这些worker会定期对其分配的容器进行探测，并将结果缓存起来。当需要更新Pod的状态（PodStatus）时，Manager会利用这些缓存的探测结果来设置Pod的Ready状态（UpdatePodStatus方法）。需要注意的是，目前不支持更新探测参数。</p>
<p><code>Manager</code> 会为每个指定来探测的容器都创建一个 <code>worker</code>, 这些 <code>worker</code> 会定期对其分配的容器进行探测，并缓存结果，更新 <code>pod</code> 状态时会利用这些参数来更新。</p>
<div class="language-protobuf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-protobuf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">type Manager interface {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// AddPod creates new probe workers for every container probe. This should be called for every</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// pod created.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	AddPod(pod *v1.Pod)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// StopLivenessAndStartup handles stopping liveness and startup probes during termination.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	StopLivenessAndStartup(pod *v1.Pod)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// RemovePod handles cleaning up the removed pod state, including terminating probe workers and</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// deleting cached results.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	RemovePod(pod *v1.Pod)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// CleanupPods handles cleaning up pods which should no longer be running.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// It takes a map of "desired pods" which should not be cleaned up.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	CleanupPods(desiredPods map[types.UID]sets.Empty)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// UpdatePodStatus modifies the given PodStatus with the appropriate Ready state for each</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	// container based on container running status, cached probe results and worker states.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	UpdatePodStatus(*v1.Pod, *v1.PodStatus)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>AddPod</code> 方法中实现了遍历所有 <code>container</code> ，然后挣对配置的不同探针，启动 <code>work</code>,每个探针使用一个协程运行。</p>
<div class="language-protobuf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-protobuf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">func (m *manager) AddPod(pod *v1.Pod) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	m.workerLock.Lock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	defer m.workerLock.Unlock()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	key := probeKey{podUID: pod.UID}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	for _, c := range append(pod.Spec.Containers, getRestartableInitContainers(pod)...) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		key.containerName = c.Name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if c.StartupProbe != nil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			key.probeType = startup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			if _, ok := m.workers[key]; ok {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			w := newWorker(m, startup, pod, c)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			m.workers[key] = w</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			go w.run()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if c.ReadinessProbe != nil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			key.probeType = readiness</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			if _, ok := m.workers[key]; ok {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			w := newWorker(m, readiness, pod, c)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			m.workers[key] = w</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			go w.run()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if c.LivenessProbe != nil {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			key.probeType = liveness</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			if _, ok := m.workers[key]; ok {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				return</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			w := newWorker(m, liveness, pod, c)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			m.workers[key] = w</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			go w.run()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>往下就是根据配置的探针类型调用探测逻辑：</p>
<div class="language-protobuf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-protobuf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">func (pb *prober) runProbe(ctx context.Context, probeType probeType, p *v1.Probe, pod *v1.Pod, status v1.PodStatus, container v1.Container, containerID kubecontainer.ContainerID) (probe.Result, string, error) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	switch {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case p.Exec != nil:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		command := kubecontainer.ExpandContainerCommandOnlyStatic(p.Exec.Command, container.Env)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return pb.exec.Probe(pb.newExecInContainer(ctx, container, containerID, command, timeout))</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case p.HTTPGet != nil:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		req, err := httpprobe.NewRequestForHTTPGetAction(p.HTTPGet, &amp;container, status.PodIP, "probe")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return pb.http.Probe(req, timeout)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case p.TCPSocket != nil:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		port, err := probe.ResolveContainerPort(p.TCPSocket.Port, &amp;container)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return pb.tcp.Probe(host, port, timeout)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case p.GRPC != nil:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		host := status.PodIP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return pb.grpc.Probe(host, service, int(p.GRPC.Port), timeout)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	default:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog.InfoS("Failed to find probe builder for container", "containerName", container.Name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return probe.Unknown, "", fmt.Errorf("missing probe handler for %s:%s", format.Pod(pod), container.Name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="livenessmanagerreadinessmanagerstartupmanager">livenessManager、readinessManager、startupManager<a href="https://lengrongfu.github.io/blog/kubelet-fore-analyze#livenessmanagerreadinessmanagerstartupmanager" class="hash-link" aria-label="Direct link to livenessManager、readinessManager、startupManager" title="Direct link to livenessManager、readinessManager、startupManager">​</a></h3>
<p>这三个探针的 <code>result</code> 都是从 <code>prober.Manager</code> 中写入的，只是每个探针有一个 <code>chan</code> , <code>syncLoopIteration</code> 接收到就是执行 <code>handler.HandlePodSyncs</code> 操作。</p>
<div class="language-protobuf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-protobuf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">func (kl *Kubelet) syncLoopIteration(ctx context.Context, configCh &lt;-chan kubetypes.PodUpdate, handler SyncHandler,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	syncCh &lt;-chan time.Time, housekeepingCh &lt;-chan time.Time, plegCh &lt;-chan *pleg.PodLifecycleEvent) bool {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	select {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case update := &lt;-kl.livenessManager.Updates():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if update.Result == proberesults.Failure {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			handleProbeSync(kl, update, handler, "liveness", "unhealthy")</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case update := &lt;-kl.readinessManager.Updates():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		ready := update.Result == proberesults.Success</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kl.statusManager.SetContainerReadiness(update.PodUID, update.ContainerID, ready)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		status := ""</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if ready {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			status = "ready"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		handleProbeSync(kl, update, handler, "readiness", status)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case update := &lt;-kl.startupManager.Updates():</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		started := update.Result == proberesults.Success</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		kl.statusManager.SetContainerStartup(update.PodUID, update.ContainerID, started)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		status := "unhealthy"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if started {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			status = "started"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		handleProbeSync(kl, update, handler, "startup", status)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubelet源码分析 syncLoopIteration（二） plegCH]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-three-analyze</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-three-analyze"/>
        <updated>2024-08-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[PLEG 全称是 Pod Lifecycle Event Generator ，它主要通过读取 container 的 Event 来更新 Pod 的状态，目前提供了 GenericPLEG 和 EventedPLEG 两种模式，不同点 GenericPLEG 是定时去读取事件，EventedPLEG 时通过主动接受事件的推送。]]></summary>
        <content type="html"><![CDATA[<p><code>PLEG</code> 全称是 <code>Pod Lifecycle Event Generator</code> ，它主要通过读取 <code>container</code> 的 <code>Event</code> 来更新 <code>Pod</code> 的状态，目前提供了 <code>GenericPLEG</code> 和 <code>EventedPLEG</code> 两种模式，不同点 <code>GenericPLEG</code> 是定时去读取事件，<code>EventedPLEG</code> 时通过主动接受事件的推送。</p>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F46bd1519-3feb-409c-96b3-98e02692f488.svg?alt=media&amp;token=0f26310c-2165-4755-80c0-d2acc8682ed7" alt="a" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="genericpleg">GenericPLEG<a href="https://lengrongfu.github.io/blog/kubelet-three-analyze#genericpleg" class="hash-link" aria-label="Direct link to GenericPLEG" title="Direct link to GenericPLEG">​</a></h2>
<p>通用 <code>PLEG</code> 配置的是每秒中读取一次。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">genericPlegRelistPeriod    </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Second </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>调用 <code>Start</code> 方法之后就会进入间隔 <code>1s</code> 执行一次 <code>g.Relist</code> 这个方法中。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">GenericPLEG</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isRunning </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> wait</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Until</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Relist</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">relistDuration</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RelistPeriod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stopCh</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>g.Relist</code> 方法核心执行流程：</p>
<ol>
<li>获取当前机器上的所有 <code>Pod</code>, 主要通过 <code>CRI-API</code> 中定义的 <code>ListPodSandbox</code> 和 <code>ListContainers</code> 两个方法获取。</li>
</ol>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Get all the pods.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">podList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetPods</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>更新当前的 <code>podRecord</code>，podRecord 中两个对象，一个 <code>old</code> ,一个 <code>current</code> .</li>
</ol>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">podRecords</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setCurrent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pods</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>
<p>所有的新老 <code>pod</code> 的容器组到一起进行遍历。进行新老的对比,如果有 <code>event</code> 变化,则记录.</p>
<ol>
<li>首先根据容器状态转换为 <code>pleg</code> 状态</li>
</ol>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">convertState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">state kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">State</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> plegContainerState </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> state </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerStateCreated</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// kubelet doesn't use the "created" state yet, hence convert it to "unknown".</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> plegContainerUnknown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerStateRunning</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> plegContainerRunning</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerStateExited</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> plegContainerExited</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> kubecontainer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerStateUnknown</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> plegContainerUnknown</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"unrecognized container state: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>b. 之后根据 <code>old</code> 和 <code>current</code> 生成的 <code>pleg</code> 状态生成 <code>PLEGEvent</code></p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generateEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podID types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cid </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> oldState</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newState plegContainerState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodLifecycleEvent </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> newState </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> plegContainerRunning</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerStarted</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> plegContainerExited</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerDied</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> plegContainerUnknown</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerChanged</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> plegContainerNonExistent</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> oldState </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> plegContainerExited</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// We already reported that the container died before.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerRemoved</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerDied</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerRemoved</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cid</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"unrecognized container state: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>会遍历所有 <code>Pod</code> 的事件，然后发往 <code>eventChannel</code> 中，之后就会被 <code>syncLoopIteration</code> 接收到进行处理。</p>
</li>
</ol>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> pid</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> events </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> eventsByPodID </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> events </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// Filter out events that are not reliable and no other components use yet.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> events</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Type </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> ContainerChanged </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">continue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> g</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">eventChannel </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain"> events</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				metrics</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PLEGDiscardEvents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Inc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ErrorS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Event channel is full, discard this relist() cycle event"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="eventedpleg">EventedPLEG<a href="https://lengrongfu.github.io/blog/kubelet-three-analyze#eventedpleg" class="hash-link" aria-label="Direct link to EventedPLEG" title="Direct link to EventedPLEG">​</a></h2>
<p>事件 <code>PLEG</code> 会创建一个 <code>GenericPLEG</code> ,在接受事件失败次数达到上限之后就会退回到 <code>GenericPLEG</code> 类型，但是它读取一次的时间间隔是 <code>300s</code>.</p>
<p>调用 <code>Start</code> 方法之后就会创建两个协程一致接收数据，这里和<code>GenericPLEG</code> 的区别还有不需要调用 <code>Watch</code> 方法。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">EventedPLEG</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> wait</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Until</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">watchEventsChannel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stopCh</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> wait</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Until</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">updateGlobalCache</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> globalCacheUpdatePeriod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stopCacheUpdateCh</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>e.watchEventsChannel</code> 方法核心执行流程：</p>
<ol>
<li>首先判断是否超过最大尝试次数，默认是 <code>e.eventedPlegMaxStreamRetries=5</code> 次。如果超过了会回退到<code>GenericPLEG</code> 上。</li>
</ol>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">EventedPLEG</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">watchEventsChannel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		numAttempts </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> numAttempts </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">eventedPlegMaxStreamRetries </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				  e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">genericPleg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// Stop the existing Generic PLEG which runs with longer relisting period when Evented PLEG is in use.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">relistDuration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Update the relisting period to the default value for the Generic PLEG.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">genericPleg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">runtimeService</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetContainerEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Background</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> containerEventsResponseCh</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RuntimeService_GetContainerEventsClient</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				metrics</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EventedPLEGConn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Inc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				numAttempts</span><span class="token operator" style="color:#393A34">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>
<p><code>runtimeService.GetContainerEvents</code> 获取容器的 <code>Events</code> , 我们看 <code>proto</code> 中的定义就明白，为什么这里可以主动监听这个事件的变化，因为它的返回值是一个 <code>steam</code> 类型</p>
<p><code>steam</code> 在 <code>gRPC</code> 中是一个双向流的过程，可以实现数据的双向传输。</p>
</li>
</ol>
<div class="language-protobuf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-protobuf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">rpc GetContainerEvents(GetEventsRequest) returns (stream ContainerEventResponse) {}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">remoteRuntimeService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">GetContainerEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> containerEventsCh </span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventResponse</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> connectionEstablishedCallback </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RuntimeService_GetContainerEventsClient</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	containerEventsStreamingClient</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">runtimeClient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetContainerEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">GetEventsRequest</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> containerEventsStreamingClient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Recv</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> io</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">EOF </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">logErr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"container events stream is closed"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">logErr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"failed to receive streaming container event"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> resp </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			containerEventsCh </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain"> resp</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"container event received"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"resp"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> resp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>处理 <code>Event</code> , 它接收到 <code>Event</code> 之后会根据类型发送到 <code>GenericPLEG</code> 结构中的 <code>eventChannel</code> chan 中。</li>
</ol>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">EventedPLEG</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">processCRIEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">containerEventsResponseCh </span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventResponse</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> event </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> containerEventsResponseCh </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType_CONTAINER_DELETED_EVENT </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			shouldSendPLEGEvent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">podID</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> status</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unix</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetCreatedAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				shouldSendPLEGEvent </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> shouldSendPLEGEvent </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">processCRIEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">EventedPLEG</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">processCRIEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventResponse</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType_CONTAINER_STOPPED_EVENT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sendPodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">UID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodSandboxStatus</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Uid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerDied</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerId</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Received Container Stopped Event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType_CONTAINER_CREATED_EVENT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Received Container Created Event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType_CONTAINER_STARTED_EVENT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sendPodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">UID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodSandboxStatus</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Uid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerStarted</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerId</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Received Container Started Event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> runtimeapi</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerEventType_CONTAINER_DELETED_EVENT</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sendPodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">UID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodSandboxStatus</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Uid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerDied</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerId</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sendPodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">PodLifecycleEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> types</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">UID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PodSandboxStatus</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Uid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> ContainerRemoved</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Data</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ContainerId</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">V</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InfoS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Received Container Deleted Event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"event"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="syncloopiteration">syncLoopIteration<a href="https://lengrongfu.github.io/blog/kubelet-three-analyze#syncloopiteration" class="hash-link" aria-label="Direct link to syncLoopIteration" title="Direct link to syncLoopIteration">​</a></h2>
<p>下面我们来看在 <code>syncLoopIteration</code> 中是如何处理这个 <code>Event</code> 的。</p>
<div class="language-protobuf codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-protobuf codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">func (kl *Kubelet) syncLoopIteration(ctx context.Context, configCh &lt;-chan kubetypes.PodUpdate, handler SyncHandler,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	syncCh &lt;-chan time.Time, housekeepingCh &lt;-chan time.Time, plegCh &lt;-chan *pleg.PodLifecycleEvent) bool {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	select {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	case e := &lt;-plegCh:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if isSyncPodWorthy(e) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			// PLEG event for a pod; sync it.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			if pod, ok := kl.podManager.GetPodByUID(e.ID); ok {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				klog.V(2).InfoS("SyncLoop (PLEG): event for pod", "pod", klog.KObj(pod), "event", e)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				handler.HandlePodSyncs([]*v1.Pod{pod})</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			} else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				// If the pod no longer exists, ignore the event.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				klog.V(4).InfoS("SyncLoop (PLEG): pod does not exist, ignore irrelevant event", "event", e)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		if e.Type == pleg.ContainerDied {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			if containerID, ok := e.Data.(string); ok {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				kl.cleanUpContainersInPod(e.ID, containerID)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return true</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>核心执行流程如下：</p>
<ol>
<li>如果不是 <code>event.Type != pleg.ContainerRemoved</code> 移除事件，则进入执行，如果 <code>Pod</code> 还在 <code>PodManager</code> 中，则执行 <code>HandlePodSyncs</code> ,否则跳过。</li>
<li><code>HandlePodSyncs</code> 中主要是往 <code>podWorkers</code> 中发送 <code>UpdatePod</code> 的 <code>SyncPodSync</code> 操作。</li>
<li>如果是 <code>e.Type == pleg.ContainerDied</code> 退出事件，则清除容器。</li>
</ol>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubelet源码分析 syncLoopIteration（一） podUpdateCh]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-two-analyze</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-two-analyze"/>
        <updated>2024-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[podUpdateCh 主要是负责接收 Pod 的数据，分别从文件、URL、Kube-APIServer 三个地方来，下面将详细分析这个 chan 的读写流程。]]></summary>
        <content type="html"><![CDATA[<p><code>podUpdateCh</code> 主要是负责接收 <code>Pod</code> 的数据，分别从文件、URL、Kube-APIServer 三个地方来，下面将详细分析这个 <code>chan</code> 的读写流程。</p>
<p><code>Pod</code> 的 <code>source</code> 定义了四种表现方式，在代码 <code>pod_update.go</code></p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// These constants identify the sources of pods.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// Filesource idenitified updates from a file.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	FileSource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"file"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// HTTPSource identifies updates from querying a web page.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	HTTPSource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// ApiserverSource identifies updates from Kubernetes API Server.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	ApiserverSource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"api"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// AllSource identifies updates from all sources.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	AllSource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"*"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" src="https://firebasestorage.googleapis.com/v0/b/notiondiagram.appspot.com/o/diagram%2Fm5smUNzLG7NDZmSPY82qhFvWnsu1%2F7182ab7e-9b66-4472-b508-6ce8abb3bd7e.svg?alt=media&amp;token=dc26e818-bbd5-4c18-8070-70649d577ad7" alt="a" class="img_ev3q"></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="file">File<a href="https://lengrongfu.github.io/blog/kubelet-two-analyze#file" class="hash-link" aria-label="Direct link to File" title="Direct link to File">​</a></h3>
<p><code>file</code> Watch 功能只在 <code>linux</code> 操作系统上支持，其它操作系统都不支持。</p>
<p>会把 <code>fsnotify</code> 监听的文件事件转换为 <code>Pod</code> 的操作类型；</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sourceFile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">produceWatchEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">fsnotify</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> eventType podEventType</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Op </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> fsnotify</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Create</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		eventType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> podAdd</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Op </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> fsnotify</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Write</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		eventType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> podModify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Op </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> fsnotify</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Chmod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		eventType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> podModify</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Op </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> fsnotify</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Remove</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		eventType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> podDelete</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Op </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> fsnotify</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Rename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		eventType </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> podDelete</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">default</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// Ignore rest events</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">watchEvents </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">watchEvent</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> eventType</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后根据监听到的文件名的变化，来读取 <code>Pod</code> 的内容，之后更新 <code>store</code> 对象；这里是令我奇怪的，我以为它会往 <code>chan</code> 里面发送一个事件。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sourceFile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">consumeWatchEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">watchEvent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">eventType </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> podAdd</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podModify</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">extractFromFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fileName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> podDelete</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> objKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> keyExist </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fileKeyMapping</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">fileName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> keyExist </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			pod</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> podExist</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GetByKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">objKey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Errorf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"failed to remove deleted pod from cache: %v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>除了 <code>Watch</code> 文件变化之后，它还有一个 <code>time.Ticker</code> 每隔 <code>10s</code> 会执行一遍全量读取目录下 <code>Pod</code> 的操作；</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sourceFile</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	listTicker </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewTicker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">period</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> #默认配置是10s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// 启动之后先读取一遍所有的</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">listConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ErrorS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Unable to read config path"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"path"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain">listTicker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">listConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ErrorS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Unable to read config path"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"path"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> e </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">watchEvents</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">consumeWatchEvent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					klog</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ErrorS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Unable to process watch event"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">startWatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上面有一个疑问：这里是令我奇怪的，我以为它会往 <code>chan</code> 里面发送一个事件。发现它的 <code>send</code> 是写在 <code>store.Add、store.Delete</code>  里面的，它会在每次触发这个函数的时候，把存储起来的 <code>pod</code> 全量的发送到 <code>chan</code> 里面. <code>undelta_store.go#45</code></p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">UndeltaStore</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj </span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">List</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">UndeltaStore</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj </span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">List</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">UndeltaStore</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Delete</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">obj </span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">PushFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">u</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Store</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">List</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="url">URL<a href="https://lengrongfu.github.io/blog/kubelet-two-analyze#url" class="hash-link" aria-label="Direct link to URL" title="Direct link to URL">​</a></h3>
<p><code>URL</code> 的方式是通过用户配置的外部服务地址，然后每 <code>20s</code> 去访问一次外部服务。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sourceURL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">extractFromURL</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	  </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在 <code>extractFromURL</code> 会通过访问 <code>HTTP</code> GET 的方式解析返回值，返回当个对象或者是数组都可以解析成功，解析成功之后也是会发送到 <code>merge</code> 中进行合并处理。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api">API<a href="https://lengrongfu.github.io/blog/kubelet-two-analyze#api" class="hash-link" aria-label="Direct link to API" title="Direct link to API">​</a></h3>
<p><code>API</code> 的方式是通过 <code>list-watch</code> 去读取 <code>kube-apiserver</code> 的数据，并且通过 <code>field</code> 进行过滤当前的节点。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lw </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewListWatchFromClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">CoreV1</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">RESTClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pods"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> metav1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">NamespaceAll</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fields</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">OneTermEqualSelector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"spec.nodeName"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nodeName</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>传递的 <code>store</code> 对象里面有 <code>send</code> 的功能，和 <code>file</code> 处理逻辑一样，一个 <code>pod</code> 发生变更，就会要发送所有的 <code>pod</code> 去执行 <code>merge</code> 操作。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">r </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewReflector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lw</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewUndeltaStore</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">send</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MetaNamespaceKeyFunc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="merge">Merge<a href="https://lengrongfu.github.io/blog/kubelet-two-analyze#merge" class="hash-link" aria-label="Direct link to Merge" title="Direct link to Merge">​</a></h2>
<p><code>merge</code> 是为了把从不同的 <code>source</code> 过来的 <code>pod</code> 进一步合并，避免出现重复、冲突的操作，最终得到一个一致的操作，最终合并后会得到各种事件的结果：</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">adds</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> updates</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> deletes</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> removes</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> reconciles </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">merge</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">source</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> change</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>合并的难点在于判断是不是要更新，添加、删除这种场景都比较简单，之前不存在就添加，之前存在，现在不存在就删除，但是要不要更新是比较难判断的，里面有一个 <code>checkAndUpdatePod</code> 方法。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">checkAndUpdatePod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">existing</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ref </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pod</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">needUpdate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> needReconcile</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> needGracefulDelete </span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">1.</span><span class="token plain"> 检查Spec、Labels、DeletionTimestamp、DeletionGracePeriodSeconds、Annotations这些是否发生变更</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">2.</span><span class="token plain"> 如果都没有发生变更判断Status是否发生变更，如果有则更新，没有则不更新。</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token number" style="color:#36acaa">3.</span><span class="token plain"> 如果DeletionTimestamp不为空，则需要删除</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[kubelet源码分析(一)：工作原理]]></title>
        <id>https://lengrongfu.github.io/blog/kubelet-one-analyze</id>
        <link href="https://lengrongfu.github.io/blog/kubelet-one-analyze"/>
        <updated>2024-08-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[从 kubelet 源码来分析它的工作原理.]]></summary>
        <content type="html"><![CDATA[<p>从 <code>kubelet</code> 源码来分析它的工作原理.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="kubelet-工作原理"><strong>kubelet 工作原理</strong><a href="https://lengrongfu.github.io/blog/kubelet-one-analyze#kubelet-%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86" class="hash-link" aria-label="Direct link to kubelet-工作原理" title="Direct link to kubelet-工作原理">​</a></h2>
<p><img decoding="async" loading="lazy" alt="image.png" src="https://lengrongfu.github.io/assets/images/kubelet-flow-4ca563abbd2633858a5edff9bb4bd281.png" width="1333" height="954" class="img_ev3q"></p>
<p><code>Kubelet</code> 的工作核心就是一个控制循环 <code>syncLoop</code> ，驱动这个控制循环运行的事件，包括: <code>Pod</code> 更新事件, <code>Pod</code> 生命周期变化, <code>Kubelet</code> 本身设置的执行周期、定时的清理任务(<code>GC</code> ).</p>
<p>在这个大循环 <code>syncLoop</code> 之外, <code>kubelet</code> 还维护着许多其他的字控制循环，就是图中的小圆圈, 比如：</p>
<ul>
<li><code>podManager</code> :  主要用于存储和管理期望的 <code>Pod</code> 集合，包括被接受的常规 <code>pod</code> 和镜像 <code>pod（mirror pods）</code>.</li>
<li><code>podWorkers</code>: 主要负责管理 <code>pod</code> 生命周期状态机的关键组件, 它会处理 <code>pod</code> 的几个状态<!-- -->
<ul>
<li><strong>syncing</strong>：pod 应该正在运行（调用<code>syncPod</code>方法）。</li>
<li><strong>terminating</strong>：pod应该正在停止（调用<code>syncTerminatingPod</code>方法）。</li>
<li><strong>terminated</strong>：pod应该已经清理了所有资源（调用<code>syncTerminatedPod</code>方法）。</li>
</ul>
</li>
<li><code>evictionManager</code>: 负责监控节点的状态，以识别可能影响节点稳定性的情况，并通过驱逐pod（将 <code>pod</code> 状态设置为 <code>Failed</code> ，并给出原因 <code>Evicted</code> ）来减轻资源压力; 并依赖<code>podWorker</code>的权威性来执行驱逐操作。这样可以确保在资源压力过大或其他影响节点稳定性的情况下，能够及时采取措施，恢复节点的正常运行</li>
<li><code>probeManager</code> : 会定时去监控 <code>Pod</code> 中容器的健康状况，当前支持两种类型的探针: <code>livenessProbe</code> 和 <code>readinessProbe</code> .</li>
<li><code>secretManager</code>: 是 <code>kubelet</code> 中负责缓存和管理运行在节点上的 <code>pod</code> 所使用的 <code>secret</code> 的组件，它通过与<code>podWorkers</code>&nbsp;的协作，确保在 <code>pod</code> 启动和终止时正确地获取和清理 <code>secret</code>，并保持 <code>secret</code> 的最新状态。</li>
<li><code>configMapManager</code>: 是 <code>kubelet</code> 中负责缓存和管理运行在节点上的 <code>pod</code> 所使用的 <code>configmap</code> 的组件。它通过与<code>podWorkers</code>&nbsp;的协作，确保在 <code>pod</code> 启动和终止时正确地获取和清理 <code>configmap</code>, 并保持 <code>configmap</code> 的最新状态。</li>
<li><code>volumeManager</code> : 是 <code>kubelet</code> 中负责管理运行在节点上的 <code>pod</code> 所使用的卷的组件。它通过观察 <code>pod</code> 的生命周期，执行必要的卷操作，并定期同步卷状态以确保与实际期望的卷集合一致，并管理这些 <code>pod</code> 的生命周期中涉及的卷（volumes）操作，包括：<!-- -->
<ul>
<li>挂载（attaching）：将卷连接到节点。</li>
<li>挂载（mounting）：将卷挂载到pod的文件系统。</li>
<li>卸载（unmounting）：从pod的文件系统卸载卷。</li>
<li>分离（detaching）：从节点断开卷的连接。</li>
</ul>
</li>
<li><code>statusManager</code>: 是 <code>kubelet</code> 中负责更新和管理 <code>pod</code> 状态的组件。它从<code>podWorker</code>接收状态更新，并将这些更新同步到 <code>API</code> 服务器中。<code>statusManager</code>&nbsp;对于 <code>kubelet</code> 合成的 <code>pod</code> 状态具有权威性，其他组件应该咨询它以获取正确的状态信息。同时，由于<code>statusManager</code>&nbsp;依赖于<code>podWorker</code>，因此需要检查 <code>pod</code> 运行状态的组件应该直接咨询<code>podWorker</code>。这样可以确保 <code>pod</code> 状态的一致性和准确性，从而保证整个系统的正常运行。</li>
<li><code>imageManager</code> : 是kubelet中负责管理镜像垃圾回收的组件。它通过定期检查和清理不再使用的镜像，帮助维护节点的磁盘空间，确保节点有足够的资源来运行新的pod</li>
<li><code>containerLogManager</code> : 是kubelet中负责管理容器日志的组件。它通过收集、存储、轮转和清理容器日志，确保日志数据的可用性和节点的磁盘空间不会被过度消耗。</li>
<li><code>serverCertificateManager</code>: 是kubelet中负责处理证书轮换的组件。它通过监控证书的有效期，自动进行证书轮换，并确保所有相关组件能够使用新的证书。这个组件对于维护集群的安全通信和防止证书过期导致的服务中断非常重要。</li>
<li><code>cloudResourceSyncManager</code>: 是kubelet中负责处理向云服务提供商发送请求的组件。它通过设置请求的超时时间，确保请求在预定的时间内完成，并处理请求过程中可能出现的错误。</li>
<li><code>Runtime</code> 相关的字段：<!-- -->
<ul>
<li><code>containerRuntime</code>: 是kubelet中负责管理容器生命周期的组件。它与底层的容器运行时（如Docker、containerd、CRI-O等）进行通信，执行以下任务</li>
<li><strong><code>streamingRuntime</code>:</strong> 负责处理容器的流式操作，如日志流、exec命令和端口转发等</li>
<li><strong><code>runtimeService</code> :</strong>  是一个内部API服务，它提供了与容器运行时进行交互的接口。这个服务通常是容器运行时接口（Container Runtime Interface, CRI）的一部分；在内部主要是调用 <code>containerRuntime</code> 这个对象去管理容器。</li>
</ul>
</li>
<li><code>PLEG</code> 相关的字段：<strong>PLEG</strong>&nbsp;是基于轮询的定期检查机制，用于检测和报告容器状态的变化, <strong>eventedPleg</strong>&nbsp;是基于事件驱动的实时响应机制，用于以低延迟提供容器状态的变化。<!-- -->
<ul>
<li><code>PLEG（Pod Lifecycle Event Generator）</code>:<!-- -->
<ol>
<li><strong>定期检查</strong>：PLEG 定期（通常是每隔几秒钟）检查所有pod和容器的状态，并将状态变化生成事件。</li>
<li><strong>轮询机制</strong>：PLEG 使用轮询机制来检测容器状态的变化，这意味着它需要定期扫描所有容器，即使没有状态变化也会进行检查。</li>
<li><strong>延迟</strong>：由于是定期检查，PLEG 可能会有一定的延迟，因为它需要等待下一个检查周期才能发现状态变化。</li>
</ol>
</li>
<li><code>eventedPleg</code> :<!-- -->
<ol>
<li><strong>事件驱动</strong>：<code>eventedPleg</code>&nbsp;通过监听容器运行时的事件来实时获取容器状态的变化，而不是定期检查。</li>
<li><strong>低延迟</strong>：<code>eventedPleg</code>&nbsp;可以在容器状态发生变化时立即响应，因此具有更低的延迟。</li>
<li><strong>边缘驱动</strong>：<code>eventedPleg</code>&nbsp;在容器状态变化的边缘（即事件发生时）触发响应，而不是在周期性的检查点。</li>
</ol>
</li>
</ul>
</li>
<li><code>containerRefManager</code> : 容器引用的管理，用来报告容器的创建、失败事件等.</li>
</ul>
<p>上述描述了 <code>Kubelet</code> 结构体中定义的核心的字段，除此之外还有很多字段，一些字段比较简单，这里不一一描述。</p>
<p><img decoding="async" loading="lazy" alt="kubelet-arch.drawio.png" src="https://lengrongfu.github.io/assets/images/kubelet-arch-8f1969a6bde0633f0cf5decdc7ee7e77.png" width="2000" height="836" class="img_ev3q"></p>
<p><code>Kubelet</code> 启动之后会创建 <code>syncLoopIteration</code> 的循环，它接受一个 <code>podUpdate</code> 的 <code>chan</code> ,分别从静态文件、HTTP URL、List-Watch(API) 三个来源写入创建、更新、删除的 <code>Pod</code> ;</p>
<p>接收到 <code>podUpdate</code> 对象之后，会进入 <code>podWorkers.UpdatePod</code> 的方法中进行处理，之后发往 <code>podWork</code> chan 里面，在 <code>podWorkLoop</code> 中，针对每个 <code>pod</code> 会创建一个协程，然后在 <code>syncPod</code> 中处理，里面主要就是把 <code>pod</code> 发往 <code>podStatus</code> 中进行状态处理，还有就是创建容器，然后就是调用 <code>CRI</code> 的接口拉镜像、调用 <code>device-plugin</code> 的接口进行设备的分配，以及 <code>CRI</code> 的容器服务接口创建容器等。</p>
<p>在 <code>syncLoopIteration</code> 中还会通过 <code>syncCh</code> 和 <code>cleanupCh</code> 配置的 <code>time.Ticker</code> 定期的处理 <code>pod</code>,以及在 <code>containerCh</code> chan 中接受 <code>device-plguin</code> 上报的设备健康信息，还有 <code>probeCh</code> 这个根据 <code>livenessManager、readinessManager、startupManager</code>  这三个探针的结果影响 <code>pod</code> 的状态更新；</p>
<p><code>plegCh</code> 会接受 <code>Pod</code> 的 <code>Lifecycle Event</code> ,根据 <code>Event</code> 来决定 <code>pod</code> 的 sync.</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubelet" term="Kubelet"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[JSON Patch and JSON Merge Patch]]></title>
        <id>https://lengrongfu.github.io/blog/jsonpatch-jsonmergepatch</id>
        <link href="https://lengrongfu.github.io/blog/jsonpatch-jsonmergepatch"/>
        <updated>2022-09-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[JSON Patch vs JSON Merge Patch]]></summary>
        <content type="html"><![CDATA[<p>JSON Patch vs JSON Merge Patch</p>
<p><code>PATCH</code> 作为 <code>HTTP</code> 的一种 <code>Method</code>, 近年来受到较多的关注，于是便提出关于使用 <code>JSON</code> 驱动 <code>PATCH</code> 格式的想法，这种格式用声明式的形式来描述两个<code>JSON</code>文档之间的差异，<code>IETF</code>发布了两种格式来解决这个问题： <a href="https://tools.ietf.org/html/rfc6902" target="_blank" rel="noopener noreferrer">RFC 6902 (JSON Patch)</a>和&nbsp;<a href="https://www.rfc-editor.org/rfc/rfc7396" target="_blank" rel="noopener noreferrer">RFC 7396 (JSON Merge Patch)</a>，两者各有优缺点，没有一种是可以适用于任何人的，让我们来看下他们的区别。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json-patch">JSON PATCH<a href="https://lengrongfu.github.io/blog/jsonpatch-jsonmergepatch#json-patch" class="hash-link" aria-label="Direct link to JSON PATCH" title="Direct link to JSON PATCH">​</a></h2>
<p><code>JSON PATCH</code> 的格式类似于数据库事物，它是一个 <code>JSON Document,</code>它基本上是由<code>ADD</code>、<code>REMOVE</code>、<code>REPLACE</code>、<code>MOVE</code>、<code>COPY</code> 一系列操作组成的。</p>
<p>下面一个简单的示例描述了一个 <code>JSON</code> 的内容：</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"users" : [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{ "name" : "Alice" , "email" : "alice@example.org" },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{ "name" : "Bob" , "email" : "bob@example.org" }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在这个 <code>JSON</code>中执行<code>JSON PATCH</code>操作，更改<code>Alice</code>的电子邮件，并且添加一个新的<code>user</code>到数组中：</p>
<div class="language-Json language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"op" : "replace" ,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"path" : "/users/0/email" ,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"value" : "alice@wonderland.org"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"op" : "add" ,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"path" : "/users/-" ,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"value" : {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"name" : "Christine",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			"email" : "christine@example.org"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>它的结果将是：</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"users" : [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{ "name" : "Alice" , "email" : "alice@wonderland.org" },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{ "name" : "Bob" , "email" : "bob@example.org" },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		{ "name" : "Christine" , "email" : "christine@example.org" }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>一个<code>JSON PATCH</code> 有以下几个基本元素描述而成：</p>
<ul>
<li><code>op </code>健表示操作类型。</li>
<li>操作的参数由其他元素描述。</li>
<li><code>path</code>是指向作为操作目标的<code>JSON</code>中的指针，是一个必须存在的参数。</li>
</ul>
<p><code>JSON PATCH</code> 操作提供了一个 <code>test</code> 操作类型，它没有任何坏处，所以它不是一个数据操作运算符，它可以用来对执行过程进行断言，如果<code>test</code>评估结果为<code>false</code>,则可以中断执行。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json-merge-patch">JSON MERGE PATCH<a href="https://lengrongfu.github.io/blog/jsonpatch-jsonmergepatch#json-merge-patch" class="hash-link" aria-label="Direct link to JSON MERGE PATCH" title="Direct link to JSON MERGE PATCH">​</a></h2>
<p><code>JSON MERGE PATCH</code> 它描述了 <code>json document</code>的更改版本，与<code>JSON PATCH</code> 类似，区别在于它类似<code>diff</code>文件，只包含执行后应该不同的<code>document</code>节点。</p>
<p>如下是一个简单的<code>JSON</code>文档，来说明<code>JSON MERGE PATCH</code>的格式：</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"a": "b",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"c": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"d": "e",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"f": "g"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>我们可以在上述的<code>JSON</code>中运行如下的<code>MERGE PATCH</code>:</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"a":"z",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	"c": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"f": null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个将 <code>a</code> 的值改为 <code>z</code> ,并且将删除 <code>c</code>。</p>
<p>它看着很简单，但是这种简单性也带来了限制：</p>
<ul>
<li>通过将<code>key</code>的值设置为<code>null</code>来进行删除，这本质上就导致用户不能主动设置<code>null</code>值。</li>
<li>数组不能被<code>PATCH</code>操作，如果想将一个元素添加到数组中，或者改变它的任何元素，那么必须要提供一个完整的数据才能执行。</li>
<li><code>MERGE PATCH</code>操作永远不会导致错误，任何格式错误的补丁都会被<code>PATCH</code>,所以它是一种自由的格式，这不一定是好的，因为我们可能需要在执行完<code>MEGER PATCH</code> 之后进行<code>JSON SCHEMA</code>的验证，错误就撤销<code>PATCH</code>，但是目前实现不了。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="总结">总结<a href="https://lengrongfu.github.io/blog/jsonpatch-jsonmergepatch#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="Direct link to 总结" title="Direct link to 总结">​</a></h2>
<p><code>JOSN MERGE PATCH</code> 是一种非常简单的格式，可用性有限，对于更复杂的用户，请使用<code>JSON PATCH</code>,由于它使用与任何<code>JSON</code>文档，该规范还提供了原子执行和执行前后执行<code>test</code>检查。</p>
<p><code>Kubernetes</code> 的 <code>PATCH</code>是支持<code>JSON MERGER PATCH</code> 和 <code>MERGE PATCH</code>的，但是使用<code>JSON MERGE PATCH</code>的场景较少，也是建议使用<code>JSON PATCH</code>，最根本原因就是<code>JSON MERGE PATCH</code>的协议格式过于简单，难以应用在复杂场景。</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vscode Remote Golang开发环境打造]]></title>
        <id>https://lengrongfu.github.io/blog/remote-golang-developer-env</id>
        <link href="https://lengrongfu.github.io/blog/remote-golang-developer-env"/>
        <updated>2022-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[通过Vscode打造远程开发环境，可以加快工作效率.]]></summary>
        <content type="html"><![CDATA[<p>通过<code>Vscode</code>打造远程开发环境，可以加快工作效率.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="背景">背景<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#%E8%83%8C%E6%99%AF" class="hash-link" aria-label="Direct link to 背景" title="Direct link to 背景">​</a></h2>
<p>我之前的开发环境一直都是使用 <code>Mac + Goland</code>，但是最近在编译一个程序的时候发现编译不通过，经过排查发现是 <code>Mac</code>上的 <code>Make</code> 语法出现了不兼容，于是想到了打造一套 <code>Remote Linux + Vscode</code> 的开发环境。</p>
<p>刚好有一个大学时候的笔记本，重装为了 <code>Ubuntu</code> 系统，就用这个电脑来打造就可以，远程开发环境和本地开发环境相比，有利有弊；</p>
<table><thead><tr><th>对比</th><th>本地环境</th><th>远程环境</th></tr></thead><tbody><tr><td>优点</td><td>1.程序启动快，环境加载快。<br> 2.不会受限于网络环境和地域环境。</td><td>1. 可以使用较多资源，如内存、CPU、磁盘等。<br>2. 减少对Mac环境的影响，使用Linux开发环境。</td></tr><tr><td>缺点</td><td>1. 和本地系统绑定，有些软件在Mac下不能很好的执行和编辑<br>2. 内存、资源这些都受限</td><td>1. 这个原创环境只能在家里私有化网络环境下使用<br>2.因为操作都是网络传输，所以初始化的时候比较慢。``</td></tr></tbody></table>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="基本环境">基本环境<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#%E5%9F%BA%E6%9C%AC%E7%8E%AF%E5%A2%83" class="hash-link" aria-label="Direct link to 基本环境" title="Direct link to 基本环境">​</a></h2>
<ul>
<li>有一个远程的<code>Linux</code>环境，可以是<code>Ubuntu</code>，也可以是<code>Centos</code>，并打开远程连接<code>ssh 22</code>端口。</li>
<li>本地机器安装<code>Vscode</code>。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="远程环境">远程环境<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#%E8%BF%9C%E7%A8%8B%E7%8E%AF%E5%A2%83" class="hash-link" aria-label="Direct link to 远程环境" title="Direct link to 远程环境">​</a></h2>
<p>按照如下的流程配置开发环境；</p>
<ol>
<li>
<p>本地Vscode安装扩展插件：在<code>Vscode</code>的扩展中搜索<code>ssh</code>插件，选择安装<code>Remote - SSH</code>这个插件。</p>
</li>
<li>
<p>创建<code>ssh</code>密钥：</p>
</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 执行如下的命令，就会在~/.ssh目录下生成 id_rsa_goland_developer_com、id_rsa_goland_developer_com.pub 两个文件</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ ssh-keygen -f id_rsa_goland_developer_com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="3">
<li>在<code>Remote Linux</code>上配置本地公钥，实现免密登录</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 把本地id_rsa_goland_developer_com.pub文件上传到远程机器上，并写入到 ~/.ssh/authorized_keys 文件中，也可以直接复制通过vim编辑写入</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ cat id_rsa_goland_developer_com.pub &gt; ~/.ssh/authorized_keys</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>
<p>点击<code>remote ssh</code>的<code>Configure</code>，选择第一个配置文件;
<img decoding="async" loading="lazy" alt="image-20220507210602712" src="https://lengrongfu.github.io/assets/images/image-20220507210602712-a5caf451431e4895398ac73be0be7157.png" width="1747" height="390" class="img_ev3q"></p>
</li>
<li>
<p>添加远程主机配置：</p>
</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Host GoDev</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    User {user}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    HostName {ip}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    IdentityFile ~/.ssh/id_rsa_goland_developer_com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><code>GoDev</code>：远程主机的标示名称，可以随意取，方便识别就可以。</li>
<li><code>{user}</code>：远程主机的用户，最好不要使用<code>root</code>，可以通过<code>useradd</code>命令新添加一个用户。</li>
<li><code>{ip}</code>：远程主机的地址。</li>
<li><code>IdentityFile</code>：用于远程登录的秘钥</li>
</ul>
<ol start="6">
<li>使用 <code>VS CODE</code> 连接远程开发机器</li>
</ol>
<ul>
<li>
<p>连接远程主机
<img decoding="async" loading="lazy" alt="image-20220507211751447.png" src="https://lengrongfu.github.io/assets/images/image-20220507211751447-ce2d9cac3eaf63bc351b85d4c9c26930.png" width="2163" height="426" class="img_ev3q"></p>
</li>
<li>
<p>连接成功后可以选择打开的工作目录
<img decoding="async" loading="lazy" alt="image-20220507212224603.png" src="https://lengrongfu.github.io/assets/images/image-20220507212224603-b045fa239539a9c2ac833a7abf33e22e.png" width="1771" height="418" class="img_ev3q"></p>
</li>
</ul>
<p>这样远程环境就配置好了，下面就开始配置开发环境。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="开发环境">开发环境<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83" class="hash-link" aria-label="Direct link to 开发环境" title="Direct link to 开发环境">​</a></h2>
<p>如果这是一个新的<code>Linue</code>环境，所以我上面没有<code>go</code>环境这些，需要新进行安装<code>go</code>环境。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="go环境安装">Go环境安装<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#go%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85" class="hash-link" aria-label="Direct link to Go环境安装" title="Direct link to Go环境安装">​</a></h3>
<ul>
<li><code>Go</code>源码包下载地址：<a href="https://go.dev/doc/install" target="_blank" rel="noopener noreferrer">https://go.dev/doc/install</a></li>
</ul>
<ol>
<li>Go download.</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ wget -c https://dl.google.com/go/go1.19.linux-amd64.tar.gz</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="2">
<li>Go install.</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo tar -C /usr/local -xzf go1.19.linux-amd64.tar.gz</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ vim /etc/profile</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">export PATH=$PATH:/usr/local/go/bin</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ source /etc/profile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="3">
<li>设置 go env</li>
</ol>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ go env -w GO111MODULE=on</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ go env -w GOPROXY=https://goproxy.cn</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="vscode-go环境配置">Vscode Go环境配置<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#vscode-go%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="Direct link to Vscode Go环境配置" title="Direct link to Vscode Go环境配置">​</a></h3>
<ol>
<li>
<p>在打开远程连接的<code>Vscode</code>中安装<code>go</code>插件
<img decoding="async" loading="lazy" alt="image-20220507212648391" src="https://lengrongfu.github.io/assets/images/image-20220507212648391-e5cc19d1225d86856018143e361dee8b.png" width="864" height="483" class="img_ev3q"></p>
</li>
<li>
<p>安装其他Go插件</p>
</li>
</ol>
<blockquote>
<p>按快捷键ctrl+shift+p ，选择go install/update tools（安装所有相关包）。</p>
</blockquote>
<p><img decoding="async" loading="lazy" alt="image-20220507212945157" src="https://lengrongfu.github.io/assets/images/image-20220507212945157-eb34b09c75585b3e8a452721c0ab5ef1.png" width="1099" height="324" class="img_ev3q"></p>
<ol start="3">
<li>选择全部进行安装</li>
</ol>
<blockquote>
<p>最新版的Tools只有7个了，网上有些文章里面看着有10几个，那是很久之前的版本，在新版本中做了很多整合，比如：golint和goimports都整合到staticcheck中了。</p>
</blockquote>
<p><img decoding="async" loading="lazy" alt="image-20220507213258802" src="https://lengrongfu.github.io/assets/images/image-20220507213258802-cc83851190040f52b70a441ff6d969f3.png" width="1141" height="299" class="img_ev3q"></p>
<ol start="4">
<li>安装 <code>Code Run</code> 插件</li>
</ol>
<blockquote>
<p>搜索关键词code，安装Code Runner插件，这样就可以使用快捷键Ctrl+Alt+N运行代码了。</p>
</blockquote>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="其他设置">其他设置<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#%E5%85%B6%E4%BB%96%E8%AE%BE%EF%BF%BD%EF%BF%BD%E7%BD%AE" class="hash-link" aria-label="Direct link to 其他设置" title="Direct link to 其他设置">​</a></h2>
<p>因为使用的笔记本做为远程环境，所以为了避免屏幕一直亮着，可以配置让屏幕关闭显示。</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 在如下文件中加入或者修改如下两个变量值</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo vim /etc/systemd/logind.conf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HandleLidSwitch=ignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">HandleLidSwitchExternalPower=ignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># 之后重启就可以了</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo service systemd-logind restart</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="未来">未来<a href="https://lengrongfu.github.io/blog/remote-golang-developer-env#%E6%9C%AA%E6%9D%A5" class="hash-link" aria-label="Direct link to 未来" title="Direct link to 未来">​</a></h2>
<p>目前暂时使用笔记本，但是笔记本受限于内存大小、磁盘大小、<code>CPU</code> 性能，并且没有<code>GPU</code>,未来主要朝着家庭低功耗服务器去演进。</p>
<ul>
<li><a href="https://www.reddit.com/r/homelab/comments/rlouof/trying_to_build_a_small_low_power_server/" target="_blank" rel="noopener noreferrer">https://www.reddit.com/r/homelab/comments/rlouof/trying_to_build_a_small_low_power_server/</a></li>
<li><a href="https://kit.co/TechnoTim/efficient-low-power-powerful-virtualization-server" target="_blank" rel="noopener noreferrer">https://kit.co/TechnoTim/efficient-low-power-powerful-virtualization-server</a></li>
<li><a href="https://www.proxmox.com/en/" target="_blank" rel="noopener noreferrer">https://www.proxmox.com/en/</a></li>
</ul>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Developer Env" term="Developer Env"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github Contribute 注意事项]]></title>
        <id>https://lengrongfu.github.io/blog/github-contribute</id>
        <link href="https://lengrongfu.github.io/blog/github-contribute"/>
        <updated>2022-08-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[当我们在Github上贡献代码时要注意些什么？如下是个人贡献时总结的一些小心得，欢迎轻拍。]]></summary>
        <content type="html"><![CDATA[<p>当我们在<code>Github</code>上贡献代码时要注意些什么？如下是个人贡献时总结的一些小心得，欢迎轻拍。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="代码提交流程">代码提交流程<a href="https://lengrongfu.github.io/blog/github-contribute#%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B" class="hash-link" aria-label="Direct link to 代码提交流程" title="Direct link to 代码提交流程">​</a></h2>
<p>如下以以<code>kubernetes</code>为例，核心操作步骤如下图：
<img decoding="async" loading="lazy" alt="git_workflow.png" src="https://lengrongfu.github.io/assets/images/git_workflow-a05c064048d6c2754123c6510faef769.png" width="1280" height="720" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="签署贡献协议">签署贡献协议<a href="https://lengrongfu.github.io/blog/github-contribute#%E7%AD%BE%E7%BD%B2%E8%B4%A1%E7%8C%AE%E5%8D%8F%E8%AE%AE" class="hash-link" aria-label="Direct link to 签署贡献协议" title="Direct link to 签署贡献协议">​</a></h2>
<p>目前大多数开源项目都需要签署贡献协议，比如<code>DCO</code>协议，签署使用的就是当前<code>github</code>账号的账号和邮箱，所以在项目提交代码的时候需要先进行配置：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --local user.name lengrongfu</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --local user.email 1275177125@qq.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="一个pr尽量只用一个commit">一个PR尽量只用一个Commit<a href="https://lengrongfu.github.io/blog/github-contribute#%E4%B8%80%E4%B8%AApr%E5%B0%BD%E9%87%8F%E5%8F%AA%E7%94%A8%E4%B8%80%E4%B8%AAcommit" class="hash-link" aria-label="Direct link to 一个PR尽量只用一个Commit" title="Direct link to 一个PR尽量只用一个Commit">​</a></h2>
<p>单发生多次代码修改的时候，在<code>commit</code>的时候使用最开始的<code>commit</code>，使用命令如下：</p>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git commit -s --amend --no-edit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># -s 后会在PR中加入签名信息：Signed-off-by: lengrongfu 1275177125@qq.com</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --amend 追加commit，使用同一个commit ID</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># --no-edit 不进行任何更改，如果要修改commit 信息就不要使用这个标签</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="go项目开发要注意什么">Go项目开发要注意什么<a href="https://lengrongfu.github.io/blog/github-contribute#go%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88" class="hash-link" aria-label="Direct link to Go项目开发要注意什么" title="Direct link to Go项目开发要注意什么">​</a></h2>
<p><code>go</code>开源项目目前大多都是使用的<code>golangci-lint</code>、<code>goimports</code>来做代码格式等相关静态检查，在提交<code>PR</code>的时候都会检查是否符合这些工具的规范。</p>
<p>在<code>golangd</code>中配置上述工具，在文件产生变更的时候自动执行上述命令，进行格式校验，下面以<code>Mac Goland</code>为例讲解配置 ：</p>
<ul>
<li>通过<code>command+,</code>快捷键打开系统配置，或者点击左上角<code>preferences</code>菜单。</li>
<li>搜索<code>File Watchers</code></li>
<li>点击添加按钮，选择对应工具即可：
<img decoding="async" loading="lazy" alt="file-watcher.png" src="https://lengrongfu.github.io/assets/images/file-watcher-f877ea9658d79dce06211b14b3052467.png" width="1198" height="604" class="img_ev3q"></li>
<li>添加后可以选择所有项目生效或者当前项目生效。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="gitignore是否可以不修改">.gitignore是否可以不修改<a href="https://lengrongfu.github.io/blog/github-contribute#gitignore%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E4%B8%8D%E4%BF%AE%E6%94%B9" class="hash-link" aria-label="Direct link to .gitignore是否可以不修改" title="Direct link to .gitignore是否可以不修改">​</a></h2>
<p>很多编辑器都有对应的隐藏文件<code>.vscode</code>、<code>.idea</code>等，我们通过编辑器首次打开项目后都会生成这个文件，如果我们不想让这个文件提交，就只能往<code>.gitignore</code>里面加入忽略文件的信息。</p>
<p>但是从代码仓库管理员的角度看，如果每个人都把特定于个人的配置加入到<code>.gitignore</code>中，那整体维护起来将会很难。</p>
<p>有一个更好的解决办法：为您的所有存储库创建一个个人的全局<code>.gitignore</code>文件。</p>
<ul>
<li>选择一个地方存储全局<code>.gitignore</code>的文件，大多数人选择主目录</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ touch ~/.gitignore</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>在里面加入自己需要忽略的文件或者文件夹</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ vim ~/.gitignore</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.DS_Store</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.idea</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">.vscode</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>最后，配置git使用我们新创建的~/.gitignore文件</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --global core.excludesfile ~/.gitignore</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>如果您是 Windows 用户，则需要以不同方式格式化路径</li>
</ul>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ git config --global core.excludesfile %USERPROFILE%\.gitignore</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="引用">引用<a href="https://lengrongfu.github.io/blog/github-contribute#%E5%BC%95%E7%94%A8" class="hash-link" aria-label="Direct link to 引用" title="Direct link to 引用">​</a></h2>
<ul>
<li><a href="https://github.com/kubernetes/community/blob/master/contributors/guide/github-workflow.md" target="_blank" rel="noopener noreferrer">github-workflow.md</a></li>
</ul>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Github" term="Github"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Distribution Auth Type]]></title>
        <id>https://lengrongfu.github.io/blog/distribution-auth</id>
        <link href="https://lengrongfu.github.io/blog/distribution-auth"/>
        <updated>2022-08-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Distribution Auth认证流程介绍]]></summary>
        <content type="html"><![CDATA[<p>Distribution Auth认证流程介绍</p>
<p><a href="https://github.com/distribution/distribution" target="_blank" rel="noopener noreferrer"><code>Distribution</code></a> 是一个按照 <code>OCI</code> 的规范实现的一个制品库管理工具，它提供了三种的认证方式，<code>htpasswd</code>、<code>silly</code>、<code>token</code>，在 <code>Distribution</code> 项目中采用的是策略模式。</p>
<p>它的认证流程如下图所示：</p>
<p><img decoding="async" loading="lazy" alt="auth" src="https://lengrongfu.github.io/assets/images/auth-02304b74ba61487a8263ce6a891a474d.png" width="610" height="781" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="htpasswd">htpasswd<a href="https://lengrongfu.github.io/blog/distribution-auth#htpasswd" class="hash-link" aria-label="Direct link to htpasswd" title="Direct link to htpasswd">​</a></h2>
<p><code>htpasswd</code> 是一种在系统中，它包含一个 <code>htpasswd</code> 的文件（文件内容是初始的用户名<code>docker</code>，以及一个使用特定算法随机生成的密码）以及如何解析这个文件的算法（目前只能使用 <code>bcrypt</code> 加密算法）。</p>
<p>配置格式如下：</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">auth</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">htpasswd</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">realm</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> harbor</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">registry</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">basic</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">realm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /etc/registry/passwd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>
<p>启动过程中会校验 <code>path</code> 对应的文件是否存在，如果不存在，就创建并写入内容，内容为用户：<code>docker</code>, 密码为随机生成并加密存储。</p>
</li>
<li>
<p>用户在请求过程中，每个请求都会进入配置好的访问控制器中，进行权限验证。</p>
</li>
<li>
<p>会首先判断 <code>Header</code> 中是否存在 <code>Authorization</code> 字段值，并正确解析；如果不存在，则认为无效认证。</p>
</li>
<li>
<p>如果存在用户密码则会和文件中写入的内容进行对比，确保是一致的（提示：在对比之前系统会先校验这个文件是否被修改过，如果被修改过就会从新生成文件内容）。</p>
</li>
</ol>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="silly">silly<a href="https://lengrongfu.github.io/blog/distribution-auth#silly" class="hash-link" aria-label="Direct link to silly" title="Direct link to silly">​</a></h2>
<p>这个主要是用于测试的，是简单功能的实现；它主要是检查 <code>Header</code> 中是否存在 <code>Authorization</code> 并且值非空，如果是就进行授权通过。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="token">token<a href="https://lengrongfu.github.io/blog/distribution-auth#token" class="hash-link" aria-label="Direct link to token" title="Direct link to token">​</a></h2>
<p><img decoding="async" loading="lazy" alt="auth" src="https://lengrongfu.github.io/assets/images/v2-registry-auth-df4a5006246cd127c0d0c30510537f50.png" width="472" height="360" class="img_ev3q"></p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">auth</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">token</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">realm</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> https</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">//localhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">5011/auth</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Authentication</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">issuer</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Sample Issuer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">rootCertBundle</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /mnt/local/certs/RootCA.crt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>token</code> 认证需要借助外部认证服务，可以实现资源、权限的管理，<code>distribution</code> 的响应的时候会返回给用户 <code>scope</code> 就是资源权限</p>
<ol>
<li>启动过程会校验 <code>token</code> 配置的参数是否正确，并且校验 <code>tls</code> 证书。</li>
<li>用户请求时，会从 <code>Header</code> 中获取认证信息，如果没有认证，则会根据是否配置 <code>autoRedirect</code> 以及重定向地址 <code>realm</code>。</li>
<li><code>distribution</code> 会返回 <code>401</code> 的请求，并携带<code>WWW-Authenticate</code> 告诉客户端改如何向认证服务进行认证。</li>
</ol>
<blockquote>
<p>如：一个未授权的用户正在 <code>Push</code>镜像到 <code>samalba/my-app</code> repoName 中，就会返回</p>
<ul>
<li>scope: 授权范围</li>
<li>service: 授权服务</li>
<li>realm: 认证服务</li>
</ul>
</blockquote>
<div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">HTTP/1.1 401 Unauthorized</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Content-Type: application/json; charset=utf-8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Docker-Distribution-Api-Version: registry/2.0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Www-Authenticate: Bearer realm="https://auth.docker.io/token",service="registry.docker.io",scope="repository:samalba/my-app:pull,push"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Date: Thu, 10 Sep 2015 19:32:31 GMT</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Content-Length: 235</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Strict-Transport-Security: max-age=31536000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{"errors":[{"code":"UNAUTHORIZED","message":"access to the requested resource is not authorized","detail":[{"Type":"repository","Name":"samalba/my-app","Action":"pull"},{"Type":"repository","Name":"samalba/my-app","Action":"push"}]}]}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="4">
<li>如果开启自动重定向，则请求的就是 <code>distribution</code> host 的接口：<code>https://%s/auth/token</code>，没有则走用户配置<code>realm</code></li>
</ol>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="镜像仓库" term="镜像仓库"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes Scheduler]]></title>
        <id>https://lengrongfu.github.io/blog/Kubernetes-Scheduler</id>
        <link href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler"/>
        <updated>2022-07-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Kubernetes Scheduler 基本使用概念]]></summary>
        <content type="html"><![CDATA[<p>Kubernetes Scheduler 基本使用概念</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="scheduler-workflow">Scheduler Workflow<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#scheduler-workflow" class="hash-link" aria-label="Direct link to Scheduler Workflow" title="Direct link to Scheduler Workflow">​</a></h2>
<p><img decoding="async" loading="lazy" alt="schedule-workflow" src="https://lengrongfu.github.io/assets/images/schedule-workflow-258bff258660b628d176de7fd4f26c2e.jpeg" width="1643" height="863" class="img_ev3q"></p>
<p><code>Scheduler WorkFlow</code>定义了<code>Scheduler Cycle</code>和<code>Binding Cycle</code>，在<code>Scheduler Cycle</code>中有串行<code>Filter </code>和<code>Score</code>两个阶段，<code>Bind</code>是异步并行阶段。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="scheduler-framework">Scheduler FrameWork<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#scheduler-framework" class="hash-link" aria-label="Direct link to Scheduler FrameWork" title="Direct link to Scheduler FrameWork">​</a></h2>
<p><code>Scheduler FrameWork</code>是通过在<code>Scheduler  Cycle</code>中通过预留扩展点来进行扩展调度流程，<code>FrameWork</code>预留了多个扩展点:</p>
<ul>
<li><code>QueueSortFunc() LessFunc</code>： <code>Pod</code> 从队列中获取的优先级</li>
<li><code>PreFilter</code>： 在过滤之前执行</li>
<li><code>Filter</code>： 执行过滤函数</li>
<li><code>PostFilter</code>: 执行抢占</li>
<li><code>PreScore</code>：执行`Score之前执行</li>
<li><code>Score</code>: 执行<code>Node</code>打分</li>
<li><code>PreBind</code>: 执行<code>Binding</code>之前</li>
<li><code>Bind</code>： 执行<code>Binding</code>动作</li>
<li><code>PostBind</code>：执行<code>Binding</code>之后</li>
</ul>
<p>自定义<code>Schedlue</code>可以通过直接实现<code>Scheduler FrameWork</code>中暴露的接口，然后在启动过程中进行<code>Plugin</code>注册即可。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	rand</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Seed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">UTC</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">UnixNano</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	logs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">InitLogs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> logs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FlushLogs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	cmd </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewSchedulerCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		app</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithPlugin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sample</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> sample</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">New</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> cmd</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Execute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Fprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Stderr</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"%v\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Exit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="scheduler-plugin">Scheduler Plugin<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#scheduler-plugin" class="hash-link" aria-label="Direct link to Scheduler Plugin" title="Direct link to Scheduler Plugin">​</a></h2>
<p>如下的<code>Scheduler Plugin</code>是<code>kube-scheduler</code>里面内嵌的插件，涵盖了<code>WorkFlow</code>里面的所有流程。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sort排序">Sort(排序)<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#sort%E6%8E%92%E5%BA%8F" class="hash-link" aria-label="Direct link to Sort(排序)" title="Direct link to Sort(排序)">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1prioritysort">1.PrioritySort<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#1prioritysort" class="hash-link" aria-label="Direct link to 1.PrioritySort" title="Direct link to 1.PrioritySort">​</a></h4>
<p><code>PrioritySort</code>优先队列是进行<code>Pod</code>在入队时的排序函数，按找<code>Pod</code>的优先级进行排序，通过读取<code>pod.Spec.Priority</code>字段值进行排序，如果未设置<code>Pod</code>的优先级则按照添加到队列的时间先后进行排序。</p>
<div class="language-Go language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">p1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> pod1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Priority </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> ? </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">pod1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Priority </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">p2 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> pod2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Priority </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> ? </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">pod2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Spec</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Priority </span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1 </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1 </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> p2 </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> pInfo1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Timestamp</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Before</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pInfo2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Timestamp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="filter预选">Filter(预选)<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#filter%E9%A2%84%E9%80%89" class="hash-link" aria-label="Direct link to Filter(预选)" title="Direct link to Filter(预选)">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1-interpodaffinity">1. InterPodAffinity<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#1-interpodaffinity" class="hash-link" aria-label="Direct link to 1. InterPodAffinity" title="Direct link to 1. InterPodAffinity">​</a></h4>
<p><code>InterPodAffinity</code> 检查<code>Pod</code>的亲和性是否满足，实现了<code>PreFilterPlugin</code>和<code>FilterPlugin</code>两个插件；</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2-nodeaffinity">2. NodeAffinity<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#2-nodeaffinity" class="hash-link" aria-label="Direct link to 2. NodeAffinity" title="Direct link to 2. NodeAffinity">​</a></h4>
<p><code>NodeAffinity</code>是<code>Node</code>亲和性的过滤，通过<code>pod.Spec.Affinity.NodeAffinity </code>是否配置<code>Node</code>亲和性和<code>Node</code>进行<code>Match</code>动作。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3nodename">3.NodeName<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#3nodename" class="hash-link" aria-label="Direct link to 3.NodeName" title="Direct link to 3.NodeName">​</a></h4>
<p><code>NodeName</code>用于在对<code>pod.Spec.NodeName</code>字段值的判断，判断是否是当前的<code>Node</code>，如果指定了<code>pod.Spec.NodeName</code>并且不是当前的节点，则返回<code>UnschedulableAndUnresolvable</code>状态。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="4nodeports">4.NodePorts<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#4nodeports" class="hash-link" aria-label="Direct link to 4.NodePorts" title="Direct link to 4.NodePorts">​</a></h4>
<p><code>NodePorts</code>用于检查要启用的端口是否已经在<code>Node</code>上使用过，如果使用过则返回<code>Unschedulable</code>状态。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="5noderesourcesfit">5.NodeResourcesFit<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#5noderesourcesfit" class="hash-link" aria-label="Direct link to 5.NodeResourcesFit" title="Direct link to 5.NodeResourcesFit">​</a></h4>
<p><code>NodeResourcesFit</code> 检查节点是否有足够的资源，如:<code>cpu</code>、<code>memory</code>、<code>gpu</code>等，通过那取<code>max_resource(sum_pod, any_init_container)</code>和<code>node</code>可分配的资源来判断节点是否资源足够。如果有任一资源不够，此节点则会返回资源不足被过滤。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="6nodeunschedulable">6.NodeUnschedulable<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#6nodeunschedulable" class="hash-link" aria-label="Direct link to 6.NodeUnschedulable" title="Direct link to 6.NodeUnschedulable">​</a></h4>
<p><code>NodeUnschedulable</code> 插件过滤设置<code>node.Spec.Unschedulable=true</code>的节点，但是如果<code>Pod</code>设置了容忍<code>Unschedulable</code>的污点则不过滤。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="7nodevolumelimits">7.NodeVolumeLimits<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#7nodevolumelimits" class="hash-link" aria-label="Direct link to 7.NodeVolumeLimits" title="Direct link to 7.NodeVolumeLimits">​</a></h4>
<p><code>NodeVolumeLimits</code>是一个节点检查<code>volume</code>容量的插件； 校验PVC指定的Provision在CSI plugin或非CSI Plugin（后三个）上报的单机最大挂盘数（存储插件提供方一般对每个节点的单机最大挂载磁盘数是有限制的）</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="8podtopologyspread">8.PodTopologySpread<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#8podtopologyspread" class="hash-link" aria-label="Direct link to 8.PodTopologySpread" title="Direct link to 8.PodTopologySpread">​</a></h4>
<p><code>PodTopologySpread</code> 是用于检查<code>Pod</code>的拓扑逻辑是否满足条件，</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="9tainttoleration">9.TaintToleration<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#9tainttoleration" class="hash-link" aria-label="Direct link to 9.TaintToleration" title="Direct link to 9.TaintToleration">​</a></h4>
<p><code>TaintToleration</code>是一个污点容忍度的插件，用于检查<code>Pod</code>是否能容忍次污点。<code>Taint</code>污点是<code>Node</code>上的标签，<code>Toleration</code>容忍度是<code>Pod</code>上的功能，一个容忍度和一个污点相“匹配”是指它们有一样的<code>key</code>和<code>value</code>。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="10volumebinding">10.VolumeBinding<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#10volumebinding" class="hash-link" aria-label="Direct link to 10.VolumeBinding" title="Direct link to 10.VolumeBinding">​</a></h4>
<p><code>VolumeBinding</code>检查<code>Pod</code>挂载的<code>PVC</code>，如果其对应<code>SC(StorageClass)</code>的<code>VolumeBindingMode</code>是<code>Immediate</code>模式，该<code>PVC</code>必须已经是<code>bound</code>，否则需要返回<code>UnschedulableAndUnresolvable</code>。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="11volumerestrictions">11.VolumeRestrictions<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#11volumerestrictions" class="hash-link" aria-label="Direct link to 11.VolumeRestrictions" title="Direct link to 11.VolumeRestrictions">​</a></h4>
<p><code>VolumeRestrictions</code> 检查挂载该Node上的卷是否满足存储提供者的要求</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="score优选">Score(优选)<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#score%E4%BC%98%E9%80%89" class="hash-link" aria-label="Direct link to Score(优选)" title="Direct link to Score(优选)">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1imagelocality">1.ImageLocality<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#1imagelocality" class="hash-link" aria-label="Direct link to 1.ImageLocality" title="Direct link to 1.ImageLocality">​</a></h4>
<p><code>ImageLocality</code>是一个打分插件，对于调度<code>Pod</code>的镜像已经存在<code>Node</code>上给评分。已经存在的镜像并且镜像越大的分越高；（逻辑就是越大的镜像如果被重新拉取需要花费更多的时间，但是小的镜像拉起来就快，所以镜像存在并且越大的分越高就是这个逻辑）;如果一个节点上的镜像总大小<code>&lt; 23Mb</code>则<code>node</code>会被打<code>0</code>分；如果一个节点上的镜像总大于<code>1G * 容器数</code>则会被打<code>1</code>分。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2interpodaffinity">2.InterPodAffinity<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#2interpodaffinity" class="hash-link" aria-label="Direct link to 2.InterPodAffinity" title="Direct link to 2.InterPodAffinity">​</a></h4>
<p><code>InterPodAffinity</code>在<code>Pod</code>亲和性之间计算亲和性的的分值。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3nodeaffinity">3.NodeAffinity<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#3nodeaffinity" class="hash-link" aria-label="Direct link to 3.NodeAffinity" title="Direct link to 3.NodeAffinity">​</a></h4>
<p><code>NodeAffinity</code>是通过节点的亲和性来进行节点打分的，<code>PreScore</code> 主要逻辑是从<code>pod.Spec.Affinity.NodeAffinity.PreferredDuringSchedulingIgnoredDuringExecution</code>字段中获取首选节点亲和配置，主要的是配置的<code>weight</code>字段值，在通过<code>Label</code>匹配过程中，发现<code>Node.Meta.Label</code>是匹配<code>matchExpressions</code>中的字段则<code>score += weight</code>，这样这个节点的优先级就提高了。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="4noderesourcesbalancedallocation">4.NodeResourcesBalancedAllocation<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#4noderesourcesbalancedallocation" class="hash-link" aria-label="Direct link to 4.NodeResourcesBalancedAllocation" title="Direct link to 4.NodeResourcesBalancedAllocation">​</a></h4>
<p><code>NodeResourcesBalancedAllocation</code>节点资源均衡插件，是一个通过<code>cpu</code>和<code>memory</code>容量分数之间的差异，根据他们的优先级进行排名；对于资源使用率均衡的节点分值更高。</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># ResourceSpec[{"name":"cpu","Weight":1},{"name":"memory","Weight":1}]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">std =  Σ((fraction(i)-mean)^2)/len(resources)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># std计算取决于需要均衡几种资源，如果只有cpu和memory</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">std=Abs( (cpuRequest1/cpuAllocable1 - memoryRequest1/memoryAllocable1) / 2 )</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># node打分则由如下计算</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">score = (1 - std) * MaxNodeScore(100)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="5noderesourcesfit-1">5.NodeResourcesFit<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#5noderesourcesfit-1" class="hash-link" aria-label="Direct link to 5.NodeResourcesFit" title="Direct link to 5.NodeResourcesFit">​</a></h4>
<p><code>NodeResourcesFit</code>打分已经配置的策略进行，有如下三种：</p>
<ul>
<li><code>LeastAllocated</code>: 优先分配资源最少的节点；就是资源堆叠</li>
<li><code>MostAllocated</code>: 优先分配资源最多的节点；就是资源打散</li>
<li><code>RequestedToCapacityRatio</code>: 可以自定义函数，对资源容量进行打分。</li>
</ul>
<p><code>LeastAllocated</code>计算节点分值逻辑：<code>(cpu((capacity-requested)*MaxNodeScore*cpuWeight/capacity) + memory((capacity-requested)*MaxNodeScore*memoryWeight/capacity) + ...)/weightSum</code></p>
<p>MostAllocated 计算节点分值逻辑：<code>(cpu(MaxNodeScore * sum(requested) / capacity) + memory(MaxNodeScore * sum(requested) / capacity) + ...) / weightSum</code></p>
<p><code>capacity</code>是<code>allocable</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="6podtopologyspread">6.PodTopologySpread<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#6podtopologyspread" class="hash-link" aria-label="Direct link to 6.PodTopologySpread" title="Direct link to 6.PodTopologySpread">​</a></h4>
<p><code>PodTopologySpread</code>权重为2</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="7selectorspread">7.SelectorSpread<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#7selectorspread" class="hash-link" aria-label="Direct link to 7.SelectorSpread" title="Direct link to 7.SelectorSpread">​</a></h4>
<p><code>SelectorSpread</code>是一个计算选择器传播优先级的打分插件；</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="8tainttoleration">8.TaintToleration<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#8tainttoleration" class="hash-link" aria-label="Direct link to 8.TaintToleration" title="Direct link to 8.TaintToleration">​</a></h4>
<p><code>TaintToleration计算无法容忍污点的一个插件，用于给</code>Pod 无法容忍污点打分，每一个无法容忍则<code>+1</code>，最后得到的就是<code>Node</code>的分。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="binding绑定">Binding(绑定)<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#binding%E7%BB%91%E5%AE%9A" class="hash-link" aria-label="Direct link to Binding(绑定)" title="Direct link to Binding(绑定)">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1-defaultbind">1. DefaultBind<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#1-defaultbind" class="hash-link" aria-label="Direct link to 1. DefaultBind" title="Direct link to 1. DefaultBind">​</a></h4>
<p><code>DefaultBind</code>是通过使用<code>k8s client</code>绑定<code>Pod</code>到<code>Node</code>。绑定流程是先创建一个<code>Binding</code>类型对象，通过设置<code>Target</code>字段值，来记录绑定对象的目标对象。</p>
<div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Binding是将一个对象与另一个对象联系起来</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Binding </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	metav1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">TypeMeta </span><span class="token string" style="color:#e3116c">`json:",inline"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	metav1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ObjectMeta </span><span class="token string" style="color:#e3116c">`json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Target ObjectReference </span><span class="token string" style="color:#e3116c">`json:"target" protobuf:"bytes,2,opt,name=target"`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">binding </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Binding</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		ObjectMeta</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> metav1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ObjectMeta</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Namespace</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Namespace</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> UID</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">UID</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		Target</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">     v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ObjectReference</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">Kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Node"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> nodeName</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>创建<code>Binding</code>对象之后，通过<code>Pods</code>的<code>Bind</code>方法就可以进行结果绑定。最终是创建<code>Pod</code>的绑定。</p>
<div class="language-http codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-http codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">POST /api/v1/namespaces/{namespace}/pods/{name}/binding</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">namespace: pod namespace</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">name: binding 名字</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">body: Binding对象结构体</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>选中的节点在和待调度Pod进行Bind的时候，有可能会Bind失败，此时需要做回退，把Pod的Assumed状态退回Initial，从Node里面把Pod数据账本擦除掉，会把Pod重新丢回到unschedulableQ队列里面。在unschedulableQ里，如果一个Pod一分钟没调度过，就会重新回到activeQ。它的轮询周期是30s。</p>
<p>调度失败的<code>Pod</code>会放到<code>backoffQ</code>，在<code>backoffQ</code>里等待的时间会比在<code>unschedulableQ</code>里更短，<code>backoffQ</code>里的降级策略是<code>2</code>的指数次幂降级。假设重试第一次为<code>1s</code>，那第二次就是<code>2s</code>，第三次就是<code>4s</code>，但最大到<code>10s</code>。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2volumebinding">2.VolumeBinding<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#2volumebinding" class="hash-link" aria-label="Direct link to 2.VolumeBinding" title="Direct link to 2.VolumeBinding">​</a></h4>
<p><code>VolumeBinding</code>是<code>PreBinding</code>作为<code>Binding</code>之前检查的<code>Volume</code>是否绑定到<code>Node</code>上面，</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="preemption抢占">Preemption(抢占)<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#preemption%E6%8A%A2%E5%8D%A0" class="hash-link" aria-label="Direct link to Preemption(抢占)" title="Direct link to Preemption(抢占)">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1defaultpreemption">1.DefaultPreemption<a href="https://lengrongfu.github.io/blog/Kubernetes-Scheduler#1defaultpreemption" class="hash-link" aria-label="Direct link to 1.DefaultPreemption" title="Direct link to 1.DefaultPreemption">​</a></h4>
<p><code>DefaultPreemption</code>是一个<code>PostFilter</code>插件，实现了默认抢占逻辑；当高优先级的<code>Pod</code>没有找到合适的<code>Node</code>时，会执行<code>Preempt</code>抢占算法，抢占的流程。</p>
<ul>
<li>一个<code>Pod</code>进入抢占的时候，首先会判断<code>Pod</code>是否拥有抢占的资格，有可能上次已经抢占过一次。</li>
<li>如果符合抢占资格，会先对所有的节点进行一次过滤，过滤出符合这次抢占要求的节点。然后</li>
<li>模拟一次调度，把优先级低的<code>Pod</code>先移除出去，再尝试能否把待抢占的<code>Pod</code>放置到此节点上。然后通过这个过程从过滤剩下的节点中选出一批节点进行抢占。</li>
<li><code>ProcessPreemptionWithExtenders</code>是一个扩展的钩子，用户可以在这里加一些自己抢占节点的策略。如果没有扩展的钩子，这里面不做任何动作。</li>
<li><code>PickOneNodeForPreemption</code>，从上面选出的节点里挑选出最合适的一个节点，策略包括：<!-- -->
<ul>
<li>优先选择打破<code>PDB</code>最少的节点；</li>
<li>其次选择待抢占<code>Pods</code>中最大优先级最小的节点；</li>
<li>再次选择待抢占<code>Pods</code>优先级加和最小的节点；</li>
<li>接下来选择待抢占<code>Pods</code>数目最小的节点；</li>
<li>最后选择拥有最晚启动<code>Pod</code>的节点；</li>
</ul>
</li>
</ul>
<p>通过过滤之后，会选出一个最合适的节点。对这个节点上待抢占的<code>Pod</code>进行<code>delete</code>，完成抢占过程。</p>]]></content>
        <author>
            <name>Leng</name>
            <uri>https://github.com/lengrongfu</uri>
        </author>
        <category label="Kubernetes" term="Kubernetes"/>
        <category label="Kubernetes Scheduler" term="Kubernetes Scheduler"/>
    </entry>
</feed>