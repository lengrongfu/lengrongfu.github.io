{"version":3,"file":"component---src-pages-404-js-4ad5790a837675fc095f.js","mappings":"uJAEMA,EAAW,SAAAC,GAAK,OACpB,sBAAIC,MAAO,CAAEC,QAAQ,eAAiBC,YAAY,SAChD,gBAAC,EAAAC,KAAD,CAAMC,GAAIL,EAAMK,IAAKL,EAAMM,YA8C/B,IA3Ce,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOF,EAAe,EAAfA,SAE3BG,EADQ,MACKF,EAASG,SAiB5B,OAdID,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAP,KAAD,CAAMC,GAAG,KAAKG,IAKhB,gBAAC,EAAAJ,KAAD,CAAMO,UAAU,mBAAmBN,GAAG,KACnCG,GAML,uBAAKG,UAAU,iBAAiB,oBAAmBF,GACjD,0BAAQE,UAAU,iBAChB,gBAAC,EAAAP,KAAD,CAAMC,GAAG,IAAIJ,MAAO,CAAEW,WAAW,OAASC,gBAAgB,SACxD,sBAAIZ,MAAO,CAAEC,QAAQ,WAAcM,IAErC,sBAAIP,MAAO,CAAEa,UAAU,OAASC,MAAM,UACpC,gBAAChB,EAAD,CAAUM,GAAG,KAAb,QACA,gBAACN,EAAD,CAAUM,GAAG,WAAb,SACA,gBAACN,EAAD,CAAUM,GAAG,SAAb,QACA,gBAACN,EAAD,CAAUM,GAAG,aAAb,WACA,gBAACN,EAAD,CAAUM,GAAG,UAAb,YAGJ,4BAAOC,GACP,oCACK,IAAIU,MAAOC,cADhB,mBAGE,qBAAGC,KAAK,4BAAR,c,uDChCFC,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMd,EAAY,EAAZA,MAC9Be,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBL,GAAeG,EAAKG,aAAaN,YACnDO,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBlB,MAExC,OACE,gBAAC,IAAD,CACEoB,eAAgB,CACdP,KAAAA,GAEFb,MAAOA,EACPqB,cAAeF,EAAY,QAAWA,EAAiB,KACvDL,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASvB,GAEX,CACEwB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAR,EAAKG,oBAAL,mBAAmBO,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAK,gBACLC,QAASvB,GAEX,CACEsB,KAAK,sBACLC,QAASN,IAEXU,OAAOb,MAKfH,EAAIiB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,8DCxEA,UAZqB,SAAC,GAAwB,IAAtBiB,EAAqB,EAArBA,KAAM9B,EAAe,EAAfA,SACtB+B,EAAYD,EAAKd,KAAKG,aAAalB,MAEzC,OACE,gBAAC,IAAD,CAAQD,SAAUA,EAAUC,MAAO8B,GACjC,gBAAC,IAAD,CAAK9B,MAAM,mBACX,4CACA","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">\n        <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n          <h3 style={{ display: `inline` }}>{title}</h3>\n        </Link>\n        <ul style={{ listStyle: `none`, float: `right` }}>\n          <ListLink to=\"/\">Home</ListLink>\n          <ListLink to=\"/about/\">About</ListLink>\n          <ListLink to=\"/tags\">Tags</ListLink>\n          <ListLink to=\"/contact/\">Contact</ListLink>\n          <ListLink to=\"/books\">Books </ListLink>\n        </ul>\n      </header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"404: Not Found\" />\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["ListLink","props","style","display","marginRight","Link","to","children","location","title","isRootPath","pathname","className","textShadow","backgroundImage","listStyle","float","Date","getFullYear","href","Seo","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","data","siteTitle"],"sourceRoot":""}